!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
A	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/channel.rs	/^    struct A;$/;"	s
AMT	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/mpsc.rs	/^    const AMT: u32 = 10000;$/;"	c
AMT	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/mpsc.rs	/^    const AMT: usize = 10_000;$/;"	c
Allow	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/sink.rs	/^struct Allow {$/;"	s
AndThen	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/future/and_then.rs	/^pub struct AndThen<A, B, F> where A: Future, B: IntoFuture {$/;"	s
AndThen	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/and_then.rs	/^pub struct AndThen<S, F, U>$/;"	s
Async	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/poll.rs	/^pub enum Async<T> {$/;"	g
AsyncRead	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/src/lib.rs	/^pub trait AsyncRead: std_io::Read {$/;"	t
AsyncSink	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/poll.rs	/^pub enum AsyncSink<T> {$/;"	g
AsyncWrite	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/src/lib.rs	/^pub trait AsyncWrite: std_io::Write {$/;"	t
BACKPRESSURE_BOUNDARY	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/io/frame.rs	/^        const BACKPRESSURE_BOUNDARY: usize = INITIAL_CAPACITY;$/;"	c
BACKPRESSURE_BOUNDARY	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/src/framed_write.rs	/^const BACKPRESSURE_BOUNDARY: usize = INITIAL_CAPACITY;$/;"	c
BUF	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/examples/sink.rs	/^    static BUF: &'static [u8] = &[0; 64 * 1024];$/;"	c
BiLock	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/sync/bilock.rs	/^pub struct BiLock<T> {$/;"	s
BiLockAcquire	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/sync/bilock.rs	/^pub struct BiLockAcquire<T> {$/;"	s
BiLockAcquired	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/sync/bilock.rs	/^pub struct BiLockAcquired<T> {$/;"	s
BiLockGuard	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/sync/bilock.rs	/^pub struct BiLockGuard<'a, T: 'a> {$/;"	s
BigDecoder	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/tests/framed_read.rs	/^    struct BigDecoder;$/;"	s
BigEndian	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.0.0/src/lib.rs	/^pub enum BigEndian {}$/;"	g
BindClient	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/lib.rs	/^    type BindClient: Service<Request = Self::ServiceRequest,$/;"	T
BindClient	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/lib.rs	/^pub trait BindClient<Kind, T: 'static>: 'static {$/;"	t
BindClient	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/simple/multiplex/client.rs	/^    type BindClient = ClientService<T, P>;$/;"	T
BindClient	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/simple/pipeline/client.rs	/^    type BindClient = ClientService<T, P>;$/;"	T
BindClient	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/multiplex/client.rs	/^    type BindClient = ClientProxy<Self::ServiceRequest, Self::ServiceResponse, Self::ServiceError>;$/;"	T
BindClient	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/pipeline/client.rs	/^    type BindClient = ClientProxy<Self::ServiceRequest, Self::ServiceResponse, Self::ServiceError>;$/;"	T
BindServer	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/lib.rs	/^pub trait BindServer<Kind, T: 'static>: 'static {$/;"	t
BindTransport	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/simple/multiplex/client.rs	/^    type BindTransport = LiftBind<T, <P::BindTransport as IntoFuture>::Future, io::Error>;$/;"	T
BindTransport	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/simple/multiplex/client.rs	/^    type BindTransport: IntoFuture<Item = Self::Transport, Error = io::Error>;$/;"	T
BindTransport	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/simple/multiplex/server.rs	/^    type BindTransport = LiftBind<T, <P::BindTransport as IntoFuture>::Future, io::Error>;$/;"	T
BindTransport	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/simple/multiplex/server.rs	/^    type BindTransport: IntoFuture<Item = Self::Transport, Error = io::Error>;$/;"	T
BindTransport	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/simple/pipeline/client.rs	/^    type BindTransport = LiftBind<T, <P::BindTransport as IntoFuture>::Future, io::Error>;$/;"	T
BindTransport	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/simple/pipeline/client.rs	/^    type BindTransport: IntoFuture<Item = Self::Transport, Error = io::Error>;$/;"	T
BindTransport	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/simple/pipeline/server.rs	/^    type BindTransport = LiftBind<T, <P::BindTransport as IntoFuture>::Future, io::Error>;$/;"	T
BindTransport	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/simple/pipeline/server.rs	/^    type BindTransport: IntoFuture<Item = Self::Transport, Error = io::Error>;$/;"	T
BindTransport	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/multiplex/client.rs	/^    type BindTransport: IntoFuture<Item = Self::Transport, Error = io::Error>;$/;"	T
BindTransport	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/multiplex/server.rs	/^    type BindTransport: IntoFuture<Item = Self::Transport, Error = io::Error>;$/;"	T
BindTransport	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/pipeline/client.rs	/^    type BindTransport: IntoFuture<Item = Self::Transport, Error = io::Error>;$/;"	T
BindTransport	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/pipeline/server.rs	/^    type BindTransport: IntoFuture<Item = Self::Transport, Error = io::Error>;$/;"	T
BindTransport	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/tests/simple_client_proto.rs	/^    type BindTransport = Result<Self::Transport, io::Error>;$/;"	T
BindTransport	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/tests/simple_framed.rs	/^    type BindTransport = Result<Self::Transport, io::Error>;$/;"	T
BindTransport	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/tests/support/mock.rs	/^    type BindTransport = Result<Self::Transport, io::Error>;$/;"	T
BindTransport	/Users/akito/workspace/tokio-toy-http/src/main.rs	/^    type BindTransport = Result<Self::Transport, io::Error>;$/;"	T
Body	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/body.rs	/^pub struct Body<T, E> {$/;"	s
BodyIn	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/multiplex/advanced.rs	/^    type BodyIn;$/;"	T
BodyIn	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/multiplex/client.rs	/^    type BodyIn = P::RequestBody;$/;"	T
BodyIn	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/multiplex/server.rs	/^    type BodyIn = P::ResponseBody;$/;"	T
BodyIn	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/pipeline/advanced.rs	/^    type BodyIn;$/;"	T
BodyIn	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/pipeline/client.rs	/^    type BodyIn = P::RequestBody;$/;"	T
BodyIn	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/pipeline/server.rs	/^    type BodyIn = P::ResponseBody;$/;"	T
BodyIn	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/tests/test_multiplex_deadlock.rs	/^        type BodyIn = T::BodyIn;$/;"	T
BodyOut	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/multiplex/advanced.rs	/^    type BodyOut;$/;"	T
BodyOut	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/multiplex/client.rs	/^    type BodyOut = P::ResponseBody;$/;"	T
BodyOut	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/multiplex/server.rs	/^    type BodyOut = P::RequestBody;$/;"	T
BodyOut	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/pipeline/advanced.rs	/^    type BodyOut;$/;"	T
BodyOut	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/pipeline/client.rs	/^    type BodyOut = P::ResponseBody;$/;"	T
BodyOut	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/pipeline/server.rs	/^    type BodyOut = P::RequestBody;$/;"	T
BodyOut	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/tests/test_multiplex_deadlock.rs	/^        type BodyOut = T::BodyOut;$/;"	T
BodySender	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/multiplex/advanced.rs	/^type BodySender<B, E> = mpsc::Sender<Result<B, E>>;$/;"	T
BodySender	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/pipeline/advanced.rs	/^type BodySender<B, E> = BufferOne<mpsc::Sender<Result<B, E>>>;$/;"	T
BorrowedTask	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/task_impl/mod.rs	/^struct BorrowedTask<'a> {$/;"	s
BoxFuture	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/future/mod.rs	/^    pub type BoxFuture<T, E> = ::std::boxed::Box<Future<Item = T, Error = E> + Send>;$/;"	T
BoxSink	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/sink/mod.rs	/^    pub type BoxSink<T, E> = ::std::boxed::Box<Sink<SinkItem = T, SinkError = E> +$/;"	T
BoxStream	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/mod.rs	/^    pub type BoxStream<T, E> = ::std::boxed::Box<Stream<Item = T, Error = E> + Send>;$/;"	T
BsDebug	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/src/debug.rs	/^pub struct BsDebug<'a>(pub &'a [u8]);$/;"	s
Buf	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/src/buf/buf.rs	/^pub trait Buf {$/;"	t
Buf	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/src/buf/into_buf.rs	/^    type Buf = Option<[u8; 1]>;$/;"	T
Buf	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/src/buf/into_buf.rs	/^    type Buf = Self;$/;"	T
Buf	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/src/buf/into_buf.rs	/^    type Buf = io::Cursor<&'a [u8]>;$/;"	T
Buf	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/src/buf/into_buf.rs	/^    type Buf = io::Cursor<&'static [u8]>;$/;"	T
Buf	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/src/buf/into_buf.rs	/^    type Buf = io::Cursor<Vec<u8>>;$/;"	T
Buf	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/src/buf/into_buf.rs	/^    type Buf: Buf;$/;"	T
Buf	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/src/bytes.rs	/^    type Buf = Cursor<&'a BytesMut>;$/;"	T
Buf	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/src/bytes.rs	/^    type Buf = Cursor<Self>;$/;"	T
BufMut	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/src/buf/buf_mut.rs	/^pub trait BufMut {$/;"	t
Buffer	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/sink/buffer.rs	/^pub struct Buffer<S: Sink> {$/;"	s
BufferOne	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/buffer_one.rs	/^pub struct BufferOne<S: Sink> {$/;"	s
BufferUnordered	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/buffer_unordered.rs	/^pub struct BufferUnordered<S>$/;"	s
Buffered	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/buffered.rs	/^pub struct Buffered<S>$/;"	s
Builder	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/src/length_delimited.rs	/^pub struct Builder {$/;"	s
ByteOrder	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.0.0/src/lib.rs	/^pub trait ByteOrder$/;"	t
Bytes	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/src/bytes.rs	/^pub struct Bytes {$/;"	s
Bytes	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/examples/connect.rs	/^struct Bytes;$/;"	s
BytesMut	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/src/bytes.rs	/^pub struct BytesMut {$/;"	s
CLIENT	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/benches/mio-ops.rs	/^    const CLIENT: Token = Token(1);$/;"	c
COMPLETE	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/future/shared.rs	/^const COMPLETE: usize = 3;$/;"	c
COMPLETE	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/task_impl/unpark_mutex.rs	/^const COMPLETE: usize = 3;      \/\/ No transitions out$/;"	c
Canceled	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/sync/oneshot.rs	/^pub struct Canceled;$/;"	s
Canceled	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/unsync/oneshot.rs	/^pub struct Canceled;$/;"	s
CatchUnwind	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/future/catch_unwind.rs	/^pub struct CatchUnwind<F> where F: Future {$/;"	s
CatchUnwind	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/catch_unwind.rs	/^pub struct CatchUnwind<S> where S: Stream {$/;"	s
CatchUnwindState	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/catch_unwind.rs	/^enum CatchUnwindState<S> {$/;"	g
Chain	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/src/buf/chain.rs	/^pub struct Chain<T, U> {$/;"	s
Chain	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/future/chain.rs	/^pub enum Chain<A, B, C> where A: Future {$/;"	g
Chain	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/chain.rs	/^pub struct Chain<S1, S2> {$/;"	s
Chunks	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/chunks.rs	/^pub struct Chunks<S>$/;"	s
ClientFuture	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/simple/multiplex/client.rs	/^pub struct ClientFuture<T, P> where T: 'static, P: ClientProto<T> {$/;"	s
ClientFuture	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/simple/pipeline/client.rs	/^pub struct ClientFuture<T, P> where T: 'static, P: ClientProto<T> {$/;"	s
ClientProto	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/simple/multiplex/client.rs	/^pub trait ClientProto<T: 'static>: 'static {$/;"	t
ClientProto	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/simple/pipeline/client.rs	/^pub trait ClientProto<T: 'static>: 'static {$/;"	t
ClientProto	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/multiplex/client.rs	/^pub trait ClientProto<T: 'static>: 'static {$/;"	t
ClientProto	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/pipeline/client.rs	/^pub trait ClientProto<T: 'static>: 'static {$/;"	t
ClientProxy	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/util/client_proxy.rs	/^pub struct ClientProxy<R, S, E> {$/;"	s
ClientService	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/simple/multiplex/client.rs	/^pub struct ClientService<T, P> where T: 'static, P: ClientProto<T> {$/;"	s
ClientService	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/simple/pipeline/client.rs	/^pub struct ClientService<T, P> where T: 'static, P: ClientProto<T> {$/;"	s
Codec	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/io/frame.rs	/^pub trait Codec {$/;"	t
Collect	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/collect.rs	/^pub struct Collect<S> where S: Stream {$/;"	s
CompleteOnDrop	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/tests/support/mock.rs	/^struct CompleteOnDrop {$/;"	s
Concat	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/concat.rs	/^pub struct Concat<S>$/;"	s
Connect	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/tcp_client.rs	/^pub struct Connect<Kind, P> {$/;"	s
Copy	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/io/copy.rs	/^pub struct Copy<R, W> {$/;"	s
Copy	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/src/copy.rs	/^pub struct Copy<R, W> {$/;"	s
Core	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/support/local_executor.rs	/^pub struct Core {$/;"	s
Core	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/reactor/mod.rs	/^pub struct Core {$/;"	s
CoreId	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/reactor/mod.rs	/^pub struct CoreId(usize);$/;"	s
DROPS	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/channel.rs	/^    static DROPS: AtomicUsize = ATOMIC_USIZE_INIT;$/;"	c
DecodeState	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/src/length_delimited.rs	/^enum DecodeState {$/;"	g
Decoder	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/src/framed_read.rs	/^pub trait Decoder {$/;"	t
Decoder	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/src/length_delimited.rs	/^struct Decoder {$/;"	s
DelayFuture	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/support/mod.rs	/^pub struct DelayFuture<F>(F,bool);$/;"	s
Direction	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/reactor/mod.rs	/^enum Direction {$/;"	g
Dispatch	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/multiplex/advanced.rs	/^pub trait Dispatch {$/;"	t
Dispatch	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/multiplex/client.rs	/^struct Dispatch<P, T, B> where$/;"	s
Dispatch	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/multiplex/server.rs	/^struct Dispatch<S, T, P> where$/;"	s
Dispatch	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/pipeline/advanced.rs	/^pub trait Dispatch {$/;"	t
Dispatch	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/pipeline/client.rs	/^struct Dispatch<P, T, B> where$/;"	s
Dispatch	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/pipeline/server.rs	/^struct Dispatch<S, T, P> where$/;"	s
DispatchSink	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/multiplex/advanced.rs	/^struct DispatchSink<T> {$/;"	s
DispatchSink	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/pipeline/advanced.rs	/^struct DispatchSink<T> {$/;"	s
Drain	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stack.rs	/^pub struct Drain<T> {$/;"	s
EasyBuf	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/io/frame.rs	/^pub struct EasyBuf {$/;"	s
EasyBufMut	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/io/frame.rs	/^pub struct EasyBufMut<'a> {$/;"	s
EchoRev	/Users/akito/workspace/tokio-toy-http/src/main.rs	/^struct EchoRev;$/;"	s
EchoServer	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/benches/latency.rs	/^struct EchoServer {$/;"	s
Either	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/future/either.rs	/^pub enum Either<A, B> {$/;"	g
ElemState	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/future/join_all.rs	/^enum ElemState<T> where T: Future {$/;"	g
Empty	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/future/empty.rs	/^pub struct Empty<T, E> {$/;"	s
Empty	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/empty.rs	/^pub struct Empty<T, E> {$/;"	s
Encoder	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/src/framed_write.rs	/^pub trait Encoder {$/;"	t
Envelope	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/util/client_proxy.rs	/^type Envelope<R, S, E> = (R, oneshot::Sender<Result<S, E>>);$/;"	T
Error	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/future/and_then.rs	/^    type Error = B::Error;$/;"	T
Error	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/future/catch_unwind.rs	/^    type Error = Box<Any + Send>;$/;"	T
Error	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/future/catch_unwind.rs	/^    type Error = F::Error;$/;"	T
Error	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/future/either.rs	/^    type Error = A::Error;$/;"	T
Error	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/future/empty.rs	/^    type Error = E;$/;"	T
Error	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/future/flatten.rs	/^    type Error = <<A as Future>::Item as IntoFuture>::Error;$/;"	T
Error	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/future/flatten_stream.rs	/^    type Error = <F::Item as Stream>::Error;$/;"	T
Error	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/future/from_err.rs	/^    type Error = E;$/;"	T
Error	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/future/fuse.rs	/^    type Error = A::Error;$/;"	T
Error	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/future/into_stream.rs	/^    type Error = F::Error;$/;"	T
Error	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/future/join.rs	/^            type Error = A::Error;$/;"	T
Error	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/future/join_all.rs	/^    type Error = <I::Item as IntoFuture>::Error;$/;"	T
Error	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/future/lazy.rs	/^    type Error = R::Error;$/;"	T
Error	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/future/loop_fn.rs	/^    type Error = A::Error;$/;"	T
Error	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/future/map.rs	/^    type Error = A::Error;$/;"	T
Error	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/future/map_err.rs	/^    type Error = U;$/;"	T
Error	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/future/mod.rs	/^        type Error = F::Error;$/;"	T
Error	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/future/mod.rs	/^    type Error = E;$/;"	T
Error	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/future/mod.rs	/^    type Error = F::Error;$/;"	T
Error	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/future/mod.rs	/^    type Error;$/;"	T
Error	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/future/option.rs	/^    type Error = E;$/;"	T
Error	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/future/or_else.rs	/^    type Error = B::Error;$/;"	T
Error	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/future/poll_fn.rs	/^    type Error = E;$/;"	T
Error	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/future/result.rs	/^    type Error = E;$/;"	T
Error	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/future/select.rs	/^    type Error = (A::Error, SelectNext<A, B>);$/;"	T
Error	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/future/select.rs	/^    type Error = A::Error;$/;"	T
Error	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/future/select2.rs	/^    type Error = Either<(A::Error, B), (B::Error, A)>;$/;"	T
Error	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/future/select_all.rs	/^    type Error = (A::Error, usize, Vec<A>);$/;"	T
Error	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/future/select_ok.rs	/^    type Error = A::Error;$/;"	T
Error	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/future/shared.rs	/^    type Error = SharedError<F::Error>;$/;"	T
Error	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/future/then.rs	/^    type Error = B::Error;$/;"	T
Error	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/sink/buffer.rs	/^    type Error = S::Error;$/;"	T
Error	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/sink/flush.rs	/^    type Error = S::SinkError;$/;"	T
Error	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/sink/from_err.rs	/^    type Error = S::Error;$/;"	T
Error	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/sink/send.rs	/^    type Error = S::SinkError;$/;"	T
Error	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/sink/send_all.rs	/^    type Error = T::SinkError;$/;"	T
Error	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/sink/with.rs	/^    type Error = S::Error;$/;"	T
Error	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/and_then.rs	/^    type Error = S::Error;$/;"	T
Error	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/buffer_unordered.rs	/^    type Error = <S as Stream>::Error;$/;"	T
Error	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/buffered.rs	/^    type Error = <S as Stream>::Error;$/;"	T
Error	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/catch_unwind.rs	/^    type Error = Box<Any + Send>;$/;"	T
Error	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/catch_unwind.rs	/^    type Error = S::Error;$/;"	T
Error	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/chain.rs	/^    type Error = S1::Error;$/;"	T
Error	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/channel.rs	/^    type Error = E;$/;"	T
Error	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/channel.rs	/^    type Error = SendError<T, E>;$/;"	T
Error	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/chunks.rs	/^    type Error = <S as Stream>::Error;$/;"	T
Error	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/collect.rs	/^    type Error = S::Error;$/;"	T
Error	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/concat.rs	/^    type Error = S::Error;$/;"	T
Error	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/empty.rs	/^    type Error = E;$/;"	T
Error	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/filter.rs	/^    type Error = S::Error;$/;"	T
Error	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/filter_map.rs	/^    type Error = S::Error;$/;"	T
Error	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/flatten.rs	/^    type Error = <S::Item as Stream>::Error;$/;"	T
Error	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/fold.rs	/^    type Error = S::Error;$/;"	T
Error	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/for_each.rs	/^    type Error = S::Error;$/;"	T
Error	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/forward.rs	/^    type Error = T::Error;$/;"	T
Error	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/from_err.rs	/^    type Error = E;$/;"	T
Error	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/fuse.rs	/^    type Error = S::Error;$/;"	T
Error	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/future.rs	/^    type Error = (S::Error, S);$/;"	T
Error	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/futures_unordered.rs	/^    type Error = F::Error;$/;"	T
Error	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/iter.rs	/^    type Error = E;$/;"	T
Error	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/map.rs	/^    type Error = S::Error;$/;"	T
Error	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/map_err.rs	/^    type Error = U;$/;"	T
Error	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/merge.rs	/^    type Error = S1::Error;$/;"	T
Error	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/mod.rs	/^        type Error = S::Error;$/;"	T
Error	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/mod.rs	/^    type Error = S::Error;$/;"	T
Error	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/mod.rs	/^    type Error;$/;"	T
Error	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/once.rs	/^    type Error = E;$/;"	T
Error	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/or_else.rs	/^    type Error = U::Error;$/;"	T
Error	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/peek.rs	/^    type Error = S::Error;$/;"	T
Error	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/repeat.rs	/^    type Error = E;$/;"	T
Error	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/select.rs	/^    type Error = S1::Error;$/;"	T
Error	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/skip.rs	/^    type Error = S::Error;$/;"	T
Error	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/skip_while.rs	/^    type Error = S::Error;$/;"	T
Error	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/split.rs	/^    type Error = S::Error;$/;"	T
Error	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/take.rs	/^    type Error = S::Error;$/;"	T
Error	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/take_while.rs	/^    type Error = S::Error;$/;"	T
Error	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/then.rs	/^    type Error = U::Error;$/;"	T
Error	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/unfold.rs	/^    type Error = Fut::Error;$/;"	T
Error	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/zip.rs	/^    type Error = S1::Error;$/;"	T
Error	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/sync/bilock.rs	/^    type Error = ();$/;"	T
Error	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/sync/mpsc/mod.rs	/^    type Error = ();$/;"	T
Error	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/sync/oneshot.rs	/^    type Error = Canceled;$/;"	T
Error	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/unsync/mpsc.rs	/^    type Error = ();$/;"	T
Error	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/unsync/oneshot.rs	/^    type Error = Canceled;$/;"	T
Error	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/bilock.rs	/^        type Error = ();$/;"	T
Error	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/eager_drop.rs	/^    type Error = F::Error;$/;"	T
Error	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/future_flatten_stream.rs	/^    type Error = E;$/;"	T
Error	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/oneshot.rs	/^    type Error = ();$/;"	T
Error	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/sink.rs	/^    type Error = S::SinkError;$/;"	T
Error	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/split.rs	/^    type Error = T::Error;$/;"	T
Error	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/stream.rs	/^        type Error = u32;$/;"	T
Error	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/support/mod.rs	/^    type Error = F::Error;$/;"	T
Error	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/benches/latency.rs	/^    type Error = io::Error;$/;"	T
Error	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/examples/connect.rs	/^    type Error = io::Error;$/;"	T
Error	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/examples/echo-udp.rs	/^    type Error = io::Error;$/;"	T
Error	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/channel.rs	/^    type Error = io::Error;$/;"	T
Error	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/io/copy.rs	/^    type Error = io::Error;$/;"	T
Error	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/io/flush.rs	/^    type Error = io::Error;$/;"	T
Error	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/io/frame.rs	/^    type Error = io::Error;$/;"	T
Error	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/io/read.rs	/^    type Error = ::std::io::Error;$/;"	T
Error	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/io/read_exact.rs	/^    type Error = io::Error;$/;"	T
Error	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/io/read_to_end.rs	/^    type Error = io::Error;$/;"	T
Error	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/io/read_until.rs	/^    type Error = io::Error;$/;"	T
Error	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/io/write_all.rs	/^    type Error = io::Error;$/;"	T
Error	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/net/tcp.rs	/^    type Error = io::Error;$/;"	T
Error	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/net/udp/frame.rs	/^    type Error = io::Error;$/;"	T
Error	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/net/udp/mod.rs	/^    type Error = io::Error;$/;"	T
Error	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/reactor/interval.rs	/^    type Error = io::Error;$/;"	T
Error	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/reactor/timeout.rs	/^    type Error = io::Error;$/;"	T
Error	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/tests/line-frames.rs	/^    type Error = io::Error;$/;"	T
Error	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/tests/udp.rs	/^    type Error = io::Error;$/;"	T
Error	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/src/copy.rs	/^    type Error = io::Error;$/;"	T
Error	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/src/flush.rs	/^    type Error = io::Error;$/;"	T
Error	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/src/framed.rs	/^    type Error = U::Error;$/;"	T
Error	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/src/framed_read.rs	/^    type Error = D::Error;$/;"	T
Error	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/src/framed_read.rs	/^    type Error = T::Error;$/;"	T
Error	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/src/framed_read.rs	/^    type Error: From<io::Error>;$/;"	T
Error	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/src/framed_write.rs	/^    type Error = T::Error;$/;"	T
Error	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/src/framed_write.rs	/^    type Error: From<io::Error>;$/;"	T
Error	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/src/length_delimited.rs	/^    type Error = T::Error;$/;"	T
Error	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/src/length_delimited.rs	/^    type Error = io::Error;$/;"	T
Error	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/src/lines.rs	/^    type Error = io::Error;$/;"	T
Error	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/src/read.rs	/^    type Error = io::Error;$/;"	T
Error	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/src/read_exact.rs	/^    type Error = io::Error;$/;"	T
Error	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/src/read_to_end.rs	/^    type Error = io::Error;$/;"	T
Error	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/src/read_until.rs	/^    type Error = io::Error;$/;"	T
Error	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/src/shutdown.rs	/^    type Error = io::Error;$/;"	T
Error	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/src/write_all.rs	/^    type Error = io::Error;$/;"	T
Error	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/tests/framed_read.rs	/^        type Error = io::Error;$/;"	T
Error	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/tests/framed_read.rs	/^    type Error = io::Error;$/;"	T
Error	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/tests/framed_write.rs	/^    type Error = io::Error;$/;"	T
Error	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/buffer_one.rs	/^    type Error = S::Error;$/;"	T
Error	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/simple/multiplex/client.rs	/^    type Error = io::Error;$/;"	T
Error	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/simple/multiplex/mod.rs	/^        type Error = io::Error;$/;"	T
Error	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/simple/multiplex/server.rs	/^    type Error = F::Error;$/;"	T
Error	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/simple/multiplex/server.rs	/^    type Error = S::Error;$/;"	T
Error	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/simple/multiplex/server.rs	/^    type Error = io::Error;$/;"	T
Error	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/simple/pipeline/client.rs	/^    type Error = io::Error;$/;"	T
Error	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/simple/pipeline/mod.rs	/^        type Error = io::Error;$/;"	T
Error	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/simple/pipeline/server.rs	/^    type Error = F::Error;$/;"	T
Error	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/simple/pipeline/server.rs	/^    type Error = S::Error;$/;"	T
Error	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/simple/pipeline/server.rs	/^    type Error = io::Error;$/;"	T
Error	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/body.rs	/^    type Error = E;$/;"	T
Error	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/multiplex/advanced.rs	/^    type Error = io::Error;$/;"	T
Error	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/multiplex/advanced.rs	/^    type Error: From<io::Error>;$/;"	T
Error	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/multiplex/client.rs	/^    type Error = P::Error;$/;"	T
Error	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/multiplex/client.rs	/^    type Error: From<io::Error> + 'static;$/;"	T
Error	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/multiplex/server.rs	/^    type Error = P::Error;$/;"	T
Error	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/multiplex/server.rs	/^    type Error: From<io::Error> + 'static;$/;"	T
Error	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/pipeline/advanced.rs	/^    type Error = io::Error;$/;"	T
Error	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/pipeline/advanced.rs	/^    type Error: From<io::Error>;$/;"	T
Error	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/pipeline/client.rs	/^    type Error = P::Error;$/;"	T
Error	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/pipeline/client.rs	/^    type Error: From<io::Error> + 'static;$/;"	T
Error	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/pipeline/server.rs	/^    type Error = P::Error;$/;"	T
Error	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/pipeline/server.rs	/^    type Error: From<io::Error> + 'static;$/;"	T
Error	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/tcp_client.rs	/^    type Error = io::Error;$/;"	T
Error	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/tcp_server.rs	/^        type Error = Error;$/;"	T
Error	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/util/client_proxy.rs	/^    type Error = E;$/;"	T
Error	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/tests/simple_client_proto.rs	/^    type Error = io::Error;$/;"	T
Error	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/tests/simple_framed.rs	/^    type Error = io::Error;$/;"	T
Error	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/tests/support/mock.rs	/^    type Error = io::Error;$/;"	T
Error	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/tests/support/service.rs	/^    type Error = io::Error;$/;"	T
Error	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/tests/test_multiplex_deadlock.rs	/^        type Error = T::Error;$/;"	T
Error	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-service-0.1.0/src/lib.rs	/^    type Error = R::Error;$/;"	T
Error	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-service-0.1.0/src/lib.rs	/^    type Error = S::Error;$/;"	T
Error	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-service-0.1.0/src/lib.rs	/^    type Error;$/;"	T
Error	/Users/akito/workspace/tokio-toy-http/src/main.rs	/^    type Error = io::Error;$/;"	T
EventSet	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/task_impl/mod.rs	/^pub trait EventSet: Send + Sync + 'static {$/;"	t
Events	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/task_impl/mod.rs	/^enum Events {$/;"	g
Exchange	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/multiplex/advanced.rs	/^struct Exchange<T: Dispatch> {$/;"	s
Executor	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/task_impl/mod.rs	/^pub trait Executor: Send + Sync + 'static {$/;"	t
Filter	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/filter.rs	/^pub struct Filter<S, F> {$/;"	s
FilterMap	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/filter_map.rs	/^pub struct FilterMap<S, F> {$/;"	s
Flag	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/sink.rs	/^struct Flag(pub AtomicBool);$/;"	s
Flatten	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/future/flatten.rs	/^pub struct Flatten<A> where A: Future, A::Item: IntoFuture {$/;"	s
Flatten	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/flatten.rs	/^pub struct Flatten<S>$/;"	s
FlattenStream	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/future/flatten_stream.rs	/^pub struct FlattenStream<F>$/;"	s
Flush	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/sink/flush.rs	/^pub struct Flush<S> {$/;"	s
Flush	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/io/flush.rs	/^pub struct Flush<A> {$/;"	s
Flush	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/src/flush.rs	/^pub struct Flush<A> {$/;"	s
FnBox	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/reactor/mod.rs	/^trait FnBox: Send + 'static {$/;"	t
Fold	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/fold.rs	/^pub struct Fold<S, F, Fut, T> where Fut: IntoFuture {$/;"	s
Foo	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/support/mod.rs	/^    struct Foo;$/;"	s
ForEach	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/for_each.rs	/^pub struct ForEach<S, F, U> where U: IntoFuture {$/;"	s
ForgetExt	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/support/mod.rs	/^pub trait ForgetExt {$/;"	t
Forward	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/forward.rs	/^pub struct Forward<T: Stream, U> {$/;"	s
Frame	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/multiplex/frame.rs	/^pub enum Frame<T, B, E> {$/;"	g
Frame	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/pipeline/frame.rs	/^pub enum Frame<T, B, E> {$/;"	g
FrameBuf	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/multiplex/frame_buf.rs	/^pub struct FrameBuf<T> {$/;"	s
FrameDeque	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/multiplex/frame_buf.rs	/^pub struct FrameDeque<T> {$/;"	s
Framed	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/io/frame.rs	/^pub struct Framed<T, C> {$/;"	s
Framed	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/src/framed.rs	/^pub struct Framed<T, U> {$/;"	s
Framed	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/src/length_delimited.rs	/^pub struct Framed<T, B: IntoBuf = BytesMut> {$/;"	s
FramedIo	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/io/mod.rs	/^pub trait FramedIo {$/;"	t
FramedRead	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/src/framed_read.rs	/^pub struct FramedRead<T, D> {$/;"	s
FramedRead	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/src/length_delimited.rs	/^pub struct FramedRead<T> {$/;"	s
FramedRead2	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/src/framed_read.rs	/^pub struct FramedRead2<T> {$/;"	s
FramedWrite	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/src/framed_write.rs	/^pub struct FramedWrite<T, E> {$/;"	s
FramedWrite	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/src/length_delimited.rs	/^pub struct FramedWrite<T, B: IntoBuf = BytesMut> {$/;"	s
FramedWrite2	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/src/framed_write.rs	/^pub struct FramedWrite2<T> {$/;"	s
FromBuf	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/src/buf/from_buf.rs	/^pub trait FromBuf {$/;"	t
FromErr	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/future/from_err.rs	/^pub struct FromErr<A, E> where A: Future {$/;"	s
FromErr	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/from_err.rs	/^pub struct FromErr<S, E> where S: Stream {$/;"	s
FromErrTest	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/sink.rs	/^struct FromErrTest;$/;"	s
FromErrTest	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/stream.rs	/^struct FromErrTest(u32);$/;"	s
Fuse	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/future/fuse.rs	/^pub struct Fuse<A: Future> {$/;"	s
Fuse	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/fuse.rs	/^pub struct Fuse<S> {$/;"	s
Fuse	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/src/framed.rs	/^pub struct Fuse<T, U>(pub T, pub U);$/;"	s
Future	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/future/join.rs	/^            type Future = $Join<A::Future, $($B::Future),*>;$/;"	T
Future	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/future/mod.rs	/^    type Future = F;$/;"	T
Future	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/future/mod.rs	/^    type Future = FutureResult<T, E>;$/;"	T
Future	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/future/mod.rs	/^    type Future: Future<Item=Self, Error=Self::Error>;$/;"	T
Future	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/future/mod.rs	/^    type Future: Future<Item=Self::Item, Error=Self::Error>;$/;"	T
Future	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/future/mod.rs	/^pub trait Future {$/;"	t
Future	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/simple/multiplex/client.rs	/^    type Future = ClientFuture<T, P>;$/;"	T
Future	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/simple/multiplex/server.rs	/^    type Future = LiftFuture<S::Future, stream::Empty<(), S::Error>>;$/;"	T
Future	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/simple/pipeline/client.rs	/^    type Future = ClientFuture<T, P>;$/;"	T
Future	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/simple/pipeline/server.rs	/^    type Future = LiftFuture<S::Future, stream::Empty<(), S::Error>>;$/;"	T
Future	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/tcp_server.rs	/^        type Future = Then<S::Future,$/;"	T
Future	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/util/client_proxy.rs	/^    type Future = Response<S, E>;$/;"	T
Future	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/tests/simple_framed.rs	/^    type Future = BoxFuture<Self::Response, io::Error>;$/;"	T
Future	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/tests/support/service.rs	/^    type Future = Box<Future<Item=U, Error=io::Error> + Send>;$/;"	T
Future	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-service-0.1.0/src/lib.rs	/^    type Future = S::Future;$/;"	T
Future	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-service-0.1.0/src/lib.rs	/^    type Future: Future<Item = Self::Response, Error = Self::Error>;$/;"	T
Future	/Users/akito/workspace/tokio-toy-http/src/main.rs	/^    type Future = BoxFuture<Self::Response, Self::Error>;$/;"	T
FutureData	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/eager_drop.rs	/^struct FutureData<F, T> {$/;"	s
FutureFrom	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/future/mod.rs	/^pub trait FutureFrom<T>: Sized {$/;"	t
FutureResult	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/future/result.rs	/^pub struct FutureResult<T, E> {$/;"	s
FutureSender	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/channel.rs	/^pub struct FutureSender<T, E> {$/;"	s
FuturesUnordered	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/futures_unordered.rs	/^pub struct FuturesUnordered<F>$/;"	s
Handle	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/reactor/mod.rs	/^pub struct Handle {$/;"	s
Header	/Users/akito/workspace/tokio-toy-http/src/http_parser.rs	/^pub struct Header<'a> {$/;"	s
Heap	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/heap.rs	/^pub struct Heap<T> {$/;"	s
HttpMethod	/Users/akito/workspace/tokio-toy-http/src/http_parser.rs	/^pub enum HttpMethod {$/;"	g
I64_MAX	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.0.0/src/lib.rs	/^    pub const I64_MAX: u64 = ::core::i64::MAX as u64;$/;"	c
IDLE	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/future/shared.rs	/^const IDLE: usize = 0;$/;"	c
INITIAL_BLOCK_SIZE	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/multiplex/frame_buf.rs	/^const INITIAL_BLOCK_SIZE: usize = 32;$/;"	c
INITIAL_CAPACITY	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/io/frame.rs	/^const INITIAL_CAPACITY: usize = 8 * 1024;$/;"	c
INITIAL_CAPACITY	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/src/framed_read.rs	/^const INITIAL_CAPACITY: usize = 8 * 1024;$/;"	c
INITIAL_CAPACITY	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/src/framed_write.rs	/^const INITIAL_CAPACITY: usize = 8 * 1024;$/;"	c
INIT_STATE	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/sync/mpsc/mod.rs	/^const INIT_STATE: usize = OPEN_MASK;$/;"	c
INLINE_CAP	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/src/bytes.rs	/^const INLINE_CAP: usize = 4 * 4 - 1;$/;"	c
INLINE_CAP	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/src/bytes.rs	/^const INLINE_CAP: usize = 4 * 8 - 1;$/;"	c
INLINE_DATA_OFFSET	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/src/bytes.rs	/^const INLINE_DATA_OFFSET: isize = 0;$/;"	c
INLINE_DATA_OFFSET	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/src/bytes.rs	/^const INLINE_DATA_OFFSET: isize = 1;$/;"	c
INLINE_LEN_MASK	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/src/bytes.rs	/^const INLINE_LEN_MASK: usize = 0b11111100;$/;"	c
INLINE_LEN_OFFSET	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/src/bytes.rs	/^const INLINE_LEN_OFFSET: usize = 2;$/;"	c
ITER	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/tests/framed_write.rs	/^    const ITER: usize = 2 * 1024;$/;"	c
ITERS	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/tests/test_bytes.rs	/^    const ITERS: usize = 1_000;$/;"	c
IdHasher	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/task_impl/data.rs	/^pub struct IdHasher {$/;"	s
In	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/examples/udp-codec.rs	/^    type In = (SocketAddr, Vec<u8>);$/;"	T
In	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/io/frame.rs	/^    type In;$/;"	T
In	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/io/mod.rs	/^    type In;$/;"	T
In	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/net/udp/frame.rs	/^    type In;$/;"	T
In	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/multiplex/advanced.rs	/^    type In;$/;"	T
In	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/multiplex/client.rs	/^    type In = P::Request;$/;"	T
In	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/multiplex/server.rs	/^    type In = P::Response;$/;"	T
In	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/pipeline/advanced.rs	/^    type In;$/;"	T
In	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/pipeline/client.rs	/^    type In = P::Request;$/;"	T
In	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/pipeline/server.rs	/^    type In = P::Response;$/;"	T
In	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/tests/test_multiplex_deadlock.rs	/^        type In = T::In;$/;"	T
InFlight	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/multiplex/server.rs	/^enum InFlight<F: Future> {$/;"	g
InFlight	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/pipeline/server.rs	/^enum InFlight<F: Future> {$/;"	g
Incoming	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/net/tcp.rs	/^pub struct Incoming {$/;"	s
Increment	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/bilock.rs	/^    struct Increment {$/;"	s
Inner	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/src/bytes.rs	/^struct Inner {$/;"	s
Inner	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/future/shared.rs	/^struct Inner<F: Future> {$/;"	s
Inner	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/concat.rs	/^enum Inner<E> {$/;"	g
Inner	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/sync/bilock.rs	/^struct Inner<T> {$/;"	s
Inner	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/sync/mpsc/mod.rs	/^struct Inner<T> {$/;"	s
Inner	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/sync/oneshot.rs	/^struct Inner<T> {$/;"	s
Inner	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/task_impl/mod.rs	/^struct Inner {$/;"	s
Inner	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/unsync/oneshot.rs	/^struct Inner<T> {$/;"	s
Inner	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/reactor/mod.rs	/^struct Inner {$/;"	s
Inner	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/body.rs	/^enum Inner<T, E> {$/;"	g
Inner	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/multiplex/frame_buf.rs	/^struct Inner<T> {$/;"	s
Inner2	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/src/bytes.rs	/^struct Inner2 {$/;"	s
Instance	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-service-0.1.0/src/lib.rs	/^    type Instance = R;$/;"	T
Instance	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-service-0.1.0/src/lib.rs	/^    type Instance = S::Instance;$/;"	T
Instance	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-service-0.1.0/src/lib.rs	/^    type Instance: Service<Request = Self::Request, Response = Self::Response, Error = Self::Error>;$/;"	T
IntCodec	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/tests/simple_client_proto.rs	/^pub struct IntCodec;$/;"	s
IntProto	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/tests/simple_client_proto.rs	/^pub struct IntProto;$/;"	s
Interval	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/reactor/interval.rs	/^pub struct Interval {$/;"	s
IntoBuf	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/src/buf/into_buf.rs	/^pub trait IntoBuf {$/;"	t
IntoFuture	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/future/mod.rs	/^pub trait IntoFuture {$/;"	t
IntoIter	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/src/bytes.rs	/^    type IntoIter = Iter<Cursor<&'a Bytes>>;$/;"	T
IntoIter	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/src/bytes.rs	/^    type IntoIter = Iter<Cursor<&'a BytesMut>>;$/;"	T
IntoIter	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/src/bytes.rs	/^    type IntoIter = Iter<Cursor<Bytes>>;$/;"	T
IntoIter	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/src/bytes.rs	/^    type IntoIter = Iter<Cursor<BytesMut>>;$/;"	T
IntoStream	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/future/into_stream.rs	/^pub struct IntoStream<F: Future> {$/;"	s
Io	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/io/mod.rs	/^pub trait Io: io::Read + io::Write {$/;"	t
Io	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/multiplex/advanced.rs	/^    type Io;$/;"	T
Io	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/multiplex/client.rs	/^    type Io = T;$/;"	T
Io	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/multiplex/server.rs	/^    type Io = T;$/;"	T
Io	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/pipeline/advanced.rs	/^    type Io;$/;"	T
Io	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/pipeline/client.rs	/^    type Io = T;$/;"	T
Io	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/pipeline/server.rs	/^    type Io = T;$/;"	T
IoFuture	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/io/mod.rs	/^pub type IoFuture<T> = BoxFuture<T, io::Error>;$/;"	T
IoFuture	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/src/lib.rs	/^pub type IoFuture<T> = BoxFuture<T, std_io::Error>;$/;"	T
IoStream	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/io/mod.rs	/^pub type IoStream<T> = BoxStream<T, io::Error>;$/;"	T
IoStream	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/src/lib.rs	/^pub type IoStream<T> = BoxStream<T, std_io::Error>;$/;"	T
IoToken	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/reactor/io_token.rs	/^pub struct IoToken {$/;"	s
Item	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/src/buf/iter.rs	/^    type Item = u8;$/;"	T
Item	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/src/bytes.rs	/^    type Item = u8;$/;"	T
Item	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/future/and_then.rs	/^    type Item = B::Item;$/;"	T
Item	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/future/catch_unwind.rs	/^    type Item = F::Item;$/;"	T
Item	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/future/catch_unwind.rs	/^    type Item = Result<F::Item, F::Error>;$/;"	T
Item	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/future/either.rs	/^    type Item = A::Item;$/;"	T
Item	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/future/empty.rs	/^    type Item = T;$/;"	T
Item	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/future/flatten.rs	/^    type Item = <<A as Future>::Item as IntoFuture>::Item;$/;"	T
Item	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/future/flatten_stream.rs	/^    type Item = <F::Item as Stream>::Item;$/;"	T
Item	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/future/from_err.rs	/^    type Item = A::Item;$/;"	T
Item	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/future/fuse.rs	/^    type Item = A::Item;$/;"	T
Item	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/future/into_stream.rs	/^    type Item = F::Item;$/;"	T
Item	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/future/join.rs	/^            type Item = (A::Item, $($B::Item),*);$/;"	T
Item	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/future/join_all.rs	/^    type Item = Vec<<I::Item as IntoFuture>::Item>;$/;"	T
Item	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/future/lazy.rs	/^    type Item = R::Item;$/;"	T
Item	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/future/loop_fn.rs	/^    type Item = T;$/;"	T
Item	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/future/map.rs	/^    type Item = U;$/;"	T
Item	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/future/map_err.rs	/^    type Item = A::Item;$/;"	T
Item	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/future/mod.rs	/^        type Item = F::Item;$/;"	T
Item	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/future/mod.rs	/^    type Item = F::Item;$/;"	T
Item	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/future/mod.rs	/^    type Item = T;$/;"	T
Item	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/future/mod.rs	/^    type Item;$/;"	T
Item	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/future/option.rs	/^    type Item = Option<T>;$/;"	T
Item	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/future/or_else.rs	/^    type Item = B::Item;$/;"	T
Item	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/future/poll_fn.rs	/^    type Item = T;$/;"	T
Item	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/future/result.rs	/^    type Item = T;$/;"	T
Item	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/future/select.rs	/^    type Item = (A::Item, SelectNext<A, B>);$/;"	T
Item	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/future/select.rs	/^    type Item = A::Item;$/;"	T
Item	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/future/select2.rs	/^    type Item = Either<(A::Item, B), (B::Item, A)>;$/;"	T
Item	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/future/select_all.rs	/^    type Item = (A::Item, usize, Vec<A>);$/;"	T
Item	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/future/select_ok.rs	/^    type Item = (A::Item, Vec<A>);$/;"	T
Item	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/future/shared.rs	/^    type Item = SharedItem<F::Item>;$/;"	T
Item	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/future/then.rs	/^    type Item = B::Item;$/;"	T
Item	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/sink/buffer.rs	/^    type Item = S::Item;$/;"	T
Item	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/sink/flush.rs	/^    type Item = S;$/;"	T
Item	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/sink/from_err.rs	/^    type Item = S::Item;$/;"	T
Item	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/sink/send.rs	/^    type Item = S;$/;"	T
Item	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/sink/send_all.rs	/^    type Item = (T, U);$/;"	T
Item	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/sink/with.rs	/^    type Item = S::Item;$/;"	T
Item	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stack.rs	/^    type Item = T;$/;"	T
Item	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/and_then.rs	/^    type Item = U::Item;$/;"	T
Item	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/buffer_unordered.rs	/^    type Item = <S::Item as IntoFuture>::Item;$/;"	T
Item	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/buffered.rs	/^    type Item = <S::Item as IntoFuture>::Item;$/;"	T
Item	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/catch_unwind.rs	/^    type Item = Result<S::Item, S::Error>;$/;"	T
Item	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/catch_unwind.rs	/^    type Item = S::Item;$/;"	T
Item	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/chain.rs	/^    type Item = S1::Item;$/;"	T
Item	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/channel.rs	/^    type Item = Sender<T, E>;$/;"	T
Item	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/channel.rs	/^    type Item = T;$/;"	T
Item	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/chunks.rs	/^    type Item = Vec<<S as Stream>::Item>;$/;"	T
Item	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/collect.rs	/^    type Item = Vec<S::Item>;$/;"	T
Item	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/concat.rs	/^    type Item = S::Item;$/;"	T
Item	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/empty.rs	/^    type Item = T;$/;"	T
Item	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/filter.rs	/^    type Item = S::Item;$/;"	T
Item	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/filter_map.rs	/^    type Item = B;$/;"	T
Item	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/flatten.rs	/^    type Item = <S::Item as Stream>::Item;$/;"	T
Item	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/fold.rs	/^    type Item = T;$/;"	T
Item	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/for_each.rs	/^    type Item = ();$/;"	T
Item	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/forward.rs	/^    type Item = (T, U);$/;"	T
Item	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/from_err.rs	/^    type Item = S::Item;$/;"	T
Item	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/fuse.rs	/^    type Item = S::Item;$/;"	T
Item	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/future.rs	/^    type Item = (Option<S::Item>, S);$/;"	T
Item	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/futures_unordered.rs	/^    type Item = F::Item;$/;"	T
Item	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/iter.rs	/^    type Item = T;$/;"	T
Item	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/map.rs	/^    type Item = U;$/;"	T
Item	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/map_err.rs	/^    type Item = S::Item;$/;"	T
Item	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/merge.rs	/^    type Item = MergedItem<S1::Item, S2::Item>;$/;"	T
Item	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/mod.rs	/^        type Item = S::Item;$/;"	T
Item	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/mod.rs	/^    type Item = S::Item;$/;"	T
Item	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/mod.rs	/^    type Item;$/;"	T
Item	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/once.rs	/^    type Item = T;$/;"	T
Item	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/or_else.rs	/^    type Item = S::Item;$/;"	T
Item	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/peek.rs	/^    type Item = S::Item;$/;"	T
Item	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/repeat.rs	/^    type Item = T;$/;"	T
Item	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/select.rs	/^    type Item = S1::Item;$/;"	T
Item	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/skip.rs	/^    type Item = S::Item;$/;"	T
Item	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/skip_while.rs	/^    type Item = S::Item;$/;"	T
Item	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/split.rs	/^    type Item = S::Item;$/;"	T
Item	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/take.rs	/^    type Item = S::Item;$/;"	T
Item	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/take_while.rs	/^    type Item = S::Item;$/;"	T
Item	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/then.rs	/^    type Item = U::Item;$/;"	T
Item	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/unfold.rs	/^    type Item = It;$/;"	T
Item	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/wait.rs	/^    type Item = Result<S::Item, S::Error>;$/;"	T
Item	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/zip.rs	/^    type Item = (S1::Item, S2::Item);$/;"	T
Item	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/sync/bilock.rs	/^    type Item = BiLockAcquired<T>;$/;"	T
Item	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/sync/mpsc/mod.rs	/^    type Item = T;$/;"	T
Item	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/sync/oneshot.rs	/^    type Item = T;$/;"	T
Item	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/unsync/mpsc.rs	/^    type Item = T;$/;"	T
Item	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/unsync/oneshot.rs	/^    type Item = T;$/;"	T
Item	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/bilock.rs	/^        type Item = BiLock<usize>;$/;"	T
Item	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/eager_drop.rs	/^    type Item = F::Item;$/;"	T
Item	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/future_flatten_stream.rs	/^    type Item = T;$/;"	T
Item	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/oneshot.rs	/^    type Item = ();$/;"	T
Item	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/sink.rs	/^    type Item = S;$/;"	T
Item	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/split.rs	/^    type Item = T::Item;$/;"	T
Item	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/stream.rs	/^        type Item = ();$/;"	T
Item	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/support/mod.rs	/^    type Item = F::Item;$/;"	T
Item	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/benches/latency.rs	/^    type Item = ();$/;"	T
Item	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/examples/connect.rs	/^    type Item = BytesMut;$/;"	T
Item	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/examples/connect.rs	/^    type Item = Vec<u8>;$/;"	T
Item	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/examples/echo-udp.rs	/^    type Item = ();$/;"	T
Item	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/channel.rs	/^    type Item = T;$/;"	T
Item	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/io/copy.rs	/^    type Item = u64;$/;"	T
Item	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/io/flush.rs	/^    type Item = A;$/;"	T
Item	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/io/frame.rs	/^    type Item = C::In;$/;"	T
Item	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/io/read.rs	/^    type Item = (R, T, usize);$/;"	T
Item	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/io/read_exact.rs	/^    type Item = (A, T);$/;"	T
Item	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/io/read_to_end.rs	/^    type Item = (A, Vec<u8>);$/;"	T
Item	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/io/read_until.rs	/^    type Item = (A, Vec<u8>);$/;"	T
Item	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/io/write_all.rs	/^    type Item = (A, T);$/;"	T
Item	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/net/tcp.rs	/^    type Item = (TcpStream, SocketAddr);$/;"	T
Item	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/net/tcp.rs	/^    type Item = TcpStream;$/;"	T
Item	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/net/udp/frame.rs	/^    type Item = C::In;$/;"	T
Item	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/net/udp/mod.rs	/^    type Item = (UdpSocket, T);$/;"	T
Item	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/net/udp/mod.rs	/^    type Item = (UdpSocket, T, usize, SocketAddr);$/;"	T
Item	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/reactor/interval.rs	/^    type Item = ();$/;"	T
Item	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/reactor/timeout.rs	/^    type Item = ();$/;"	T
Item	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/tests/line-frames.rs	/^    type Item = BytesMut;$/;"	T
Item	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/tests/udp.rs	/^    type Item = ();$/;"	T
Item	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/src/copy.rs	/^    type Item = (u64, R, W);$/;"	T
Item	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/src/flush.rs	/^    type Item = A;$/;"	T
Item	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/src/framed.rs	/^    type Item = U::Item;$/;"	T
Item	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/src/framed_read.rs	/^    type Item = D::Item;$/;"	T
Item	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/src/framed_read.rs	/^    type Item = T::Item;$/;"	T
Item	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/src/framed_read.rs	/^    type Item;$/;"	T
Item	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/src/framed_write.rs	/^    type Item = T::Item;$/;"	T
Item	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/src/framed_write.rs	/^    type Item;$/;"	T
Item	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/src/length_delimited.rs	/^    type Item = BytesMut;$/;"	T
Item	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/src/length_delimited.rs	/^    type Item = T::Item;$/;"	T
Item	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/src/lines.rs	/^    type Item = String;$/;"	T
Item	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/src/read.rs	/^    type Item = (R, T, usize);$/;"	T
Item	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/src/read_exact.rs	/^    type Item = (A, T);$/;"	T
Item	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/src/read_to_end.rs	/^    type Item = (A, Vec<u8>);$/;"	T
Item	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/src/read_until.rs	/^    type Item = (A, Vec<u8>);$/;"	T
Item	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/src/shutdown.rs	/^    type Item = A;$/;"	T
Item	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/src/write_all.rs	/^    type Item = (A, T);$/;"	T
Item	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/tests/framed_read.rs	/^        type Item = u32;$/;"	T
Item	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/tests/framed_read.rs	/^    type Item = u32;$/;"	T
Item	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/tests/framed_write.rs	/^    type Item = u32;$/;"	T
Item	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/buffer_one.rs	/^    type Item = S::Item;$/;"	T
Item	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/simple/multiplex/client.rs	/^    type Item = P::Response;$/;"	T
Item	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/simple/multiplex/mod.rs	/^        type Item = Frame<InnerItem, (), E>;$/;"	T
Item	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/simple/multiplex/mod.rs	/^        type Item = LiftTransport<F::Item, E>;$/;"	T
Item	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/simple/multiplex/server.rs	/^    type Item = Message<F::Item, T>;$/;"	T
Item	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/simple/pipeline/client.rs	/^    type Item = P::Response;$/;"	T
Item	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/simple/pipeline/mod.rs	/^        type Item = Frame<T::Item, (), E>;$/;"	T
Item	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/simple/pipeline/mod.rs	/^        type Item = LiftTransport<F::Item, E>;$/;"	T
Item	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/simple/pipeline/server.rs	/^    type Item = Message<F::Item, T>;$/;"	T
Item	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/body.rs	/^    type Item = T;$/;"	T
Item	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/multiplex/advanced.rs	/^    type Item = ();$/;"	T
Item	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/pipeline/advanced.rs	/^    type Item = ();$/;"	T
Item	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/tcp_client.rs	/^    type Item = P::BindClient;$/;"	T
Item	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/util/client_proxy.rs	/^    type Item = T;$/;"	T
Item	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/tests/simple_client_proto.rs	/^    type Item = u64;$/;"	T
Item	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/tests/simple_framed.rs	/^    type Item = multiplex::Frame<u32, (), io::Error>;$/;"	T
Item	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/tests/simple_framed.rs	/^    type Item = multiplex::Frame<u32, u32, io::Error>;$/;"	T
Item	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/tests/simple_framed.rs	/^    type Item = pipeline::Frame<u32, (), io::Error>;$/;"	T
Item	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/tests/simple_framed.rs	/^    type Item = pipeline::Frame<u32, u32, io::Error>;$/;"	T
Item	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/tests/support/mock.rs	/^    type Item = T;$/;"	T
Item	/Users/akito/workspace/tokio-toy-http/src/main.rs	/^    type Item = String;$/;"	T
Iter	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/src/buf/iter.rs	/^pub struct Iter<T> {$/;"	s
Iter	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/iter.rs	/^pub struct Iter<I> {$/;"	s
Join	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/split.rs	/^struct Join<T, U>(T, U);$/;"	s
JoinAll	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/future/join_all.rs	/^pub struct JoinAll<I>$/;"	s
KIND_ARC	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/src/bytes.rs	/^const KIND_ARC: usize = 0b00;$/;"	c
KIND_INLINE	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/src/bytes.rs	/^const KIND_INLINE: usize = 0b01;$/;"	c
KIND_MASK	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/src/bytes.rs	/^const KIND_MASK: usize = 0b11;$/;"	c
KIND_STATIC	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/src/bytes.rs	/^const KIND_STATIC: usize = 0b10;$/;"	c
KIND_VEC	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/src/bytes.rs	/^const KIND_VEC: usize = 0b11;$/;"	c
LONG	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/tests/test_bytes.rs	/^const LONG: &'static [u8] = b"mary had a little lamb, little lamb, little lamb";$/;"	c
LONG	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/tests/test_from_buf.rs	/^const LONG: &'static [u8] = b"mary had a little lamb, little lamb, little lamb";$/;"	c
Lazy	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/future/lazy.rs	/^pub struct Lazy<F, R: IntoFuture> {$/;"	s
LiftBind	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/simple/multiplex/mod.rs	/^    pub struct LiftBind<A, F, E> {$/;"	s
LiftBind	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/simple/pipeline/mod.rs	/^    pub struct LiftBind<A, F, E> {$/;"	s
LiftFuture	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/simple/multiplex/server.rs	/^struct LiftFuture<F, T>(F, marker::PhantomData<fn() -> T>);$/;"	s
LiftFuture	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/simple/pipeline/server.rs	/^struct LiftFuture<F, T>(F, marker::PhantomData<fn() -> T>);$/;"	s
LiftProto	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/simple/mod.rs	/^struct LiftProto<P>(P);$/;"	s
LiftService	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/simple/multiplex/server.rs	/^struct LiftService<S>(S);$/;"	s
LiftService	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/simple/pipeline/server.rs	/^struct LiftService<S>(S);$/;"	s
LiftTransport	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/simple/multiplex/mod.rs	/^    pub struct LiftTransport<T, E>(pub T, pub PhantomData<E>);$/;"	s
LiftTransport	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/simple/pipeline/mod.rs	/^    pub struct LiftTransport<T, E>(pub T, pub PhantomData<E>);$/;"	s
LineCodec	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/examples/udp-codec.rs	/^pub struct LineCodec;$/;"	s
LineCodec	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/tests/line-frames.rs	/^pub struct LineCodec;$/;"	s
LineCodec	/Users/akito/workspace/tokio-toy-http/src/main.rs	/^pub struct LineCodec;$/;"	s
LineProto	/Users/akito/workspace/tokio-toy-http/src/main.rs	/^pub struct LineProto;$/;"	s
Lines	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/src/lines.rs	/^pub struct Lines<A> {$/;"	s
LittleEndian	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.0.0/src/lib.rs	/^pub enum LittleEndian {}$/;"	g
LocalKey	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/task_impl/data.rs	/^pub struct LocalKey<T> {$/;"	s
LocalMap	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/task_impl/data.rs	/^pub type LocalMap = RefCell<HashMap<TypeId,$/;"	T
Lock	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/lock.rs	/^pub struct Lock<T> {$/;"	s
Loop	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/future/loop_fn.rs	/^pub enum Loop<T, S> {$/;"	g
LoopFn	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/future/loop_fn.rs	/^pub struct LoopFn<A, F> where A: IntoFuture {$/;"	s
MAX_BLOCKS	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/multiplex/frame_buf.rs	/^const MAX_BLOCKS: usize = 16;$/;"	c
MAX_BUFFER	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/sync/mpsc/mod.rs	/^const MAX_BUFFER: usize = MAX_CAPACITY >> 1;$/;"	c
MAX_BUFFERED_FRAMES	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/multiplex/advanced.rs	/^const MAX_BUFFERED_FRAMES: usize = 128;$/;"	c
MAX_CAPACITY	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/sync/mpsc/mod.rs	/^const MAX_CAPACITY: usize = !(OPEN_MASK);$/;"	c
MAX_CAPACITY	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/multiplex/frame_buf.rs	/^const MAX_CAPACITY: usize = 1_048_576;$/;"	c
MAX_IN_FLIGHT_REQUESTS	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/multiplex/server.rs	/^const MAX_IN_FLIGHT_REQUESTS: usize = 32;$/;"	c
MAX_ORIGINAL_CAPACITY	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/src/bytes.rs	/^const MAX_ORIGINAL_CAPACITY: usize = 1 << 16;$/;"	c
ManualAllow	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/sink.rs	/^struct ManualAllow<T> {$/;"	s
ManualFlush	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/sink.rs	/^struct ManualFlush<T> {$/;"	s
Map	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/future/map.rs	/^pub struct Map<A, F> where A: Future {$/;"	s
Map	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/map.rs	/^pub struct Map<S, F> {$/;"	s
MapErr	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/future/map_err.rs	/^pub struct MapErr<A, F> where A: Future {$/;"	s
MapErr	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/map_err.rs	/^pub struct MapErr<S, F> {$/;"	s
MaybeDone	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/future/join.rs	/^enum MaybeDone<A: Future> {$/;"	g
Merge	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/merge.rs	/^pub struct Merge<S1, S2: Stream> {$/;"	s
MergedItem	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/merge.rs	/^pub enum MergedItem<I1, I2> {$/;"	g
Message	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/reactor/mod.rs	/^enum Message {$/;"	g
Message	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/message.rs	/^pub enum Message<T, B> {$/;"	g
Mock	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/tests/framed_read.rs	/^struct Mock {$/;"	s
Mock	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/tests/framed_write.rs	/^struct Mock {$/;"	s
Mock	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/tests/length_delimited.rs	/^struct Mock {$/;"	s
MockBodyStream	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/tests/support/mock.rs	/^pub type MockBodyStream = Box<Stream<Item = u32, Error = io::Error> + Send>;$/;"	T
MockIo	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/tests/support/mock.rs	/^struct MockIo;$/;"	s
MockProtocol	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/tests/support/mock.rs	/^struct MockProtocol<T>(RefCell<Option<MockTransport<T>>>);$/;"	s
MockTransport	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/tests/support/mock.rs	/^struct MockTransport<T> {$/;"	s
MockTransportCtl	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/tests/support/mock.rs	/^pub struct MockTransportCtl<T> {$/;"	s
Multiplex	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/simple/multiplex/mod.rs	/^pub struct Multiplex;$/;"	s
Multiplex	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/multiplex/advanced.rs	/^pub struct Multiplex<T> where T: Dispatch {$/;"	s
MultiplexCodec	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/tests/simple_framed.rs	/^struct MultiplexCodec;$/;"	s
MultiplexMessage	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/multiplex/advanced.rs	/^pub struct MultiplexMessage<T, B, E> {$/;"	s
MultiplexProto	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/tests/simple_framed.rs	/^struct MultiplexProto;$/;"	s
MyDecoder	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/tests/framed_read.rs	/^    struct MyDecoder(Vec<u32>);$/;"	s
MyFile	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/tests/pipe-hup.rs	/^struct MyFile(File);$/;"	s
MySetReadiness	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/reactor/mod.rs	/^struct MySetReadiness(mio::SetReadiness);$/;"	s
MyStream	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/simple/multiplex/client.rs	/^type MyStream<E> = stream::Empty<(), E>;$/;"	T
MyStream	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/simple/multiplex/server.rs	/^type MyStream<E> = stream::Empty<(), E>;$/;"	T
MyStream	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/simple/pipeline/client.rs	/^type MyStream<E> = stream::Empty<(), E>;$/;"	T
MyStream	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/simple/pipeline/server.rs	/^type MyStream<E> = stream::Empty<(), E>;$/;"	T
MyTcpStream	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/examples/proxy.rs	/^struct MyTcpStream(Arc<TcpStream>);$/;"	s
N	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/bilock.rs	/^    const N: usize = 10000;$/;"	c
N	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/buffer_unordered.rs	/^    const N: usize = 4;$/;"	c
N	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/tests/buffered.rs	/^    const N: usize = 1024;$/;"	c
NEXT_ID	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/task_impl/mod.rs	/^    static NEXT_ID: AtomicUsize = ATOMIC_USIZE_INIT;$/;"	c
NEXT_LOOP_ID	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/reactor/mod.rs	/^static NEXT_LOOP_ID: AtomicUsize = ATOMIC_USIZE_INIT;$/;"	c
NITER	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.0.0/benches/bench.rs	/^            const NITER: usize = 100_000;$/;"	c
NTHREADS	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/mpsc.rs	/^    const NTHREADS: u32 = 2;$/;"	c
NTHREADS	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/mpsc.rs	/^    const NTHREADS: u32 = 8;$/;"	c
NativeEndian	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.0.0/src/lib.rs	/^pub type NativeEndian = BigEndian;$/;"	T
NativeEndian	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.0.0/src/lib.rs	/^pub type NativeEndian = LittleEndian;$/;"	T
NetworkEndian	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.0.0/src/lib.rs	/^pub type NetworkEndian = BigEndian;$/;"	T
NewService	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-service-0.1.0/src/lib.rs	/^pub trait NewService {$/;"	t
Node	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stack.rs	/^struct Node<T> {$/;"	s
Node	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/sync/mpsc/queue.rs	/^struct Node<T> {$/;"	s
OPEN_MASK	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/sync/mpsc/mod.rs	/^const OPEN_MASK: usize = 1 << 31;$/;"	c
Once	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/once.rs	/^pub struct Once<T, E>(stream::Iter<core::iter::Once<Result<T, E>>>);$/;"	s
OneOf	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/future/select.rs	/^enum OneOf<A, B> where A: Future, B: Future {$/;"	g
Op	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/tests/length_delimited.rs	/^enum Op {$/;"	g
Opaque	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/task_impl/data.rs	/^pub trait Opaque: Send {}$/;"	t
OrElse	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/future/or_else.rs	/^pub struct OrElse<A, B, F> where A: Future, B: IntoFuture {$/;"	s
OrElse	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/or_else.rs	/^pub struct OrElse<S, F, U>$/;"	s
Out	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/examples/udp-codec.rs	/^    type Out = (SocketAddr, Vec<u8>);$/;"	T
Out	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/io/frame.rs	/^    type Out;$/;"	T
Out	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/io/mod.rs	/^    type Out;$/;"	T
Out	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/net/udp/frame.rs	/^    type Out;$/;"	T
Out	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/multiplex/advanced.rs	/^    type Out;$/;"	T
Out	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/multiplex/client.rs	/^    type Out = P::Response;$/;"	T
Out	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/multiplex/server.rs	/^    type Out = P::Request;$/;"	T
Out	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/pipeline/advanced.rs	/^    type Out;$/;"	T
Out	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/pipeline/client.rs	/^    type Out = P::Response;$/;"	T
Out	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/pipeline/server.rs	/^    type Out = P::Request;$/;"	T
Out	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/tests/test_multiplex_deadlock.rs	/^        type Out = T::Out;$/;"	T
POISONED	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/future/shared.rs	/^const POISONED: usize = 4;$/;"	c
POLLING	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/future/shared.rs	/^const POLLING: usize = 1;$/;"	c
POLLING	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/task_impl/unpark_mutex.rs	/^const POLLING: usize = 1;       \/\/ --> WAITING, REPOLL, or COMPLETE$/;"	c
Pair	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/util/client_proxy.rs	/^pub type Pair<R, S, E> = (ClientProxy<R, S, E>, Receiver<R, S, E>);$/;"	T
PanickingStream	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/future_flatten_stream.rs	/^struct PanickingStream<T, E> {$/;"	s
Peek	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/stream.rs	/^    struct Peek {$/;"	s
Peekable	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/peek.rs	/^pub struct Peekable<S: Stream> {$/;"	s
Pipeline	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/simple/pipeline/mod.rs	/^pub struct Pipeline;$/;"	s
Pipeline	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/pipeline/advanced.rs	/^pub struct Pipeline<T> where T: Dispatch {$/;"	s
PipelineCodec	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/tests/simple_framed.rs	/^struct PipelineCodec;$/;"	s
PipelineMessage	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/pipeline/advanced.rs	/^pub type PipelineMessage<T, B, E> = Result<Message<T, B>, E>;$/;"	T
PipelineProto	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/tests/simple_framed.rs	/^struct PipelineProto;$/;"	s
Poll	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/poll.rs	/^pub type Poll<T, E> = Result<Async<T>, E>;$/;"	T
PollEvented	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/reactor/poll_evented.rs	/^pub struct PollEvented<E> {$/;"	s
PollFn	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/future/poll_fn.rs	/^pub struct PollFn<F> {$/;"	s
PopResult	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/sync/mpsc/queue.rs	/^pub enum PopResult<T> {$/;"	g
Queue	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/sync/mpsc/queue.rs	/^pub struct Queue<T> {$/;"	s
R	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/tests/async_read.rs	/^    struct R;$/;"	s
REPOLL	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/future/shared.rs	/^const REPOLL: usize = 2;$/;"	c
REPOLL	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/task_impl/unpark_mutex.rs	/^const REPOLL: usize = 2;        \/\/ --> POLLING$/;"	c
Read	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/io/read.rs	/^pub struct Read<R, T> {$/;"	s
Read	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/src/read.rs	/^pub struct Read<R, T> {$/;"	s
ReadBytesExt	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.0.0/src/new.rs	/^pub trait ReadBytesExt: io::Read {$/;"	t
ReadExact	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/io/read_exact.rs	/^pub struct ReadExact<A, T> {$/;"	s
ReadExact	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/src/read_exact.rs	/^pub struct ReadExact<A, T> {$/;"	s
ReadHalf	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/io/split.rs	/^pub struct ReadHalf<T> {$/;"	s
ReadHalf	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/src/split.rs	/^pub struct ReadHalf<T> {$/;"	s
ReadToEnd	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/io/read_to_end.rs	/^pub struct ReadToEnd<A> {$/;"	s
ReadToEnd	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/src/read_to_end.rs	/^pub struct ReadToEnd<A> {$/;"	s
ReadUntil	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/io/read_until.rs	/^pub struct ReadUntil<A> {$/;"	s
ReadUntil	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/src/read_until.rs	/^pub struct ReadUntil<A> {$/;"	s
Reader	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/src/buf/reader.rs	/^pub struct Reader<B> {$/;"	s
Readiness	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/reactor/mod.rs	/^enum Readiness {$/;"	g
Receiver	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/channel.rs	/^pub struct Receiver<T, E> {$/;"	s
Receiver	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/sync/mpsc/mod.rs	/^pub struct Receiver<T> {$/;"	s
Receiver	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/sync/oneshot.rs	/^pub struct Receiver<T> {$/;"	s
Receiver	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/unsync/mpsc.rs	/^pub struct Receiver<T> {$/;"	s
Receiver	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/unsync/oneshot.rs	/^pub struct Receiver<T> {$/;"	s
Receiver	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/channel.rs	/^pub struct Receiver<T> {$/;"	s
Receiver	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/util/client_proxy.rs	/^pub type Receiver<R, S, E> = mpsc::UnboundedReceiver<io::Result<Envelope<R, S, E>>>;$/;"	T
ReceiverTask	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/sync/mpsc/mod.rs	/^struct ReceiverTask {$/;"	s
RecvDgram	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/net/udp/mod.rs	/^pub struct RecvDgram<T> {$/;"	s
RecvMessage	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/tests/udp.rs	/^struct RecvMessage {$/;"	s
RecvState	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/net/udp/mod.rs	/^enum RecvState<T> {$/;"	g
Remote	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/reactor/mod.rs	/^pub struct Remote {$/;"	s
Repeat	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/repeat.rs	/^pub struct Repeat<T, E>$/;"	s
Request	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/simple/multiplex/client.rs	/^    type Request = P::Request;$/;"	T
Request	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/simple/multiplex/client.rs	/^    type Request: 'static;$/;"	T
Request	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/simple/multiplex/server.rs	/^    type Request = P::Request;$/;"	T
Request	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/simple/multiplex/server.rs	/^    type Request = streaming::Message<S::Request, streaming::Body<(), S::Error>>;$/;"	T
Request	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/simple/multiplex/server.rs	/^    type Request: 'static;$/;"	T
Request	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/simple/pipeline/client.rs	/^    type Request = P::Request;$/;"	T
Request	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/simple/pipeline/client.rs	/^    type Request: 'static;$/;"	T
Request	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/simple/pipeline/server.rs	/^    type Request = P::Request;$/;"	T
Request	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/simple/pipeline/server.rs	/^    type Request = streaming::Message<S::Request, streaming::Body<(), S::Error>>;$/;"	T
Request	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/simple/pipeline/server.rs	/^    type Request: 'static;$/;"	T
Request	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/multiplex/advanced.rs	/^enum Request<T: Dispatch> {$/;"	g
Request	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/multiplex/client.rs	/^    type Request: 'static;$/;"	T
Request	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/multiplex/server.rs	/^    type Request: 'static;$/;"	T
Request	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/pipeline/client.rs	/^    type Request: 'static;$/;"	T
Request	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/pipeline/server.rs	/^    type Request: 'static;$/;"	T
Request	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/tcp_server.rs	/^        type Request = Request;$/;"	T
Request	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/util/client_proxy.rs	/^    type Request = R;$/;"	T
Request	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/tests/simple_client_proto.rs	/^    type Request = u64;$/;"	T
Request	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/tests/simple_framed.rs	/^    type Request = Message<u32, Body<(), io::Error>>;$/;"	T
Request	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/tests/simple_framed.rs	/^    type Request = u32;$/;"	T
Request	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/tests/support/mock.rs	/^    type Request = T;$/;"	T
Request	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/tests/support/service.rs	/^    type Request = T;$/;"	T
Request	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-service-0.1.0/src/lib.rs	/^    type Request = R::Request;$/;"	T
Request	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-service-0.1.0/src/lib.rs	/^    type Request = S::Request;$/;"	T
Request	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-service-0.1.0/src/lib.rs	/^    type Request;$/;"	T
Request	/Users/akito/workspace/tokio-toy-http/src/http_parser.rs	/^pub struct Request<'a, 'b: 'a> {$/;"	s
Request	/Users/akito/workspace/tokio-toy-http/src/main.rs	/^    type Request = String;$/;"	T
RequestBody	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/simple/multiplex/client.rs	/^    type RequestBody = ();$/;"	T
RequestBody	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/simple/multiplex/server.rs	/^    type RequestBody = ();$/;"	T
RequestBody	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/simple/pipeline/client.rs	/^    type RequestBody = ();$/;"	T
RequestBody	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/simple/pipeline/server.rs	/^    type RequestBody = ();$/;"	T
RequestBody	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/multiplex/client.rs	/^    type RequestBody: 'static;$/;"	T
RequestBody	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/multiplex/server.rs	/^    type RequestBody: 'static;$/;"	T
RequestBody	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/pipeline/client.rs	/^    type RequestBody: 'static;$/;"	T
RequestBody	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/pipeline/server.rs	/^    type RequestBody: 'static;$/;"	T
RequestBody	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/tests/simple_framed.rs	/^    type RequestBody = ();$/;"	T
RequestBody	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/tests/support/mock.rs	/^    type RequestBody = U;$/;"	T
RequestId	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/simple/multiplex/mod.rs	/^pub type RequestId = u64;$/;"	T
RequestId	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/multiplex/mod.rs	/^pub type RequestId = u64;$/;"	T
Reset	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/future/shared.rs	/^            struct Reset<'a>(&'a AtomicUsize);$/;"	s
Reset	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/task_impl/mod.rs	/^    struct Reset(*const BorrowedTask<'static>);$/;"	s
Response	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/simple/multiplex/client.rs	/^    type Response = P::Response;$/;"	T
Response	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/simple/multiplex/client.rs	/^    type Response: 'static;$/;"	T
Response	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/simple/multiplex/server.rs	/^    type Response = P::Response;$/;"	T
Response	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/simple/multiplex/server.rs	/^    type Response = streaming::Message<S::Response, MyStream<S::Error>>;$/;"	T
Response	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/simple/multiplex/server.rs	/^    type Response: 'static;$/;"	T
Response	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/simple/pipeline/client.rs	/^    type Response = P::Response;$/;"	T
Response	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/simple/pipeline/client.rs	/^    type Response: 'static;$/;"	T
Response	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/simple/pipeline/server.rs	/^    type Response = P::Response;$/;"	T
Response	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/simple/pipeline/server.rs	/^    type Response = streaming::Message<S::Response, MyStream<S::Error>>;$/;"	T
Response	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/simple/pipeline/server.rs	/^    type Response: 'static;$/;"	T
Response	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/multiplex/client.rs	/^    type Response: 'static;$/;"	T
Response	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/multiplex/server.rs	/^    type Response: 'static;$/;"	T
Response	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/pipeline/client.rs	/^    type Response: 'static;$/;"	T
Response	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/pipeline/server.rs	/^    type Response: 'static;$/;"	T
Response	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/tcp_server.rs	/^        type Response = Response;$/;"	T
Response	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/util/client_proxy.rs	/^    type Response = S;$/;"	T
Response	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/util/client_proxy.rs	/^pub struct Response<T, E> {$/;"	s
Response	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/tests/simple_client_proto.rs	/^    type Response = u64;$/;"	T
Response	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/tests/simple_framed.rs	/^    type Response = Message<u32, Body<u32, io::Error>>;$/;"	T
Response	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/tests/simple_framed.rs	/^    type Response = u32;$/;"	T
Response	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/tests/support/mock.rs	/^    type Response = T;$/;"	T
Response	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/tests/support/service.rs	/^    type Response = U;$/;"	T
Response	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-service-0.1.0/src/lib.rs	/^    type Response = R::Response;$/;"	T
Response	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-service-0.1.0/src/lib.rs	/^    type Response = S::Response;$/;"	T
Response	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-service-0.1.0/src/lib.rs	/^    type Response;$/;"	T
Response	/Users/akito/workspace/tokio-toy-http/src/main.rs	/^    type Response = String;$/;"	T
ResponseBody	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/simple/multiplex/client.rs	/^    type ResponseBody = ();$/;"	T
ResponseBody	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/simple/multiplex/server.rs	/^    type ResponseBody = ();$/;"	T
ResponseBody	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/simple/pipeline/client.rs	/^    type ResponseBody = ();$/;"	T
ResponseBody	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/simple/pipeline/server.rs	/^    type ResponseBody = ();$/;"	T
ResponseBody	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/multiplex/client.rs	/^    type ResponseBody: 'static;$/;"	T
ResponseBody	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/multiplex/server.rs	/^    type ResponseBody: 'static;$/;"	T
ResponseBody	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/pipeline/client.rs	/^    type ResponseBody: 'static;$/;"	T
ResponseBody	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/pipeline/server.rs	/^    type ResponseBody: 'static;$/;"	T
ResponseBody	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/tests/simple_framed.rs	/^    type ResponseBody = u32;$/;"	T
ResponseBody	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/tests/support/mock.rs	/^    type ResponseBody = U;$/;"	T
Run	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/task_impl/mod.rs	/^pub struct Run {$/;"	s
SHORT	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/tests/test_bytes.rs	/^const SHORT: &'static [u8] = b"hello world";$/;"	c
SHORT	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/tests/test_from_buf.rs	/^const SHORT: &'static [u8] = b"hello world";$/;"	c
SIZE	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/tests/test_bytes.rs	/^    const SIZE: usize = 128 * 1024;$/;"	c
ScheduledIo	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/reactor/mod.rs	/^struct ScheduledIo {$/;"	s
ScheduledTask	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/reactor/mod.rs	/^struct ScheduledTask {$/;"	s
Select	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/future/select.rs	/^pub struct Select<A, B> where A: Future, B: Future<Item=A::Item, Error=A::Error> {$/;"	s
Select	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/select.rs	/^pub struct Select<S1, S2> {$/;"	s
Select2	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/future/select2.rs	/^pub struct Select2<A, B> {$/;"	s
SelectAll	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/future/select_all.rs	/^pub struct SelectAll<A> where A: Future {$/;"	s
SelectAllNext	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/future/select_all.rs	/^pub type SelectAllNext<A> = A;$/;"	T
SelectNext	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/future/select.rs	/^pub struct SelectNext<A, B> where A: Future, B: Future<Item=A::Item, Error=A::Error> {$/;"	s
SelectOk	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/future/select_ok.rs	/^pub struct SelectOk<A> where A: Future {$/;"	s
Send	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/sink/send.rs	/^pub struct Send<S: Sink> {$/;"	s
SendAll	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/sink/send_all.rs	/^pub struct SendAll<T, U: Stream> {$/;"	s
SendDgram	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/net/udp/mod.rs	/^pub struct SendDgram<T> {$/;"	s
SendError	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/channel.rs	/^pub struct SendError<T, E>(Result<T, E>);$/;"	s
SendError	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/sync/mpsc/mod.rs	/^pub struct SendError<T>(T);$/;"	s
SendError	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/unsync/mpsc.rs	/^pub struct SendError<T>(T);$/;"	s
SendMessage	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/tests/udp.rs	/^struct SendMessage {$/;"	s
SendState	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/net/udp/mod.rs	/^enum SendState<T> {$/;"	g
Sender	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/channel.rs	/^pub struct Sender<T, E> {$/;"	s
Sender	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/sync/mpsc/mod.rs	/^pub struct Sender<T> {$/;"	s
Sender	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/sync/oneshot.rs	/^pub struct Sender<T> {$/;"	s
Sender	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/unsync/mpsc.rs	/^pub struct Sender<T> {$/;"	s
Sender	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/unsync/oneshot.rs	/^pub struct Sender<T> {$/;"	s
Sender	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/channel.rs	/^pub struct Sender<T> {$/;"	s
SenderTask	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/sync/mpsc/mod.rs	/^type SenderTask = Arc<Mutex<Option<Task>>>;$/;"	T
Server	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/examples/echo-udp.rs	/^struct Server {$/;"	s
ServerProto	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/simple/multiplex/server.rs	/^pub trait ServerProto<T: 'static>: 'static {$/;"	t
ServerProto	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/simple/pipeline/server.rs	/^pub trait ServerProto<T: 'static>: 'static {$/;"	t
ServerProto	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/multiplex/server.rs	/^pub trait ServerProto<T: 'static>: 'static {$/;"	t
ServerProto	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/pipeline/server.rs	/^pub trait ServerProto<T: 'static>: 'static {$/;"	t
Service	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-service-0.1.0/src/lib.rs	/^pub trait Service {$/;"	t
ServiceError	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/lib.rs	/^    type ServiceError;$/;"	T
ServiceError	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/simple/multiplex/client.rs	/^    type ServiceError = io::Error;$/;"	T
ServiceError	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/simple/multiplex/server.rs	/^    type ServiceError = io::Error;$/;"	T
ServiceError	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/simple/pipeline/client.rs	/^    type ServiceError = io::Error;$/;"	T
ServiceError	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/simple/pipeline/server.rs	/^    type ServiceError = io::Error;$/;"	T
ServiceError	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/multiplex/client.rs	/^    type ServiceError = P::Error;$/;"	T
ServiceError	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/multiplex/server.rs	/^    type ServiceError = P::Error;$/;"	T
ServiceError	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/pipeline/client.rs	/^    type ServiceError = P::Error;$/;"	T
ServiceError	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/pipeline/server.rs	/^    type ServiceError = P::Error;$/;"	T
ServiceRequest	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/lib.rs	/^    type ServiceRequest;$/;"	T
ServiceRequest	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/simple/multiplex/client.rs	/^    type ServiceRequest = P::Request;$/;"	T
ServiceRequest	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/simple/multiplex/server.rs	/^    type ServiceRequest = P::Request;$/;"	T
ServiceRequest	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/simple/pipeline/client.rs	/^    type ServiceRequest = P::Request;$/;"	T
ServiceRequest	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/simple/pipeline/server.rs	/^    type ServiceRequest = P::Request;$/;"	T
ServiceRequest	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/multiplex/client.rs	/^    type ServiceRequest = Message<P::Request, B>;$/;"	T
ServiceRequest	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/multiplex/server.rs	/^    type ServiceRequest = Message<P::Request, Body<P::RequestBody, P::Error>>;$/;"	T
ServiceRequest	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/pipeline/client.rs	/^    type ServiceRequest = Message<P::Request, B>;$/;"	T
ServiceRequest	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/pipeline/server.rs	/^    type ServiceRequest = Message<P::Request, Body<P::RequestBody, P::Error>>;$/;"	T
ServiceResponse	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/lib.rs	/^    type ServiceResponse;$/;"	T
ServiceResponse	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/simple/multiplex/client.rs	/^    type ServiceResponse = P::Response;$/;"	T
ServiceResponse	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/simple/multiplex/server.rs	/^    type ServiceResponse = P::Response;$/;"	T
ServiceResponse	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/simple/pipeline/client.rs	/^    type ServiceResponse = P::Response;$/;"	T
ServiceResponse	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/simple/pipeline/server.rs	/^    type ServiceResponse = P::Response;$/;"	T
ServiceResponse	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/multiplex/client.rs	/^    type ServiceResponse = Message<P::Response, Body<P::ResponseBody, P::Error>>;$/;"	T
ServiceResponse	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/multiplex/server.rs	/^    type ServiceResponse = Message<P::Response, B>;$/;"	T
ServiceResponse	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/pipeline/client.rs	/^    type ServiceResponse = Message<P::Response, Body<P::ResponseBody, P::Error>>;$/;"	T
ServiceResponse	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/pipeline/server.rs	/^    type ServiceResponse = Message<P::Response, B>;$/;"	T
Set	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stack.rs	/^    struct Set(Rc<Cell<usize>>, usize);$/;"	s
Shared	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/src/bytes.rs	/^struct Shared {$/;"	s
Shared	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/future/shared.rs	/^pub struct Shared<F: Future> {$/;"	s
Shared	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/unsync/mpsc.rs	/^struct Shared<T> {$/;"	s
SharedError	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/future/shared.rs	/^pub struct SharedError<E> {$/;"	s
SharedItem	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/future/shared.rs	/^pub struct SharedItem<T> {$/;"	s
Shutdown	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/src/shutdown.rs	/^pub struct Shutdown<A> {$/;"	s
SimpleService	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/tests/support/service.rs	/^pub struct SimpleService<T, U> {$/;"	s
Sink	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/sink/mod.rs	/^pub trait Sink {$/;"	t
SinkError	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/sink/buffer.rs	/^    type SinkError = S::SinkError;$/;"	T
SinkError	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/sink/from_err.rs	/^    type SinkError = E;$/;"	T
SinkError	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/sink/map_err.rs	/^    type SinkError = E;$/;"	T
SinkError	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/sink/mod.rs	/^        type SinkError = (); \/\/ Change this to ! once it stabilizes$/;"	T
SinkError	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/sink/mod.rs	/^        type SinkError = S::SinkError;$/;"	T
SinkError	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/sink/mod.rs	/^    type SinkError = S::SinkError;$/;"	T
SinkError	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/sink/mod.rs	/^    type SinkError;$/;"	T
SinkError	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/sink/with.rs	/^    type SinkError = Fut::Error;$/;"	T
SinkError	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/and_then.rs	/^    type SinkError = S::SinkError;$/;"	T
SinkError	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/buffer_unordered.rs	/^    type SinkError = S::SinkError;$/;"	T
SinkError	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/buffered.rs	/^    type SinkError = S::SinkError;$/;"	T
SinkError	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/chunks.rs	/^    type SinkError = S::SinkError;$/;"	T
SinkError	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/filter.rs	/^    type SinkError = S::SinkError;$/;"	T
SinkError	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/filter_map.rs	/^    type SinkError = S::SinkError;$/;"	T
SinkError	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/flatten.rs	/^    type SinkError = S::SinkError;$/;"	T
SinkError	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/from_err.rs	/^    type SinkError = S::SinkError;$/;"	T
SinkError	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/fuse.rs	/^    type SinkError = S::SinkError;$/;"	T
SinkError	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/map.rs	/^    type SinkError = S::SinkError;$/;"	T
SinkError	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/map_err.rs	/^    type SinkError = S::SinkError;$/;"	T
SinkError	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/or_else.rs	/^    type SinkError = S::SinkError;$/;"	T
SinkError	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/peek.rs	/^    type SinkError = S::SinkError;$/;"	T
SinkError	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/skip.rs	/^    type SinkError = S::SinkError;$/;"	T
SinkError	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/skip_while.rs	/^    type SinkError = S::SinkError;$/;"	T
SinkError	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/split.rs	/^    type SinkError = S::SinkError;$/;"	T
SinkError	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/take.rs	/^    type SinkError = S::SinkError;$/;"	T
SinkError	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/take_while.rs	/^    type SinkError = S::SinkError;$/;"	T
SinkError	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/then.rs	/^    type SinkError = S::SinkError;$/;"	T
SinkError	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/sync/mpsc/mod.rs	/^    type SinkError = SendError<T>;$/;"	T
SinkError	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/unsync/mpsc.rs	/^    type SinkError = SendError<T>;$/;"	T
SinkError	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/sink.rs	/^    type SinkError = ();$/;"	T
SinkError	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/split.rs	/^    type SinkError = U::SinkError;$/;"	T
SinkError	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/channel.rs	/^    type SinkError = io::Error;$/;"	T
SinkError	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/io/frame.rs	/^    type SinkError = io::Error;$/;"	T
SinkError	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/net/udp/frame.rs	/^    type SinkError = io::Error;$/;"	T
SinkError	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/src/framed.rs	/^    type SinkError = U::Error;$/;"	T
SinkError	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/src/framed_read.rs	/^    type SinkError = T::SinkError;$/;"	T
SinkError	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/src/framed_write.rs	/^    type SinkError = E::Error;$/;"	T
SinkError	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/src/framed_write.rs	/^    type SinkError = T::Error;$/;"	T
SinkError	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/src/length_delimited.rs	/^    type SinkError = T::SinkError;$/;"	T
SinkError	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/src/length_delimited.rs	/^    type SinkError = io::Error;$/;"	T
SinkError	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/buffer_one.rs	/^    type SinkError = S::SinkError;$/;"	T
SinkError	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/simple/multiplex/mod.rs	/^        type SinkError = io::Error;$/;"	T
SinkError	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/simple/pipeline/mod.rs	/^        type SinkError = io::Error;$/;"	T
SinkError	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/multiplex/advanced.rs	/^    type SinkError = io::Error;$/;"	T
SinkError	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/pipeline/advanced.rs	/^    type SinkError = io::Error;$/;"	T
SinkError	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/tests/support/mock.rs	/^    type SinkError = io::Error;$/;"	T
SinkFromErr	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/sink/from_err.rs	/^pub struct SinkFromErr<S, E> where S: Sink {$/;"	s
SinkItem	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/sink/buffer.rs	/^    type SinkItem = S::SinkItem;$/;"	T
SinkItem	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/sink/from_err.rs	/^    type SinkItem = S::SinkItem;$/;"	T
SinkItem	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/sink/map_err.rs	/^    type SinkItem = S::SinkItem;$/;"	T
SinkItem	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/sink/mod.rs	/^        type SinkItem = S::SinkItem;$/;"	T
SinkItem	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/sink/mod.rs	/^        type SinkItem = T;$/;"	T
SinkItem	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/sink/mod.rs	/^    type SinkItem = S::SinkItem;$/;"	T
SinkItem	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/sink/mod.rs	/^    type SinkItem;$/;"	T
SinkItem	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/sink/with.rs	/^    type SinkItem = U;$/;"	T
SinkItem	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/and_then.rs	/^    type SinkItem = S::SinkItem;$/;"	T
SinkItem	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/buffer_unordered.rs	/^    type SinkItem = S::SinkItem;$/;"	T
SinkItem	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/buffered.rs	/^    type SinkItem = S::SinkItem;$/;"	T
SinkItem	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/chunks.rs	/^    type SinkItem = S::SinkItem;$/;"	T
SinkItem	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/filter.rs	/^    type SinkItem = S::SinkItem;$/;"	T
SinkItem	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/filter_map.rs	/^    type SinkItem = S::SinkItem;$/;"	T
SinkItem	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/flatten.rs	/^    type SinkItem = S::SinkItem;$/;"	T
SinkItem	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/from_err.rs	/^    type SinkItem = S::SinkItem;$/;"	T
SinkItem	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/fuse.rs	/^    type SinkItem = S::SinkItem;$/;"	T
SinkItem	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/map.rs	/^    type SinkItem = S::SinkItem;$/;"	T
SinkItem	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/map_err.rs	/^    type SinkItem = S::SinkItem;$/;"	T
SinkItem	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/or_else.rs	/^    type SinkItem = S::SinkItem;$/;"	T
SinkItem	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/peek.rs	/^    type SinkItem = S::SinkItem;$/;"	T
SinkItem	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/skip.rs	/^    type SinkItem = S::SinkItem;$/;"	T
SinkItem	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/skip_while.rs	/^    type SinkItem = S::SinkItem;$/;"	T
SinkItem	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/split.rs	/^    type SinkItem = S::SinkItem;$/;"	T
SinkItem	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/take.rs	/^    type SinkItem = S::SinkItem;$/;"	T
SinkItem	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/take_while.rs	/^    type SinkItem = S::SinkItem;$/;"	T
SinkItem	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/then.rs	/^    type SinkItem = S::SinkItem;$/;"	T
SinkItem	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/sync/mpsc/mod.rs	/^    type SinkItem = T;$/;"	T
SinkItem	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/unsync/mpsc.rs	/^    type SinkItem = T;$/;"	T
SinkItem	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/sink.rs	/^    type SinkItem = Option<T>; \/\/ Pass None to flush$/;"	T
SinkItem	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/sink.rs	/^    type SinkItem = T;$/;"	T
SinkItem	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/split.rs	/^    type SinkItem = U::SinkItem;$/;"	T
SinkItem	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/channel.rs	/^    type SinkItem = T;$/;"	T
SinkItem	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/io/frame.rs	/^    type SinkItem = C::Out;$/;"	T
SinkItem	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/net/udp/frame.rs	/^    type SinkItem = C::Out;$/;"	T
SinkItem	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/src/framed.rs	/^    type SinkItem = U::Item;$/;"	T
SinkItem	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/src/framed_read.rs	/^    type SinkItem = T::SinkItem;$/;"	T
SinkItem	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/src/framed_write.rs	/^    type SinkItem = E::Item;$/;"	T
SinkItem	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/src/framed_write.rs	/^    type SinkItem = T::Item;$/;"	T
SinkItem	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/src/length_delimited.rs	/^    type SinkItem = B;$/;"	T
SinkItem	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/src/length_delimited.rs	/^    type SinkItem = T::SinkItem;$/;"	T
SinkItem	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/buffer_one.rs	/^    type SinkItem = S::SinkItem;$/;"	T
SinkItem	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/simple/multiplex/mod.rs	/^        type SinkItem = Frame<InnerSink, (), E>;$/;"	T
SinkItem	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/simple/pipeline/mod.rs	/^        type SinkItem = Frame<T::SinkItem, (), E>;$/;"	T
SinkItem	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/multiplex/advanced.rs	/^    type SinkItem = <T::Transport as Sink>::SinkItem;$/;"	T
SinkItem	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/pipeline/advanced.rs	/^    type SinkItem = <T::Transport as Sink>::SinkItem;$/;"	T
SinkItem	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/tests/support/mock.rs	/^    type SinkItem = T;$/;"	T
SinkMapErr	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/sink/map_err.rs	/^pub struct SinkMapErr<S, F> {$/;"	s
Skip	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/skip.rs	/^pub struct Skip<S> {$/;"	s
SkipWhile	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/skip_while.rs	/^pub struct SkipWhile<S, P, R> where S: Stream, R: IntoFuture {$/;"	s
Slot	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/buffer_unordered.rs	/^enum Slot<T> {$/;"	g
Slot	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/heap.rs	/^pub struct Slot {$/;"	s
Slot	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/multiplex/frame_buf.rs	/^struct Slot<T> {$/;"	s
Spawn	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/task_impl/mod.rs	/^pub struct Spawn<T> {$/;"	s
SplitSink	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/split.rs	/^pub struct SplitSink<S>(BiLock<S>);$/;"	s
SplitStream	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/split.rs	/^pub struct SplitStream<S>(BiLock<S>);$/;"	s
Stack	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stack.rs	/^pub struct Stack<T> {$/;"	s
StartSend	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/poll.rs	/^pub type StartSend<T, E> = Result<AsyncSink<T>, E>;$/;"	T
StartSendFut	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/sink.rs	/^struct StartSendFut<S: Sink>(Option<S>, Option<S::SinkItem>);$/;"	s
State	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/future/flatten_stream.rs	/^enum State<F>$/;"	g
State	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/sink/with.rs	/^enum State<Fut, T> {$/;"	g
State	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/buffered.rs	/^enum State<S: Future> {$/;"	g
State	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/chain.rs	/^enum State<S1, S2> {$/;"	g
State	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/fold.rs	/^enum State<T, F> where F: Future {$/;"	g
State	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/unfold.rs	/^enum State<T, F> where F: Future {$/;"	g
State	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/sync/mpsc/mod.rs	/^struct State {$/;"	s
State	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/unsync/mpsc.rs	/^enum State<T> {$/;"	g
State	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/unsync/oneshot.rs	/^enum State<T> {$/;"	g
State	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/io/read.rs	/^enum State<R, T> {$/;"	g
State	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/io/read_exact.rs	/^enum State<A, T> {$/;"	g
State	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/io/read_to_end.rs	/^enum State<A> {$/;"	g
State	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/io/read_until.rs	/^enum State<A> {$/;"	g
State	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/io/write_all.rs	/^enum State<A, T> {$/;"	g
State	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/src/read.rs	/^enum State<R, T> {$/;"	g
State	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/src/read_exact.rs	/^enum State<A, T> {$/;"	g
State	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/src/read_to_end.rs	/^enum State<A> {$/;"	g
State	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/src/read_until.rs	/^enum State<A> {$/;"	g
State	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/src/write_all.rs	/^enum State<A, T> {$/;"	g
Stream	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/mod.rs	/^pub trait Stream {$/;"	t
Stream	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/multiplex/advanced.rs	/^    type Stream: Stream<Item = Self::BodyIn, Error = Self::Error>;$/;"	T
Stream	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/multiplex/client.rs	/^    type Stream = B;$/;"	T
Stream	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/multiplex/server.rs	/^    type Stream = B;$/;"	T
Stream	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/pipeline/advanced.rs	/^    type Stream: Stream<Item = Self::BodyIn, Error = Self::Error>;$/;"	T
Stream	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/pipeline/client.rs	/^    type Stream = B;$/;"	T
Stream	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/pipeline/server.rs	/^    type Stream = B;$/;"	T
StreamFuture	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/future.rs	/^pub struct StreamFuture<S> {$/;"	s
StreamingMultiplex	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/multiplex/mod.rs	/^pub struct StreamingMultiplex<B>(B);$/;"	s
StreamingPipeline	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/pipeline/mod.rs	/^pub struct StreamingPipeline<B>(B);$/;"	s
THREADS	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/tests/test_bytes.rs	/^    const THREADS: usize = 8;$/;"	c
TOKEN_FUTURE	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/reactor/mod.rs	/^const TOKEN_FUTURE: mio::Token = mio::Token(1);$/;"	c
TOKEN_MESSAGES	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/reactor/mod.rs	/^const TOKEN_MESSAGES: mio::Token = mio::Token(0);$/;"	c
TOKEN_START	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/reactor/mod.rs	/^const TOKEN_START: usize = 2;$/;"	c
Take	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/src/buf/take.rs	/^pub struct Take<T> {$/;"	s
Take	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/take.rs	/^pub struct Take<S> {$/;"	s
TakeWhile	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/take_while.rs	/^pub struct TakeWhile<S, P, R> where S: Stream, R: IntoFuture {$/;"	s
Target	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/src/bytes.rs	/^    type Target = Inner;$/;"	T
Target	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/src/bytes.rs	/^    type Target = [u8];$/;"	T
Target	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/future/shared.rs	/^    type Target = E;$/;"	T
Target	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/future/shared.rs	/^    type Target = T;$/;"	T
Target	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/lock.rs	/^    type Target = T;$/;"	T
Target	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/sync/bilock.rs	/^    type Target = T;$/;"	T
Target	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/io/frame.rs	/^    type Target = Vec<u8>;$/;"	T
Target	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/message.rs	/^    type Target = T;$/;"	T
Task	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/task_impl/mod.rs	/^pub struct Task {$/;"	s
TaskRc	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/task_impl/task_rc.rs	/^pub struct TaskRc<A> {$/;"	s
TcpClient	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/tcp_client.rs	/^pub struct TcpClient<Kind, P> {$/;"	s
TcpListener	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/net/tcp.rs	/^pub struct TcpListener {$/;"	s
TcpServer	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/tcp_server.rs	/^pub struct TcpServer<Kind, P> {$/;"	s
TcpStream	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/net/tcp.rs	/^pub struct TcpStream {$/;"	s
TcpStreamNew	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/net/tcp.rs	/^pub struct TcpStreamNew {$/;"	s
TcpStreamNewState	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/net/tcp.rs	/^enum TcpStreamNewState {$/;"	g
TestService	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/tests/simple_framed.rs	/^struct TestService;$/;"	s
Then	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/future/then.rs	/^pub struct Then<A, B, F> where A: Future, B: IntoFuture {$/;"	s
Then	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/then.rs	/^pub struct Then<S, F, U>$/;"	s
ThreadUnpark	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/task_impl/mod.rs	/^struct ThreadUnpark {$/;"	s
Timeline	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/reactor/interval.rs	/^    struct Timeline(Instant);$/;"	s
Timeout	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/reactor/timeout.rs	/^pub struct Timeout {$/;"	s
TimeoutState	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/reactor/mod.rs	/^enum TimeoutState {$/;"	g
TimeoutToken	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/reactor/timeout_token.rs	/^pub struct TimeoutToken {$/;"	s
Transport	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/simple/multiplex/client.rs	/^    type Transport = LiftTransport<P::Transport, io::Error>;$/;"	T
Transport	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/simple/multiplex/client.rs	/^    type Transport: 'static +$/;"	T
Transport	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/simple/multiplex/server.rs	/^    type Transport = LiftTransport<P::Transport, io::Error>;$/;"	T
Transport	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/simple/multiplex/server.rs	/^    type Transport: 'static +$/;"	T
Transport	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/simple/pipeline/client.rs	/^    type Transport = LiftTransport<P::Transport, io::Error>;$/;"	T
Transport	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/simple/pipeline/client.rs	/^    type Transport: 'static +$/;"	T
Transport	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/simple/pipeline/server.rs	/^    type Transport = LiftTransport<P::Transport, io::Error>;$/;"	T
Transport	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/simple/pipeline/server.rs	/^    type Transport: 'static +$/;"	T
Transport	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/multiplex/advanced.rs	/^    type Transport: Transport<Self::BodyOut,$/;"	T
Transport	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/multiplex/client.rs	/^        type Transport = P::Transport;$/;"	T
Transport	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/multiplex/client.rs	/^    type Transport:$/;"	T
Transport	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/multiplex/mod.rs	/^pub trait Transport<ReadBody>: 'static +$/;"	t
Transport	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/multiplex/server.rs	/^    type Transport = P::Transport;$/;"	T
Transport	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/multiplex/server.rs	/^    type Transport:$/;"	T
Transport	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/pipeline/advanced.rs	/^    type Transport: Transport<Item = Frame<Self::Out, Self::BodyOut, Self::Error>,$/;"	T
Transport	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/pipeline/client.rs	/^    type Transport = P::Transport;$/;"	T
Transport	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/pipeline/client.rs	/^    type Transport:$/;"	T
Transport	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/pipeline/mod.rs	/^pub trait Transport: 'static +$/;"	t
Transport	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/pipeline/server.rs	/^    type Transport = P::Transport;$/;"	T
Transport	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/pipeline/server.rs	/^    type Transport:$/;"	T
Transport	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/tests/simple_client_proto.rs	/^    type Transport = Framed<T, IntCodec>;$/;"	T
Transport	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/tests/simple_framed.rs	/^    type Transport = Framed<T, MultiplexCodec>;$/;"	T
Transport	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/tests/simple_framed.rs	/^    type Transport = Framed<T, PipelineCodec>;$/;"	T
Transport	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/tests/support/mock.rs	/^    type Transport = MockTransport<multiplex::Frame<T, U, io::Error>>;$/;"	T
Transport	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/tests/support/mock.rs	/^    type Transport = MockTransport<pipeline::Frame<T, U, io::Error>>;$/;"	T
Transport	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/tests/test_multiplex_deadlock.rs	/^    struct Transport<T: multiplex::Transport> {$/;"	s
Transport	/Users/akito/workspace/tokio-toy-http/src/main.rs	/^    type Transport = Framed<T, LineCodec>;$/;"	T
TryLock	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/lock.rs	/^pub struct TryLock<'a, T: 'a> {$/;"	s
TryPark	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/sync/mpsc/mod.rs	/^enum TryPark {$/;"	g
U32Decoder	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/tests/framed_read.rs	/^struct U32Decoder;$/;"	s
U32Encoder	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/tests/framed_write.rs	/^struct U32Encoder;$/;"	s
U64_MAX	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.0.0/src/lib.rs	/^    pub const U64_MAX: u64 = ::core::u64::MAX;$/;"	c
UdpCodec	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/net/udp/frame.rs	/^pub trait UdpCodec {$/;"	t
UdpFramed	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/net/udp/frame.rs	/^pub struct UdpFramed<C> {$/;"	s
UdpSocket	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/net/udp/mod.rs	/^pub struct UdpSocket {$/;"	s
UnboundedReceiver	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/sync/mpsc/mod.rs	/^pub struct UnboundedReceiver<T>(Receiver<T>);$/;"	s
UnboundedReceiver	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/unsync/mpsc.rs	/^pub struct UnboundedReceiver<T>(Receiver<T>);$/;"	s
UnboundedSender	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/sync/mpsc/mod.rs	/^pub struct UnboundedSender<T>(Sender<T>);$/;"	s
UnboundedSender	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/unsync/mpsc.rs	/^pub struct UnboundedSender<T>(Sender<T>);$/;"	s
Unfold	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/unfold.rs	/^pub struct Unfold<T, F, Fut> where Fut: IntoFuture {$/;"	s
Unpark	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/task_impl/mod.rs	/^pub trait Unpark: Send + Sync {$/;"	t
Unpark	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/support/local_executor.rs	/^struct Unpark {$/;"	s
UnparkEvent	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/task_impl/mod.rs	/^pub struct UnparkEvent {$/;"	s
UnparkMutex	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/task_impl/unpark_mutex.rs	/^pub struct UnparkMutex<D> {$/;"	s
Unparker	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/future/shared.rs	/^struct Unparker {$/;"	s
WAITING	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/task_impl/unpark_mutex.rs	/^const WAITING: usize = 0;       \/\/ --> POLLING$/;"	c
Wait	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/sink/wait.rs	/^pub struct Wait<S> {$/;"	s
Wait	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/wait.rs	/^pub struct Wait<S> {$/;"	s
WaitForCancel	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/oneshot.rs	/^struct WaitForCancel {$/;"	s
Window	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/io/window.rs	/^pub struct Window<T> {$/;"	s
Window	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/src/window.rs	/^pub struct Window<T> {$/;"	s
With	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/sink/with.rs	/^pub struct With<S, U, F, Fut>$/;"	s
WrapService	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/tcp_server.rs	/^    struct WrapService<S, Request, Response, Error> {$/;"	s
WriteAll	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/io/write_all.rs	/^pub struct WriteAll<A, T> {$/;"	s
WriteAll	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/src/write_all.rs	/^pub struct WriteAll<A, T> {$/;"	s
WriteBytesExt	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.0.0/src/new.rs	/^pub trait WriteBytesExt: io::Write {$/;"	t
WriteHalf	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/io/split.rs	/^pub struct WriteHalf<T> {$/;"	s
WriteHalf	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/src/split.rs	/^pub struct WriteHalf<T> {$/;"	s
WriteState	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/multiplex/advanced.rs	/^enum WriteState {$/;"	g
Writer	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/src/buf/writer.rs	/^pub struct Writer<B> {$/;"	s
Zip	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/zip.rs	/^pub struct Zip<S1: Stream, S2: Stream> {$/;"	s
_Lazy	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/future/lazy.rs	/^enum _Lazy<F, R> {$/;"	g
__A	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/task_impl/data.rs	/^                struct __A;$/;"	s
__init	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/task_impl/data.rs	/^            fn __init() -> $t { $e }$/;"	f
__key	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/task_impl/data.rs	/^            fn __key() -> ::std::any::TypeId {$/;"	f
_assert	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/src/lib.rs	/^    fn _assert<T>() {}$/;"	f
_assert_clone	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/sync/mpsc/mod.rs	/^    fn _assert_clone<T: Clone>() {}$/;"	f
_assert_kinds	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/sync/mpsc/mod.rs	/^fn _assert_kinds() {$/;"	f
_assert_kinds	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/task_impl/mod.rs	/^fn _assert_kinds() {$/;"	f
_assert_objects	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/src/lib.rs	/^fn _assert_objects() {$/;"	f
_assert_send	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/sync/mpsc/mod.rs	/^    fn _assert_send<T: Send>() {}$/;"	f
_assert_send	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/task_impl/mod.rs	/^    fn _assert_send<T: Send>() {}$/;"	f
_assert_sync	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/sync/mpsc/mod.rs	/^    fn _assert_sync<T: Sync>() {}$/;"	f
accept	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/net/tcp.rs	/^    pub fn accept(&mut self) -> io::Result<(TcpStream, SocketAddr)> {$/;"	f
accept	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/tests/tcp.rs	/^fn accept() {$/;"	f
accept2	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/tests/tcp.rs	/^fn accept2() {$/;"	f
add_source	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/reactor/mod.rs	/^    fn add_source(&mut self, source: &Evented)$/;"	f
add_timeout	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/reactor/mod.rs	/^    fn add_timeout(&mut self, at: Instant) -> usize {$/;"	f
addr	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/tcp_server.rs	/^    pub fn addr(&mut self, addr: SocketAddr) {$/;"	f
advance	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/src/buf/buf.rs	/^    fn advance(&mut self, cnt: usize) {$/;"	f
advance	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/src/buf/buf.rs	/^    fn advance(&mut self, cnt: usize);$/;"	f
advance	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/src/buf/chain.rs	/^    fn advance(&mut self, mut cnt: usize) {$/;"	f
advance	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/src/buf/take.rs	/^    fn advance(&mut self, cnt: usize) {$/;"	f
advance_mut	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/src/buf/buf_mut.rs	/^    unsafe fn advance_mut(&mut self, cnt: usize) {$/;"	f
advance_mut	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/src/buf/buf_mut.rs	/^    unsafe fn advance_mut(&mut self, cnt: usize);$/;"	f
advance_mut	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/src/buf/chain.rs	/^    unsafe fn advance_mut(&mut self, mut cnt: usize) {$/;"	f
advance_mut	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/src/bytes.rs	/^    unsafe fn advance_mut(&mut self, cnt: usize) {$/;"	f
alloc_big	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/benches/vs_easy_buf.rs	/^    fn alloc_big(b: &mut Bencher) {$/;"	f
alloc_mid	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/benches/vs_easy_buf.rs	/^    fn alloc_mid(b: &mut Bencher) {$/;"	f
alloc_small	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/benches/vs_easy_buf.rs	/^    fn alloc_small(b: &mut Bencher) {$/;"	f
alloc_write_drain_to_mid	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/benches/vs_easy_buf.rs	/^    fn alloc_write_drain_to_mid(b: &mut Bencher) {$/;"	f
allocated	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/multiplex/frame_buf.rs	/^    pub fn allocated(&self) -> usize {$/;"	f
allow_and_assert_drop	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/tests/support/mock.rs	/^    pub fn allow_and_assert_drop(&mut self) {$/;"	f
and_then	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/future/mod.rs	/^    fn and_then<F, B>(self, f: F) -> AndThen<Self, B, F>$/;"	f
and_then	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/mod.rs	/^    fn and_then<F, U>(self, f: F) -> AndThen<Self, F, U>$/;"	f
and_then	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/stream.rs	/^fn and_then() {$/;"	f
and_then1	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/eventual.rs	/^fn and_then1() {$/;"	f
and_then2	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/eventual.rs	/^fn and_then2() {$/;"	f
and_then_drops_eagerly	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/eager_drop.rs	/^fn and_then_drops_eagerly() {$/;"	f
as_mut	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/src/bytes.rs	/^    fn as_mut(&mut self) -> &mut [u8] {$/;"	f
as_mut	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/io/window.rs	/^    fn as_mut(&mut self) -> &mut [u8] {$/;"	f
as_mut	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/src/window.rs	/^    fn as_mut(&mut self) -> &mut [u8] {$/;"	f
as_raw	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/src/bytes.rs	/^    unsafe fn as_raw(&mut self) -> &mut [u8] {$/;"	f
as_raw_fd	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/net/tcp.rs	/^        fn as_raw_fd(&self) -> RawFd {$/;"	f
as_raw_fd	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/net/udp/mod.rs	/^        fn as_raw_fd(&self) -> RawFd {$/;"	f
as_ref	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/src/bytes.rs	/^    fn as_ref(&self) -> &[u8] {$/;"	f
as_ref	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/io/frame.rs	/^    fn as_ref(&self) -> &[u8] {$/;"	f
as_ref	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/io/window.rs	/^    fn as_ref(&self) -> &[u8] {$/;"	f
as_ref	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/src/window.rs	/^    fn as_ref(&self) -> &[u8] {$/;"	f
as_slice	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/io/frame.rs	/^    pub fn as_slice(&self) -> &[u8] {$/;"	f
assert_consistent	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/heap.rs	/^    fn assert_consistent(&self) {$/;"	f
assert_done	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/support/mod.rs	/^pub fn assert_done<T, F>(f: F, result: Result<T::Item, T::Error>)$/;"	f
assert_empty	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/support/mod.rs	/^pub fn assert_empty<T: Future, F: FnMut() -> T>(mut f: F) {$/;"	f
assert_future	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/future/mod.rs	/^fn assert_future<A, B, F>(t: F) -> F$/;"	f
assert_send	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/multiplex/advanced.rs	/^fn assert_send<T>(s: &mut T, item: T::SinkItem) -> Result<(), T::SinkError>$/;"	f
assert_send	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/pipeline/advanced.rs	/^fn assert_send<S: Sink>(s: &mut S, item: S::SinkItem) -> Result<(), S::SinkError> {$/;"	f
at	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/reactor/interval.rs	/^        fn at(&self, millis: u64) -> Instant {$/;"	f
at_ns	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/reactor/interval.rs	/^        fn at_ns(&self, sec: u64, nanos: u32) -> Instant {$/;"	f
bench_num	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.0.0/benches/bench.rs	/^macro_rules! bench_num {$/;"	d
big_endian	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.0.0/src/lib.rs	/^                fn big_endian() {$/;"	f
big_endian	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/src/length_delimited.rs	/^    pub fn big_endian(&mut self) -> &mut Self {$/;"	f
bind	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/net/tcp.rs	/^    pub fn bind(addr: &SocketAddr, handle: &Handle) -> io::Result<TcpListener> {$/;"	f
bind	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/net/udp/mod.rs	/^    pub fn bind(addr: &SocketAddr, handle: &Handle) -> io::Result<UdpSocket> {$/;"	f
bind_client	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/lib.rs	/^    fn bind_client(&self, handle: &Handle, io: T) -> Self::BindClient;$/;"	f
bind_client	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/simple/multiplex/client.rs	/^    fn bind_client(&self, handle: &Handle, io: T) -> Self::BindClient {$/;"	f
bind_client	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/simple/pipeline/client.rs	/^    fn bind_client(&self, handle: &Handle, io: T) -> Self::BindClient {$/;"	f
bind_client	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/multiplex/client.rs	/^    fn bind_client(&self, handle: &Handle, io: T) -> Self::BindClient {$/;"	f
bind_client	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/pipeline/client.rs	/^    fn bind_client(&self, handle: &Handle, io: T) -> Self::BindClient {$/;"	f
bind_server	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/lib.rs	/^    fn bind_server<S>(&self, handle: &Handle, io: T, service: S)$/;"	f
bind_server	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/simple/multiplex/server.rs	/^    fn bind_server<S>(&self, handle: &Handle, io: T, service: S)$/;"	f
bind_server	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/simple/pipeline/server.rs	/^    fn bind_server<S>(&self, handle: &Handle, io: T, service: S)$/;"	f
bind_server	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/multiplex/server.rs	/^    fn bind_server<S>(&self, handle: &Handle, io: T, service: S)$/;"	f
bind_server	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/pipeline/server.rs	/^    fn bind_server<S>(&self, handle: &Handle, io: T, service: S)$/;"	f
bind_transport	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/simple/multiplex/client.rs	/^    fn bind_transport(&self, io: T) -> Self::BindTransport {$/;"	f
bind_transport	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/simple/multiplex/client.rs	/^    fn bind_transport(&self, io: T) -> Self::BindTransport;$/;"	f
bind_transport	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/simple/multiplex/server.rs	/^    fn bind_transport(&self, io: T) -> Self::BindTransport {$/;"	f
bind_transport	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/simple/multiplex/server.rs	/^    fn bind_transport(&self, io: T) -> Self::BindTransport;$/;"	f
bind_transport	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/simple/pipeline/client.rs	/^    fn bind_transport(&self, io: T) -> Self::BindTransport {$/;"	f
bind_transport	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/simple/pipeline/client.rs	/^    fn bind_transport(&self, io: T) -> Self::BindTransport;$/;"	f
bind_transport	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/simple/pipeline/server.rs	/^    fn bind_transport(&self, io: T) -> Self::BindTransport {$/;"	f
bind_transport	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/simple/pipeline/server.rs	/^    fn bind_transport(&self, io: T) -> Self::BindTransport;$/;"	f
bind_transport	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/multiplex/client.rs	/^    fn bind_transport(&self, io: T) -> Self::BindTransport;$/;"	f
bind_transport	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/multiplex/server.rs	/^    fn bind_transport(&self, io: T) -> Self::BindTransport;$/;"	f
bind_transport	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/pipeline/client.rs	/^    fn bind_transport(&self, io: T) -> Self::BindTransport;$/;"	f
bind_transport	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/pipeline/server.rs	/^    fn bind_transport(&self, io: T) -> Self::BindTransport;$/;"	f
bind_transport	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/tests/simple_client_proto.rs	/^    fn bind_transport(&self, io: T) -> Self::BindTransport {$/;"	f
bind_transport	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/tests/simple_framed.rs	/^    fn bind_transport(&self, io: T) -> Self::BindTransport {$/;"	f
bind_transport	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/tests/support/mock.rs	/^    fn bind_transport(&self, _io: I)$/;"	f
bind_transport	/Users/akito/workspace/tokio-toy-http/src/main.rs	/^    fn bind_transport(&self, io: T) -> Self::BindTransport {$/;"	f
block	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/reactor/mod.rs	/^    fn block(&mut self, handle: Task) -> Option<Task> {$/;"	f
body	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/tests/test_multiplex_client.rs	/^fn body(id: RequestId, body: Option<u32>) -> Frame<&'static str, u32, io::Error> {$/;"	f
borrow	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/src/bytes.rs	/^    fn borrow(&self) -> &[u8] {$/;"	f
bounds	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/mpsc.rs	/^fn bounds() {$/;"	f
boxed	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/future/mod.rs	/^    fn boxed(self) -> BoxFuture<Self::Item, Self::Error>$/;"	f
boxed	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/mod.rs	/^    fn boxed(self) -> BoxStream<Self::Item, Self::Error>$/;"	f
broadcast	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/net/udp/mod.rs	/^    pub fn broadcast(&self) -> io::Result<bool> {$/;"	f
broken_pipe	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/multiplex/client.rs	/^fn broken_pipe() -> io::Error {$/;"	f
broken_pipe	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/pipeline/client.rs	/^fn broken_pipe() -> io::Error {$/;"	f
buffer	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/sink/mod.rs	/^    fn buffer(self, amt: usize) -> Buffer<Self>$/;"	f
buffer	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/sink.rs	/^fn buffer() {$/;"	f
buffer_noop	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/sink.rs	/^fn buffer_noop() {$/;"	f
buffer_unordered	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/mod.rs	/^    fn buffer_unordered(self, amt: usize) -> BufferUnordered<Self>$/;"	f
buffered	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/mod.rs	/^    fn buffered(self, amt: usize) -> Buffered<Self>$/;"	f
buffered	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/stream.rs	/^fn buffered() {$/;"	f
by_ref	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/src/buf/buf.rs	/^    fn by_ref(&mut self) -> &mut Self where Self: Sized {$/;"	f
by_ref	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/src/buf/buf_mut.rs	/^    fn by_ref(&mut self) -> &mut Self where Self: Sized {$/;"	f
bytes	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/src/buf/buf.rs	/^    fn bytes(&self) -> &[u8] {$/;"	f
bytes	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/src/buf/buf.rs	/^    fn bytes(&self) -> &[u8];$/;"	f
bytes	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/src/buf/chain.rs	/^    fn bytes(&self) -> &[u8] {$/;"	f
bytes	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/src/buf/take.rs	/^    fn bytes(&self) -> &[u8] {$/;"	f
bytes_mut	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/src/buf/buf_mut.rs	/^    unsafe fn bytes_mut(&mut self) -> &mut [u8] {$/;"	f
bytes_mut	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/src/buf/buf_mut.rs	/^    unsafe fn bytes_mut(&mut self) -> &mut [u8];$/;"	f
bytes_mut	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/src/buf/chain.rs	/^    unsafe fn bytes_mut(&mut self) -> &mut [u8] {$/;"	f
bytes_mut	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/src/bytes.rs	/^    unsafe fn bytes_mut(&mut self) -> &mut [u8] {$/;"	f
bytes_vec	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/src/buf/buf.rs	/^    fn bytes_vec<'a>(&'a self, dst: &mut [&'a IoVec]) -> usize {$/;"	f
bytes_vec	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/src/buf/buf.rs	/^    fn bytes_vec<'b>(&'b self, dst: &mut [&'b IoVec]) -> usize {$/;"	f
bytes_vec	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/src/buf/chain.rs	/^    fn bytes_vec<'a>(&'a self, dst: &mut [&'a IoVec]) -> usize {$/;"	f
bytes_vec_mut	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/src/buf/buf_mut.rs	/^    unsafe fn bytes_vec_mut<'a>(&'a mut self, dst: &mut [&'a mut IoVec]) -> usize {$/;"	f
bytes_vec_mut	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/src/buf/buf_mut.rs	/^    unsafe fn bytes_vec_mut<'b>(&'b mut self, dst: &mut [&'b mut IoVec]) -> usize {$/;"	f
bytes_vec_mut	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/src/buf/chain.rs	/^    unsafe fn bytes_vec_mut<'a>(&'a mut self, dst: &mut [&'a mut IoVec]) -> usize {$/;"	f
call	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/simple/multiplex/client.rs	/^    fn call(&self, req: P::Request) -> Self::Future {$/;"	f
call	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/simple/multiplex/server.rs	/^    fn call(&self, req: Self::Request) -> Self::Future {$/;"	f
call	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/simple/pipeline/client.rs	/^    fn call(&self, req: P::Request) -> Self::Future {$/;"	f
call	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/simple/pipeline/server.rs	/^    fn call(&self, req: Self::Request) -> Self::Future {$/;"	f
call	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/tcp_server.rs	/^        fn call(&self, req: Request) -> Self::Future {$/;"	f
call	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/util/client_proxy.rs	/^    fn call(&self, request: R) -> Self::Future {$/;"	f
call	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/tests/simple_framed.rs	/^    fn call(&self, _: Self::Request) -> Self::Future {$/;"	f
call	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/tests/support/service.rs	/^    fn call(&self, t: T) -> Self::Future {$/;"	f
call	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-service-0.1.0/src/lib.rs	/^    fn call(&self, req: Self::Request) -> Self::Future;$/;"	f
call	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-service-0.1.0/src/lib.rs	/^    fn call(&self, request: S::Request) -> S::Future {$/;"	f
call	/Users/akito/workspace/tokio-toy-http/src/main.rs	/^    fn call(&self, req: Self::Request) -> Self::Future {$/;"	f
call_box	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/reactor/mod.rs	/^    fn call_box(self: Box<Self>, lp: &Core) {$/;"	f
call_box	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/reactor/mod.rs	/^    fn call_box(self: Box<Self>, lp: &Core);$/;"	f
cancel	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/multiplex/advanced.rs	/^    fn cancel(&mut self, request_id: RequestId) -> io::Result<()>;$/;"	f
cancel	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/multiplex/client.rs	/^    fn cancel(&mut self, _request_id: RequestId) -> io::Result<()> {$/;"	f
cancel	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/multiplex/mod.rs	/^    fn cancel(&mut self, request_id: RequestId) -> io::Result<()> {$/;"	f
cancel	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/multiplex/server.rs	/^    fn cancel(&mut self, _request_id: RequestId) -> io::Result<()> {$/;"	f
cancel	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/pipeline/mod.rs	/^    fn cancel(&mut self) -> io::Result<()> {$/;"	f
cancel1	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/eventual.rs	/^fn cancel1() {$/;"	f
cancel_lots	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/oneshot.rs	/^fn cancel_lots() {$/;"	f
cancel_notifies	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/oneshot.rs	/^fn cancel_notifies() {$/;"	f
cancel_timeout	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/reactor/mod.rs	/^    fn cancel_timeout(&mut self, token: usize) {$/;"	f
cancel_timeout	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/reactor/timeout_token.rs	/^    pub fn cancel_timeout(&self, handle: &Remote) {$/;"	f
canceled	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/unsync-oneshot.rs	/^fn canceled() {$/;"	f
capacity	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/src/bytes.rs	/^    fn capacity(&self) -> usize {$/;"	f
capacity	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/src/bytes.rs	/^    pub fn capacity(&self) -> usize {$/;"	f
capacity	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/multiplex/frame_buf.rs	/^    pub fn capacity(&self) -> usize {$/;"	f
catch_unwind	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/future/mod.rs	/^    fn catch_unwind(self) -> CatchUnwind<Self>$/;"	f
catch_unwind	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/mod.rs	/^    fn catch_unwind(self) -> CatchUnwind<Self>$/;"	f
chain	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/src/buf/buf.rs	/^    fn chain<U>(self, next: U) -> Chain<Self, U::Buf>$/;"	f
chain	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/mod.rs	/^    fn chain<S>(self, other: S) -> Chain<Self, S>$/;"	f
chain_clients	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/tests/chain.rs	/^fn chain_clients() {$/;"	f
change_types	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/tcp_server.rs	/^            fn change_types<A, B, C, D>(r: Result<A, B>) -> Result<C, D>$/;"	f
channel	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/channel.rs	/^pub fn channel<T, E>() -> (Sender<T, E>, Receiver<T, E>) {$/;"	f
channel	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/sync/mpsc/mod.rs	/^pub fn channel<T>(buffer: usize) -> (Sender<T>, Receiver<T>) {$/;"	f
channel	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/sync/oneshot.rs	/^pub fn channel<T>() -> (Sender<T>, Receiver<T>) {$/;"	f
channel	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/unsync/mpsc.rs	/^pub fn channel<T>(buffer: usize) -> (Sender<T>, Receiver<T>) {$/;"	f
channel	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/unsync/oneshot.rs	/^pub fn channel<T>() -> (Sender<T>, Receiver<T>) {$/;"	f
channel	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/channel.rs	/^pub fn channel<T>(handle: &Handle) -> io::Result<(Sender<T>, Receiver<T>)>$/;"	f
channel2	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/sync/mpsc/mod.rs	/^fn channel2<T>(buffer: Option<usize>) -> (Sender<T>, Receiver<T>) {$/;"	f
channel_	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/unsync/mpsc.rs	/^fn channel_<T>(buffer: Option<usize>) -> (Sender<T>, Receiver<T>) {$/;"	f
check	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/sink.rs	/^    fn check(&self) -> bool {$/;"	f
check_out_body_stream	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/pipeline/advanced.rs	/^    fn check_out_body_stream(&mut self) -> bool {$/;"	f
check_to_vec	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/heap.rs	/^    fn check_to_vec(mut data: Vec<i32>) {$/;"	f
chunks	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/mod.rs	/^    fn chunks(self, capacity: usize) -> Chunks<Self>$/;"	f
chunks	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/stream.rs	/^fn chunks() {$/;"	f
chunks_panic_on_cap_zero	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/stream.rs	/^fn chunks_panic_on_cap_zero() {$/;"	f
clear	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/src/bytes.rs	/^    pub fn clear(&mut self) {$/;"	f
clear	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/multiplex/frame_buf.rs	/^    pub fn clear(&mut self) {$/;"	f
clone	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/src/bytes.rs	/^    fn clone(&self) -> Bytes {$/;"	f
clone	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/src/bytes.rs	/^    fn clone(&self) -> BytesMut {$/;"	f
clone	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/future/shared.rs	/^    fn clone(&self) -> Self {$/;"	f
clone	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/sync/mpsc/mod.rs	/^    fn clone(&self) -> Sender<T> {$/;"	f
clone	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/sync/mpsc/mod.rs	/^    fn clone(&self) -> UnboundedSender<T> {$/;"	f
clone	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/task_impl/task_rc.rs	/^    fn clone(&self) -> TaskRc<A> {$/;"	f
clone	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/unsync/mpsc.rs	/^    fn clone(&self) -> Self {$/;"	f
clone	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/channel.rs	/^    fn clone(&self) -> Sender<T> {$/;"	f
clone	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/simple/multiplex/client.rs	/^    fn clone(&self) -> Self {$/;"	f
clone	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/simple/pipeline/client.rs	/^    fn clone(&self) -> Self {$/;"	f
clone	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/util/client_proxy.rs	/^    fn clone(&self) -> Self {$/;"	f
clone_result	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/future/shared.rs	/^    unsafe fn clone_result(&self) -> Result<SharedItem<F::Item>, SharedError<F::Error>> {$/;"	f
close	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/sink/buffer.rs	/^    fn close(&mut self) -> Poll<(), Self::SinkError> {$/;"	f
close	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/sink/from_err.rs	/^    fn close(&mut self) -> Poll<(), Self::SinkError> {$/;"	f
close	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/sink/map_err.rs	/^    fn close(&mut self) -> Poll<(), Self::SinkError> {$/;"	f
close	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/sink/mod.rs	/^        fn close(&mut self) -> Poll<(), Self::SinkError> {$/;"	f
close	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/sink/mod.rs	/^    fn close(&mut self) -> Poll<(), Self::SinkError> {$/;"	f
close	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/sink/mod.rs	/^    fn close(&mut self) -> Poll<(), Self::SinkError>;$/;"	f
close	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/sink/with.rs	/^    fn close(&mut self) -> Poll<(), Fut::Error> {$/;"	f
close	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/and_then.rs	/^    fn close(&mut self) -> Poll<(), S::SinkError> {$/;"	f
close	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/buffer_unordered.rs	/^    fn close(&mut self) -> Poll<(), S::SinkError> {$/;"	f
close	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/buffered.rs	/^    fn close(&mut self) -> Poll<(), S::SinkError> {$/;"	f
close	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/chunks.rs	/^    fn close(&mut self) -> Poll<(), S::SinkError> {$/;"	f
close	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/filter.rs	/^    fn close(&mut self) -> Poll<(), S::SinkError> {$/;"	f
close	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/filter_map.rs	/^    fn close(&mut self) -> Poll<(), S::SinkError> {$/;"	f
close	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/flatten.rs	/^    fn close(&mut self) -> Poll<(), S::SinkError> {$/;"	f
close	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/from_err.rs	/^    fn close(&mut self) -> Poll<(), Self::SinkError> {$/;"	f
close	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/fuse.rs	/^    fn close(&mut self) -> Poll<(), S::SinkError> {$/;"	f
close	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/map.rs	/^    fn close(&mut self) -> Poll<(), S::SinkError> {$/;"	f
close	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/map_err.rs	/^    fn close(&mut self) -> Poll<(), S::SinkError> {$/;"	f
close	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/or_else.rs	/^    fn close(&mut self) -> Poll<(), S::SinkError> {$/;"	f
close	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/peek.rs	/^    fn close(&mut self) -> Poll<(), S::SinkError> {$/;"	f
close	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/skip.rs	/^    fn close(&mut self) -> Poll<(), S::SinkError> {$/;"	f
close	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/skip_while.rs	/^    fn close(&mut self) -> Poll<(), S::SinkError> {$/;"	f
close	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/split.rs	/^    fn close(&mut self) -> Poll<(), S::SinkError> {$/;"	f
close	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/take.rs	/^    fn close(&mut self) -> Poll<(), S::SinkError> {$/;"	f
close	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/take_while.rs	/^    fn close(&mut self) -> Poll<(), S::SinkError> {$/;"	f
close	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/then.rs	/^    fn close(&mut self) -> Poll<(), S::SinkError> {$/;"	f
close	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/sync/mpsc/mod.rs	/^    fn close(&mut self) -> Poll<(), SendError<T>> {$/;"	f
close	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/sync/mpsc/mod.rs	/^    pub fn close(&mut self) {$/;"	f
close	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/sync/oneshot.rs	/^    pub fn close(&mut self) {$/;"	f
close	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/unsync/mpsc.rs	/^    fn close(&mut self) -> Poll<(), SendError<T>> {$/;"	f
close	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/unsync/mpsc.rs	/^    pub fn close(&mut self) {$/;"	f
close	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/unsync/oneshot.rs	/^    pub fn close(&mut self) {$/;"	f
close	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/oneshot.rs	/^fn close() {$/;"	f
close	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/sink.rs	/^    fn close(&mut self) -> Poll<(), ()> {$/;"	f
close	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/split.rs	/^    fn close(&mut self) -> Poll<(), U::SinkError> {$/;"	f
close	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/channel.rs	/^    fn close(&mut self) -> Poll<(), io::Error> {$/;"	f
close	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/io/frame.rs	/^    fn close(&mut self) -> Poll<(), io::Error> {$/;"	f
close	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/net/udp/frame.rs	/^    fn close(&mut self) -> Poll<(), io::Error> {$/;"	f
close	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/src/framed.rs	/^    fn close(&mut self) -> Poll<(), Self::SinkError> {$/;"	f
close	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/src/framed_read.rs	/^    fn close(&mut self) -> Poll<(), Self::SinkError> {$/;"	f
close	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/src/framed_write.rs	/^    fn close(&mut self) -> Poll<(), Self::SinkError> {$/;"	f
close	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/src/length_delimited.rs	/^    fn close(&mut self) -> Poll<(), T::SinkError> {$/;"	f
close	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/src/length_delimited.rs	/^    fn close(&mut self) -> Poll<(), io::Error> {$/;"	f
close	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/buffer_one.rs	/^    fn close(&mut self) -> Poll<(), Self::SinkError> {$/;"	f
close	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/simple/multiplex/mod.rs	/^        fn close(&mut self) -> Poll<(), io::Error> {$/;"	f
close	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/simple/pipeline/mod.rs	/^        fn close(&mut self) -> Poll<(), io::Error> {$/;"	f
close	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/multiplex/advanced.rs	/^    fn close(&mut self) -> Poll<(), io::Error> {$/;"	f
close	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/pipeline/advanced.rs	/^    fn close(&mut self) -> Poll<(), io::Error> {$/;"	f
close_wakes	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/oneshot.rs	/^fn close_wakes() {$/;"	f
cmp	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/src/bytes.rs	/^    fn cmp(&self, other: &Bytes) -> cmp::Ordering {$/;"	f
cmp	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/src/bytes.rs	/^    fn cmp(&self, other: &BytesMut) -> cmp::Ordering {$/;"	f
cmp	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/io/frame.rs	/^    fn cmp(&self, other: &Self) -> cmp::Ordering {$/;"	f
collect	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/src/buf/buf.rs	/^    fn collect<B>(self) -> B$/;"	f
collect	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/mod.rs	/^    fn collect(self) -> Collect<Self>$/;"	f
collect_collects	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/all.rs	/^fn collect_collects() {$/;"	f
collect_to_bytes	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/tests/test_from_buf.rs	/^fn collect_to_bytes() {$/;"	f
collect_to_bytes_mut	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/tests/test_from_buf.rs	/^fn collect_to_bytes_mut() {$/;"	f
collect_to_vec	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/tests/test_from_buf.rs	/^fn collect_to_vec() {$/;"	f
collect_two_bufs	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/tests/test_chain.rs	/^fn collect_two_bufs() {$/;"	f
complete	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/future/shared.rs	/^    fn complete(&self) {$/;"	f
complete	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/sync/oneshot.rs	/^    pub fn complete(self, t: T) {$/;"	f
complete	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/task_impl/unpark_mutex.rs	/^    pub unsafe fn complete(&self) {$/;"	f
concat	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/mod.rs	/^    fn concat(self) -> Concat<Self>$/;"	f
concat	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/stream.rs	/^fn concat() {$/;"	f
concurrent	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/bilock.rs	/^fn concurrent() {$/;"	f
configure_tcp	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/tcp_server.rs	/^fn configure_tcp(_workers: usize, _tcp: &net2::TcpBuilder) -> io::Result<()> {$/;"	f
configure_tcp	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/tcp_server.rs	/^fn configure_tcp(workers: usize, tcp: &net2::TcpBuilder) -> io::Result<()> {$/;"	f
connect	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/net/tcp.rs	/^    pub fn connect(addr: &SocketAddr, handle: &Handle) -> TcpStreamNew {$/;"	f
connect	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/tests/tcp.rs	/^fn connect() {$/;"	f
connect	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/tcp_client.rs	/^    pub fn connect(&self, addr: &SocketAddr, handle: &Handle) -> Connect<Kind, P> {$/;"	f
connect_stream	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/net/tcp.rs	/^    pub fn connect_stream(stream: net::TcpStream,$/;"	f
consume_queue	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/reactor/mod.rs	/^    fn consume_queue(&self) {$/;"	f
consume_timeouts	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/reactor/mod.rs	/^    fn consume_timeouts(&mut self, now: Instant) {$/;"	f
copy	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/io/copy.rs	/^pub fn copy<R, W>(reader: R, writer: W) -> Copy<R, W>$/;"	f
copy	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/src/copy.rs	/^pub fn copy<R, W>(reader: R, writer: W) -> Copy<R, W>$/;"	f
copy_to_slice	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/src/buf/buf.rs	/^    fn copy_to_slice(&mut self, dst: &mut [u8]) {$/;"	f
d	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/all.rs	/^    fn d<T, U, E>(r: Result<(T, U), (E, U)>) -> Result<T, E> {$/;"	f
data_remaining_is_error	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/tests/framed_read.rs	/^fn data_remaining_is_error() {$/;"	f
debug_empty_easybuf	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/io/frame.rs	/^    fn debug_empty_easybuf() {$/;"	f
debug_large_easybuf	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/io/frame.rs	/^    fn debug_large_easybuf() {$/;"	f
debug_small_easybuf	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/io/frame.rs	/^    fn debug_small_easybuf() {$/;"	f
debug_small_easybuf_split	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/io/frame.rs	/^    fn debug_small_easybuf_split() {$/;"	f
dec_num_messages	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/sync/mpsc/mod.rs	/^    fn dec_num_messages(&self) {$/;"	f
decode	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/examples/connect.rs	/^    fn decode(&mut self, buf: &mut BytesMut) -> io::Result<Option<BytesMut>> {$/;"	f
decode	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/examples/udp-codec.rs	/^    fn decode(&mut self, addr: &SocketAddr, buf: &[u8]) -> io::Result<Self::In> {$/;"	f
decode	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/io/frame.rs	/^    fn decode(&mut self, buf: &mut EasyBuf) -> io::Result<Option<Self::In>>;$/;"	f
decode	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/net/udp/frame.rs	/^    fn decode(&mut self, src: &SocketAddr, buf: &[u8]) -> io::Result<Self::In>;$/;"	f
decode	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/tests/line-frames.rs	/^    fn decode(&mut self, buf: &mut BytesMut) -> Result<Option<BytesMut>, io::Error> {$/;"	f
decode	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/src/framed.rs	/^    fn decode(&mut self, buffer: &mut BytesMut) -> Result<Option<Self::Item>, Self::Error> {$/;"	f
decode	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/src/framed_read.rs	/^    fn decode(&mut self, src: &mut BytesMut) -> Result<Option<Self::Item>, Self::Error>;$/;"	f
decode	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/src/framed_write.rs	/^    fn decode(&mut self, src: &mut BytesMut) -> Result<Option<T::Item>, T::Error> {$/;"	f
decode	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/src/length_delimited.rs	/^    fn decode(&mut self, src: &mut BytesMut) -> io::Result<Option<BytesMut>> {$/;"	f
decode	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/tests/framed_read.rs	/^        fn decode(&mut self, _buf: &mut BytesMut) -> io::Result<Option<u32>> {$/;"	f
decode	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/tests/framed_read.rs	/^        fn decode(&mut self, buf: &mut BytesMut) -> io::Result<Option<u32>> {$/;"	f
decode	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/tests/framed_read.rs	/^    fn decode(&mut self, buf: &mut BytesMut) -> io::Result<Option<u32>> {$/;"	f
decode	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/tests/simple_client_proto.rs	/^    fn decode(&mut self, buf: &mut BytesMut) -> Result<Option<u64>, io::Error> {$/;"	f
decode	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/tests/simple_framed.rs	/^    fn decode(&mut self, _: &mut BytesMut) -> io::Result<Option<Self::Item>> {$/;"	f
decode	/Users/akito/workspace/tokio-toy-http/src/main.rs	/^    fn decode(&mut self, buf: &mut BytesMut) -> io::Result<Option<String>> {$/;"	f
decode_data	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/src/length_delimited.rs	/^    fn decode_data(&self, n: usize, src: &mut BytesMut) -> io::Result<Option<BytesMut>> {$/;"	f
decode_eof	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/examples/connect.rs	/^    fn decode_eof(&mut self, buf: &mut BytesMut) -> io::Result<Option<BytesMut>> {$/;"	f
decode_eof	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/io/frame.rs	/^    fn decode_eof(&mut self, buf: &mut EasyBuf) -> io::Result<Self::In> {$/;"	f
decode_eof	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/tests/line-frames.rs	/^    fn decode_eof(&mut self, buf: &mut BytesMut) -> io::Result<Option<BytesMut>> {$/;"	f
decode_eof	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/src/framed.rs	/^    fn decode_eof(&mut self, buffer: &mut BytesMut) -> Result<Option<Self::Item>, Self::Error> {$/;"	f
decode_eof	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/src/framed_read.rs	/^    fn decode_eof(&mut self, buf: &mut BytesMut) -> Result<Option<Self::Item>, Self::Error> {$/;"	f
decode_eof	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/src/framed_write.rs	/^    fn decode_eof(&mut self, src: &mut BytesMut) -> Result<Option<T::Item>, T::Error> {$/;"	f
decode_eof	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/tests/framed_read.rs	/^        fn decode_eof(&mut self, _buf: &mut BytesMut) -> io::Result<Option<u32>> {$/;"	f
decode_eof	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/tests/simple_client_proto.rs	/^    fn decode_eof(&mut self, buf: &mut BytesMut) -> io::Result<Option<u64>> {$/;"	f
decode_head	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/src/length_delimited.rs	/^    fn decode_head(&mut self, src: &mut BytesMut) -> io::Result<Option<usize>> {$/;"	f
decode_state	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/sync/mpsc/mod.rs	/^fn decode_state(num: usize) -> State {$/;"	f
decoder	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/src/framed_read.rs	/^    pub fn decoder(&self) -> &D {$/;"	f
decoder_mut	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/src/framed_read.rs	/^    pub fn decoder_mut(&mut self) -> &mut D {$/;"	f
default	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.0.0/src/lib.rs	/^    fn default() -> BigEndian {$/;"	f
default	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.0.0/src/lib.rs	/^    fn default() -> LittleEndian {$/;"	f
default	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/task_impl/data.rs	/^    fn default() -> IdHasher {$/;"	f
delay_future	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/support/mod.rs	/^pub fn delay_future<F>(f: F) -> DelayFuture<F::Future>$/;"	f
deque	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/multiplex/frame_buf.rs	/^    pub fn deque(&self) -> FrameDeque<T> {$/;"	f
deref	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/src/bytes.rs	/^    fn deref(&self) -> &Inner {$/;"	f
deref	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/src/bytes.rs	/^    fn deref(&self) -> &[u8] {$/;"	f
deref	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/future/shared.rs	/^    fn deref(&self) -> &E {$/;"	f
deref	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/future/shared.rs	/^    fn deref(&self) -> &T {$/;"	f
deref	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/lock.rs	/^    fn deref(&self) -> &T {$/;"	f
deref	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/sync/bilock.rs	/^    fn deref(&self) -> &T {$/;"	f
deref	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/io/frame.rs	/^    fn deref(&self) -> &Vec<u8> {$/;"	f
deref	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/message.rs	/^    fn deref(&self) -> &T {$/;"	f
deref_front	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/benches/vs_easy_buf.rs	/^    fn deref_front(b: &mut Bencher) {$/;"	f
deref_inline	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/benches/vs_easy_buf.rs	/^    fn deref_inline(b: &mut Bencher) {$/;"	f
deref_mid	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/benches/vs_easy_buf.rs	/^    fn deref_mid(b: &mut Bencher) {$/;"	f
deref_mut	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/src/bytes.rs	/^    fn deref_mut(&mut self) -> &mut Inner {$/;"	f
deref_mut	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/src/bytes.rs	/^    fn deref_mut(&mut self) -> &mut [u8] {$/;"	f
deref_mut	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/lock.rs	/^    fn deref_mut(&mut self) -> &mut T {$/;"	f
deref_mut	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/sync/bilock.rs	/^    fn deref_mut(&mut self) -> &mut T {$/;"	f
deref_mut	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/io/frame.rs	/^    fn deref_mut(&mut self) -> &mut Vec<u8> {$/;"	f
deref_mut	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/message.rs	/^    fn deref_mut(&mut self) -> &mut T {$/;"	f
deref_shared	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/benches/vs_easy_buf.rs	/^    fn deref_shared(b: &mut Bencher) {$/;"	f
deref_two	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/benches/vs_easy_buf.rs	/^    fn deref_two(b: &mut Bencher) {$/;"	f
deref_unique	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/benches/vs_easy_buf.rs	/^    fn deref_unique(b: &mut Bencher) {$/;"	f
deref_unique_unroll	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/benches/vs_easy_buf.rs	/^    fn deref_unique_unroll(b: &mut Bencher) {$/;"	f
deregister	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/reactor/poll_evented.rs	/^    pub fn deregister(self, handle: &Handle) -> io::Result<()> {$/;"	f
deregister	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/tests/pipe-hup.rs	/^    fn deregister(&self, poll: &mio::Poll) -> io::Result<()> {$/;"	f
deregister_source	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/reactor/mod.rs	/^    fn deregister_source(&mut self, source: &Evented) -> io::Result<()> {$/;"	f
description	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/channel.rs	/^    fn description(&self) -> &str {$/;"	f
description	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/sync/mpsc/mod.rs	/^    fn description(&self) -> &str {$/;"	f
description	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/sync/oneshot.rs	/^    fn description(&self) -> &str {$/;"	f
description	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/unsync/mpsc.rs	/^    fn description(&self) -> &str {$/;"	f
dispatch	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/reactor/mod.rs	/^    fn dispatch(&mut self, token: mio::Token, ready: mio::Ready) {$/;"	f
dispatch	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/multiplex/advanced.rs	/^    fn dispatch(&mut self, message: MultiplexMessage<Self::Out, Body<Self::BodyOut, Self::Error>, Self::Error>) -> io::Result<()>;$/;"	f
dispatch	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/multiplex/client.rs	/^    fn dispatch(&mut self, message: MultiplexMessage<Self::Out, Body<Self::BodyOut, Self::Error>, Self::Error>) -> io::Result<()> {$/;"	f
dispatch	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/multiplex/server.rs	/^    fn dispatch(&mut self, message: MultiplexMessage<Self::Out, Body<Self::BodyOut, Self::Error>, Self::Error>) -> io::Result<()> {$/;"	f
dispatch	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/pipeline/advanced.rs	/^    fn dispatch(&mut self, message: PipelineMessage<Self::Out, Body<Self::BodyOut, Self::Error>, Self::Error>) -> io::Result<()>;$/;"	f
dispatch	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/pipeline/client.rs	/^    fn dispatch(&mut self,$/;"	f
dispatch	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/pipeline/server.rs	/^    fn dispatch(&mut self,$/;"	f
dispatch_io	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/reactor/mod.rs	/^    fn dispatch_io(&mut self, token: usize, ready: mio::Ready) {$/;"	f
dispatch_made_progress	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/multiplex/advanced.rs	/^    fn dispatch_made_progress(&mut self) {$/;"	f
dispatch_task	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/reactor/mod.rs	/^    fn dispatch_task(&mut self, token: usize) {$/;"	f
dispatching_body	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/multiplex/mod.rs	/^    fn dispatching_body(&mut self, id: RequestId, body: &ReadBody) {$/;"	f
do_send	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/sync/mpsc/mod.rs	/^    fn do_send(&mut self, msg: Option<T>, can_park: bool) -> Result<(), SendError<T>> {$/;"	f
do_send	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/unsync/mpsc.rs	/^    fn do_send(&self, msg: T) -> StartSend<T, SendError<T>> {$/;"	f
do_send_nb	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/sync/mpsc/mod.rs	/^    fn do_send_nb(&self, msg: T) -> Result<(), SendError<T>> {$/;"	f
do_write	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/src/length_delimited.rs	/^    fn do_write(&mut self) -> Poll<(), io::Error> {$/;"	f
doit	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/recurse.rs	/^    fn doit(n: usize) -> Box<Future<Item=(), Error=()> + Send> {$/;"	f
drain	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/src/bytes.rs	/^    pub fn drain(&mut self) -> BytesMut {$/;"	f
drain	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stack.rs	/^    pub fn drain(&self) -> Drain<T> {$/;"	f
drain_drops	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stack.rs	/^    fn drain_drops() {$/;"	f
drain_to	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/src/bytes.rs	/^    pub fn drain_to(&mut self, at: usize) -> Bytes {$/;"	f
drain_to	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/src/bytes.rs	/^    pub fn drain_to(&mut self, at: usize) -> BytesMut {$/;"	f
drain_to	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/io/frame.rs	/^    pub fn drain_to(&mut self, at: usize) -> EasyBuf {$/;"	f
drain_write_drain	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/benches/vs_easy_buf.rs	/^    fn drain_write_drain(b: &mut Bencher) {$/;"	f
drop	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/src/bytes.rs	/^    fn drop(&mut self) {$/;"	f
drop	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/future/shared.rs	/^                fn drop(&mut self) {$/;"	f
drop	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/future/shared.rs	/^    fn drop(&mut self) {$/;"	f
drop	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/lock.rs	/^    fn drop(&mut self) {$/;"	f
drop	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stack.rs	/^        fn drop(&mut self) {$/;"	f
drop	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stack.rs	/^    fn drop(&mut self) {$/;"	f
drop	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/sync/bilock.rs	/^    fn drop(&mut self) {$/;"	f
drop	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/sync/mpsc/mod.rs	/^    fn drop(&mut self) {$/;"	f
drop	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/sync/mpsc/queue.rs	/^    fn drop(&mut self) {$/;"	f
drop	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/sync/oneshot.rs	/^    fn drop(&mut self) {$/;"	f
drop	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/task_impl/mod.rs	/^        fn drop(&mut self) {$/;"	f
drop	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/unsync/mpsc.rs	/^    fn drop(&mut self) {$/;"	f
drop	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/unsync/oneshot.rs	/^    fn drop(&mut self) {$/;"	f
drop	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/channel.rs	/^        fn drop(&mut self) {$/;"	f
drop	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/io/frame.rs	/^    fn drop(&mut self) {$/;"	f
drop	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/reactor/interval.rs	/^    fn drop(&mut self) {$/;"	f
drop	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/reactor/poll_evented.rs	/^    fn drop(&mut self) {$/;"	f
drop	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/reactor/timeout.rs	/^    fn drop(&mut self) {$/;"	f
drop	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/multiplex/advanced.rs	/^    fn drop(&mut self) {$/;"	f
drop	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/multiplex/client.rs	/^    fn drop(&mut self) {$/;"	f
drop	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/pipeline/client.rs	/^    fn drop(&mut self) {$/;"	f
drop	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/tests/support/mock.rs	/^    fn drop(&mut self) {$/;"	f
drop_client_while_streaming_body	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/tests/test_multiplex_client.rs	/^fn drop_client_while_streaming_body() {$/;"	f
drop_drops	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stack.rs	/^    fn drop_drops() {$/;"	f
drop_in_poll	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/shared.rs	/^fn drop_in_poll() {$/;"	f
drop_on_one_task_ok	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/shared.rs	/^fn drop_on_one_task_ok() {$/;"	f
drop_order	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/channel.rs	/^fn drop_order() {$/;"	f
drop_rx	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/channel.rs	/^fn drop_rx() {$/;"	f
drop_sender	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/channel.rs	/^fn drop_sender() {$/;"	f
drop_source	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/reactor/io_token.rs	/^    pub fn drop_source(&self, handle: &Remote) {$/;"	f
drop_source	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/reactor/mod.rs	/^    fn drop_source(&mut self, token: usize) {$/;"	f
dur	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/reactor/interval.rs	/^    fn dur(millis: u64) -> Duration {$/;"	f
duration_to_nanos	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/reactor/interval.rs	/^fn duration_to_nanos(dur: Duration) -> Option<u64> {$/;"	f
easybuf_equality_different_underlying_vec	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/io/frame.rs	/^    fn easybuf_equality_different_underlying_vec() {$/;"	f
easybuf_equality_same_underlying_vec	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/io/frame.rs	/^    fn easybuf_equality_same_underlying_vec() {$/;"	f
easybuf_get_mut_sliced	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/io/frame.rs	/^    fn easybuf_get_mut_sliced() {$/;"	f
easybuf_get_mut_sliced_allocating_at_least_initial_capacity	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/io/frame.rs	/^    fn easybuf_get_mut_sliced_allocating_at_least_initial_capacity() {$/;"	f
easybuf_get_mut_sliced_allocating_required_capacity	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/io/frame.rs	/^    fn easybuf_get_mut_sliced_allocating_required_capacity() {$/;"	f
easybuf_into_vec_simple	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/io/frame.rs	/^    fn easybuf_into_vec_simple() {$/;"	f
easybuf_into_vec_sliced	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/io/frame.rs	/^    fn easybuf_into_vec_sliced() {$/;"	f
easybuf_into_vec_sliced_allocating	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/io/frame.rs	/^    fn easybuf_into_vec_sliced_allocating() {$/;"	f
echo	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/tests/line-frames.rs	/^fn echo() {$/;"	f
echo_server	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/tests/buffered.rs	/^fn echo_server() {$/;"	f
echo_server	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/tests/echo.rs	/^fn echo_server() {$/;"	f
echo_server	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/tests/stream-buffered.rs	/^fn echo_server() {$/;"	f
empty	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/src/bytes.rs	/^    fn empty() -> Inner {$/;"	f
empty	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/future/empty.rs	/^pub fn empty<T, E>() -> Empty<T, E> {$/;"	f
empty	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/empty.rs	/^pub fn empty<T, E>() -> Empty<T, E> {$/;"	f
empty	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/all.rs	/^    fn empty() -> Empty<i32, u32> { future::empty() }$/;"	f
empty	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/body.rs	/^    pub fn empty() -> Body<T, E> {$/;"	f
encode	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/examples/connect.rs	/^    fn encode(&mut self, data: Vec<u8>, buf: &mut BytesMut) -> io::Result<()> {$/;"	f
encode	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/examples/udp-codec.rs	/^    fn encode(&mut self, (addr, buf): Self::Out, into: &mut Vec<u8>) -> SocketAddr {$/;"	f
encode	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/io/frame.rs	/^    fn encode(&mut self, msg: Self::Out, buf: &mut Vec<u8>) -> io::Result<()>;$/;"	f
encode	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/net/udp/frame.rs	/^    fn encode(&mut self, msg: Self::Out, buf: &mut Vec<u8>) -> SocketAddr;$/;"	f
encode	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/tests/line-frames.rs	/^    fn encode(&mut self, item: BytesMut, into: &mut BytesMut) -> io::Result<()> {$/;"	f
encode	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/src/framed.rs	/^    fn encode(&mut self, item: Self::Item, dst: &mut BytesMut) -> Result<(), Self::Error> {$/;"	f
encode	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/src/framed_write.rs	/^    fn encode(&mut self, item: Self::Item, dst: &mut BytesMut)$/;"	f
encode	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/tests/framed_write.rs	/^    fn encode(&mut self, item: u32, dst: &mut BytesMut) -> io::Result<()> {$/;"	f
encode	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/tests/simple_client_proto.rs	/^    fn encode(&mut self, item: u64, into: &mut BytesMut) -> io::Result<()> {$/;"	f
encode	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/tests/simple_framed.rs	/^    fn encode(&mut self, _: Self::Item, _: &mut BytesMut) -> io::Result<()> {$/;"	f
encode	/Users/akito/workspace/tokio-toy-http/src/main.rs	/^    fn encode(&mut self, msg: String, buf: &mut BytesMut) -> io::Result<()> {$/;"	f
encode_state	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/sync/mpsc/mod.rs	/^fn encode_state(state: &State) -> usize {$/;"	f
encoder	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/src/framed_write.rs	/^    pub fn encoder(&self) -> &E {$/;"	f
encoder_mut	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/src/framed_write.rs	/^    pub fn encoder_mut(&mut self) -> &mut E {$/;"	f
end	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/io/window.rs	/^    pub fn end(&self) -> usize {$/;"	f
end	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/src/window.rs	/^    pub fn end(&self) -> usize {$/;"	f
enter	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/task_impl/mod.rs	/^    fn enter<F, R>(&mut self, unpark: &Arc<Unpark>, f: F) -> R$/;"	f
eof	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/io/read_exact.rs	/^fn eof() -> io::Error {$/;"	f
eof	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/src/read_exact.rs	/^fn eof() -> io::Error {$/;"	f
eq	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/src/bytes.rs	/^    fn eq(&self, other: &&'a T) -> bool {$/;"	f
eq	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/src/bytes.rs	/^    fn eq(&self, other: &Bytes) -> bool {$/;"	f
eq	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/src/bytes.rs	/^    fn eq(&self, other: &BytesMut) -> bool {$/;"	f
eq	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/src/bytes.rs	/^    fn eq(&self, other: &String) -> bool {$/;"	f
eq	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/src/bytes.rs	/^    fn eq(&self, other: &Vec<u8>) -> bool {$/;"	f
eq	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/src/bytes.rs	/^    fn eq(&self, other: &[u8]) -> bool {$/;"	f
eq	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/src/bytes.rs	/^    fn eq(&self, other: &str) -> bool {$/;"	f
eq	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/io/frame.rs	/^    fn eq(&self, other: &T) -> bool {$/;"	f
eq	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/message.rs	/^    fn eq(&self, other: &T) -> bool {$/;"	f
erase	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/future/join.rs	/^            fn erase(&mut self) {$/;"	f
err	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/future/result.rs	/^pub fn err<T, E>(e: E) -> FutureResult<T, E> {$/;"	f
err	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/all.rs	/^    fn err<E: Send + 'static>(b: E) -> FutureResult<i32, E> {$/;"	f
err_list	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/stream.rs	/^fn err_list() -> BoxStream<i32, u32> {$/;"	f
error	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/multiplex/advanced.rs	/^    pub fn error(id: RequestId, error: E) -> MultiplexMessage<T, B, E> {$/;"	f
error	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/tests/support/mock.rs	/^    pub fn error(&mut self, error: io::Error) {$/;"	f
execute	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/task_impl/mod.rs	/^    fn execute(&self, r: Run);$/;"	f
execute	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/task_impl/mod.rs	/^    pub fn execute(self, exec: Arc<Executor>)$/;"	f
expect	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/concat.rs	/^fn expect<T>(opt: Option<T>) -> T {$/;"	f
expect_byte	/Users/akito/workspace/tokio-toy-http/src/http_parser.rs	/^macro_rules! expect_byte{$/;"	d
extend	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/src/bytes.rs	/^    fn extend<T>(&mut self, iter: T) where T: IntoIterator<Item = &'a u8> {$/;"	f
extend	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/src/bytes.rs	/^    fn extend<T>(&mut self, iter: T) where T: IntoIterator<Item = u8> {$/;"	f
extend	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/tests/test_bytes.rs	/^fn extend() {$/;"	f
extend_sign	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.0.0/src/lib.rs	/^fn extend_sign(val: u64, nbytes: usize) -> i64 {$/;"	f
f_err	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/support/mod.rs	/^pub fn f_err(a: u32) -> FutureResult<i32, u32> { Err(a).into_future() }$/;"	f
f_ok	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/support/mod.rs	/^pub fn f_ok(a: i32) -> FutureResult<i32, u32> { Ok(a).into_future() }$/;"	f
failed_future	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/future_flatten_stream.rs	/^fn failed_future() {$/;"	f
fast_forward	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/reactor/interval.rs	/^    fn fast_forward() {$/;"	f
filter	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/mod.rs	/^    fn filter<F>(self, f: F) -> Filter<Self, F>$/;"	f
filter	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/stream.rs	/^fn filter() {$/;"	f
filter_map	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/mod.rs	/^    fn filter_map<F, B>(self, f: F) -> FilterMap<Self, F>$/;"	f
filter_map	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/stream.rs	/^fn filter_map() {$/;"	f
finish	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/collect.rs	/^    fn finish(&mut self) -> Vec<S::Item> {$/;"	f
finish	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/task_impl/data.rs	/^    fn finish(&self) -> u64 {$/;"	f
finished_future_ok	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/futures_unordered.rs	/^fn finished_future_ok() {$/;"	f
fire	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/reactor/mod.rs	/^    fn fire(&mut self) -> Option<Task> {$/;"	f
first_mut	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/src/buf/chain.rs	/^    pub fn first_mut(&mut self) -> &mut T {$/;"	f
first_ref	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/src/buf/chain.rs	/^    pub fn first_ref(&self) -> &T {$/;"	f
flatten	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/future/mod.rs	/^    fn flatten(self) -> Flatten<Self>$/;"	f
flatten	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/mod.rs	/^    fn flatten(self) -> Flatten<Self>$/;"	f
flatten	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/all.rs	/^fn flatten() {$/;"	f
flatten	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/stream.rs	/^fn flatten() {$/;"	f
flatten_stream	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/future/mod.rs	/^    fn flatten_stream(self) -> FlattenStream<Self>$/;"	f
flush	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/src/buf/writer.rs	/^    fn flush(&mut self) -> io::Result<()> {$/;"	f
flush	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/sink/mod.rs	/^    fn flush(self) -> Flush<Self>$/;"	f
flush	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/sink/wait.rs	/^    pub fn flush(&mut self) -> Result<(), S::SinkError> {$/;"	f
flush	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/examples/proxy.rs	/^    fn flush(&mut self) -> io::Result<()> {$/;"	f
flush	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/io/flush.rs	/^pub fn flush<A>(a: A) -> Flush<A>$/;"	f
flush	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/io/mod.rs	/^    fn flush(&mut self) -> Poll<(), io::Error>;$/;"	f
flush	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/io/split.rs	/^    fn flush(&mut self) -> io::Result<()> {$/;"	f
flush	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/net/tcp.rs	/^    fn flush(&mut self) -> io::Result<()> {$/;"	f
flush	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/reactor/poll_evented.rs	/^    fn flush(&mut self) -> io::Result<()> {$/;"	f
flush	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/src/flush.rs	/^pub fn flush<A>(a: A) -> Flush<A>$/;"	f
flush	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/src/framed.rs	/^    fn flush(&mut self) -> io::Result<()> {$/;"	f
flush	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/src/length_delimited.rs	/^    fn flush(&mut self) -> io::Result<()> {$/;"	f
flush	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/src/split.rs	/^    fn flush(&mut self) -> io::Result<()> {$/;"	f
flush	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/tests/framed_write.rs	/^    fn flush(&mut self) -> io::Result<()> {$/;"	f
flush	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/tests/length_delimited.rs	/^    fn flush(&mut self) -> io::Result<()> {$/;"	f
flush	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/multiplex/advanced.rs	/^    fn flush(&mut self) -> io::Result<()> {$/;"	f
flush	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/pipeline/advanced.rs	/^    fn flush(&mut self) -> io::Result<()> {$/;"	f
flush	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/tests/support/mock.rs	/^    fn flush(&mut self) -> io::Result<()> {$/;"	f
flush	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/tests/test_multiplex_deadlock.rs	/^        fn flush(&mut self) -> Poll<(), io::Error> {$/;"	f
flush_dispatch_deque	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/multiplex/advanced.rs	/^    fn flush_dispatch_deque(&mut self) -> io::Result<()> {$/;"	f
flush_out_bodies	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/multiplex/advanced.rs	/^    fn flush_out_bodies(&mut self) -> io::Result<()> {$/;"	f
flush_out_body	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/multiplex/advanced.rs	/^    fn flush_out_body(&mut self) -> io::Result<()> {$/;"	f
fmt	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/src/bytes.rs	/^    fn fmt(&self, fmt: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/src/debug.rs	/^    fn fmt(&self, fmt: &mut fmt::Formatter) -> Result<(), fmt::Error> {$/;"	f
fmt	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/tests/test_bytes.rs	/^fn fmt() {$/;"	f
fmt	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/tests/test_debug.rs	/^fn fmt() {$/;"	f
fmt	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/future/flatten.rs	/^    fn fmt(&self, fmt: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/future/flatten_stream.rs	/^    fn fmt(&self, fmt: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/future/join.rs	/^            fn fmt(&self, fmt: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/future/join_all.rs	/^    fn fmt(&self, fmt: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/future/shared.rs	/^    fn fmt(&self, fmt: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/buffer_unordered.rs	/^    fn fmt(&self, fmt: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/buffered.rs	/^    fn fmt(&self, fmt: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/channel.rs	/^    fn fmt(&self, fmt: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/sync/mpsc/mod.rs	/^    fn fmt(&self, fmt: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/sync/oneshot.rs	/^    fn fmt(&self, fmt: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/task_impl/mod.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/unsync/mpsc.rs	/^    fn fmt(&self, fmt: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/io/frame.rs	/^    fn fmt(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/net/tcp.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/net/udp/mod.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/reactor/mod.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/reactor/poll_evented.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/src/framed.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/src/framed_read.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/src/framed_write.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/src/length_delimited.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/buffer_one.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/simple/multiplex/client.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/simple/pipeline/client.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/body.rs	/^    fn fmt(&self, fmt: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/message.rs	/^    fn fmt(&self, fmt: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/multiplex/advanced.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/pipeline/advanced.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/tcp_client.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/util/client_proxy.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fns_defined_for_bytes_mut	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/tests/test_bytes.rs	/^fn fns_defined_for_bytes_mut() {$/;"	f
fold	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/mod.rs	/^    fn fold<F, T, Fut>(self, init: T, f: F) -> Fold<Self, F, Fut, T>$/;"	f
fold	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/stream.rs	/^fn fold() {$/;"	f
for_each	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/mod.rs	/^    fn for_each<F, U>(self, f: F) -> ForEach<Self, F, U>$/;"	f
force_flush	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/sink.rs	/^    fn force_flush(&mut self) -> Vec<T> {$/;"	f
forget	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/support/mod.rs	/^    fn forget(self) {$/;"	f
forget	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/support/mod.rs	/^    fn forget(self);$/;"	f
forward	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/mod.rs	/^    fn forward<S>(self, sink: S) -> Forward<Self, S>$/;"	f
forward	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/stream.rs	/^fn forward() {$/;"	f
framed	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/io/frame.rs	/^pub fn framed<T, C>(io: T, codec: C) -> Framed<T, C> {$/;"	f
framed	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/io/mod.rs	/^    fn framed<C: Codec>(self, codec: C) -> Framed<Self, C>$/;"	f
framed	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/net/udp/mod.rs	/^    pub fn framed<C: UdpCodec>(self, codec: C) -> UdpFramed<C> {$/;"	f
framed	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/src/framed.rs	/^pub fn framed<T, U>(inner: T, codec: U) -> Framed<T, U>$/;"	f
framed	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/src/lib.rs	/^    fn framed<T: Encoder + Decoder>(self, codec: T) -> Framed<Self, T>$/;"	f
framed_read2	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/src/framed_read.rs	/^pub fn framed_read2<T>(inner: T) -> FramedRead2<T> {$/;"	f
framed_write2	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/src/framed_write.rs	/^pub fn framed_write2<T>(inner: T) -> FramedWrite2<T> {$/;"	f
freeze	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/src/bytes.rs	/^    pub fn freeze(self) -> Bytes {$/;"	f
fresh_task_id	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/task_impl/mod.rs	/^fn fresh_task_id() -> usize {$/;"	f
from	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/src/bytes.rs	/^    fn from(src: &'a [u8]) -> Bytes {$/;"	f
from	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/src/bytes.rs	/^    fn from(src: &'a [u8]) -> BytesMut {$/;"	f
from	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/src/bytes.rs	/^    fn from(src: &'a str) -> Bytes {$/;"	f
from	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/src/bytes.rs	/^    fn from(src: &'a str) -> BytesMut {$/;"	f
from	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/src/bytes.rs	/^    fn from(src: Bytes) -> BytesMut {$/;"	f
from	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/src/bytes.rs	/^    fn from(src: BytesMut) -> Bytes {$/;"	f
from	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/src/bytes.rs	/^    fn from(src: String) -> Bytes {$/;"	f
from	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/src/bytes.rs	/^    fn from(src: String) -> BytesMut {$/;"	f
from	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/src/bytes.rs	/^    fn from(src: Vec<u8>) -> Bytes {$/;"	f
from	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/src/bytes.rs	/^    fn from(src: Vec<u8>) -> BytesMut {$/;"	f
from	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/poll.rs	/^    fn from(t: T) -> Async<T> {$/;"	f
from	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/sink.rs	/^    fn from(_: mpsc::SendError<T>) -> FromErrTest {$/;"	f
from	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/stream.rs	/^    fn from(i: u32) -> FromErrTest {$/;"	f
from	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/io/frame.rs	/^    fn from(vec: Vec<u8>) -> EasyBuf {$/;"	f
from	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/tests/length_delimited.rs	/^    fn from(src: &'a [u8]) -> Op {$/;"	f
from	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/tests/length_delimited.rs	/^    fn from(src: Vec<u8>) -> Op {$/;"	f
from	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/body.rs	/^    fn from(src: mpsc::Receiver<Result<T, E>>) -> Body<T, E> {$/;"	f
from	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/body.rs	/^    fn from(val: T) -> Body<T, E> {$/;"	f
from_buf	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/src/buf/from_buf.rs	/^    fn from_buf<T>(buf: T) -> Self where T: IntoBuf;$/;"	f
from_buf	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/src/buf/from_buf.rs	/^    fn from_buf<T>(buf: T) -> Self$/;"	f
from_err	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/future/mod.rs	/^    fn from_err<E:From<Self::Error>>(self) -> FromErr<Self, E>$/;"	f
from_err	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/mod.rs	/^    fn from_err<E: From<Self::Error>>(self) -> FromErr<Self, E>$/;"	f
from_err	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/sink.rs	/^fn from_err() {$/;"	f
from_err	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/stream.rs	/^fn from_err() {$/;"	f
from_listener	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/net/tcp.rs	/^    pub fn from_listener(listener: net::TcpListener,$/;"	f
from_ref	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/simple/mod.rs	/^    fn from_ref(proto: &P) -> &LiftProto<P> {$/;"	f
from_slice	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/tests/test_bytes.rs	/^fn from_slice() {$/;"	f
from_socket	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/net/udp/mod.rs	/^    pub fn from_socket(socket: net::UdpSocket,$/;"	f
from_static	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/src/bytes.rs	/^    fn from_static(bytes: &'static [u8]) -> Inner {$/;"	f
from_static	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/src/bytes.rs	/^    pub fn from_static(bytes: &'static [u8]) -> Bytes {$/;"	f
from_static	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/tests/test_bytes.rs	/^fn from_static() {$/;"	f
from_stream	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/net/tcp.rs	/^    pub fn from_stream(stream: net::TcpStream, handle: &Handle)$/;"	f
from_vec	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/src/bytes.rs	/^    fn from_vec(mut src: Vec<u8>) -> Inner {$/;"	f
fuse	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/future/mod.rs	/^    fn fuse(self) -> Fuse<Self>$/;"	f
fuse	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/mod.rs	/^    fn fuse(self) -> Fuse<Self>$/;"	f
fuse	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/fuse.rs	/^fn fuse() {$/;"	f
fuse	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/stream.rs	/^fn fuse() {$/;"	f
future_from	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/future/mod.rs	/^    fn future_from(T) -> Self::Future;$/;"	f
futures_channel_latency	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/benches/latency.rs	/^fn futures_channel_latency(b: &mut Bencher) {$/;"	f
futures_unordered	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/futures_unordered.rs	/^pub fn futures_unordered<I>(futures: I) -> FuturesUnordered<<I::Item as IntoFuture>::Future>$/;"	f
generate	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/future/join.rs	/^macro_rules! generate {$/;"	d
get	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/future/lazy.rs	/^    fn get(&mut self) -> &mut R::Future {$/;"	f
get	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/sink.rs	/^    fn get(&self) -> bool {$/;"	f
get_f32	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/src/buf/buf.rs	/^    fn get_f32<T: ByteOrder>(&mut self) -> f32 {$/;"	f
get_f64	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/src/buf/buf.rs	/^    fn get_f64<T: ByteOrder>(&mut self) -> f64 {$/;"	f
get_i16	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/src/buf/buf.rs	/^    fn get_i16<T: ByteOrder>(&mut self) -> i16 {$/;"	f
get_i32	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/src/buf/buf.rs	/^    fn get_i32<T: ByteOrder>(&mut self) -> i32 {$/;"	f
get_i64	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/src/buf/buf.rs	/^    fn get_i64<T: ByteOrder>(&mut self) -> i64 {$/;"	f
get_i8	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/src/buf/buf.rs	/^    fn get_i8(&mut self) -> i8 {$/;"	f
get_int	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/src/buf/buf.rs	/^    fn get_int<T: ByteOrder>(&mut self, nbytes: usize) -> i64 {$/;"	f
get_mut	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/src/buf/iter.rs	/^    pub fn get_mut(&mut self) -> &mut T {$/;"	f
get_mut	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/src/buf/reader.rs	/^    pub fn get_mut(&mut self) -> &mut B {$/;"	f
get_mut	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/src/buf/take.rs	/^    pub fn get_mut(&mut self) -> &mut T {$/;"	f
get_mut	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/src/buf/writer.rs	/^    pub fn get_mut(&mut self) -> &mut B {$/;"	f
get_mut	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/sink/buffer.rs	/^    pub fn get_mut(&mut self) -> &mut S {$/;"	f
get_mut	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/sink/flush.rs	/^    pub fn get_mut(&mut self) -> &mut S {$/;"	f
get_mut	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/sink/send.rs	/^    pub fn get_mut(&mut self) -> &mut S {$/;"	f
get_mut	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/sink/with.rs	/^    pub fn get_mut(&mut self) -> &mut S {$/;"	f
get_mut	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/task_impl/mod.rs	/^    pub fn get_mut(&mut self) -> &mut T {$/;"	f
get_mut	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/io/frame.rs	/^    pub fn get_mut(&mut self) -> &mut T {$/;"	f
get_mut	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/io/frame.rs	/^    pub fn get_mut(&mut self) -> EasyBufMut {$/;"	f
get_mut	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/io/window.rs	/^    pub fn get_mut(&mut self) -> &mut T {$/;"	f
get_mut	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/net/udp/frame.rs	/^    pub fn get_mut(&mut self) -> &mut UdpSocket {$/;"	f
get_mut	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/reactor/poll_evented.rs	/^    pub fn get_mut(&mut self) -> &mut E {$/;"	f
get_mut	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/src/framed.rs	/^    pub fn get_mut(&mut self) -> &mut T {$/;"	f
get_mut	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/src/framed_read.rs	/^    pub fn get_mut(&mut self) -> &mut T {$/;"	f
get_mut	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/src/framed_write.rs	/^    pub fn get_mut(&mut self) -> &mut T {$/;"	f
get_mut	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/src/length_delimited.rs	/^    pub fn get_mut(&mut self) -> &mut T {$/;"	f
get_mut	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/src/window.rs	/^    pub fn get_mut(&mut self) -> &mut T {$/;"	f
get_mut	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/buffer_one.rs	/^    pub fn get_mut(&mut self) -> &mut S {$/;"	f
get_mut	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/message.rs	/^    pub fn get_mut(&mut self) -> &mut T {$/;"	f
get_num_skip	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/src/length_delimited.rs	/^    fn get_num_skip(&self) -> usize {$/;"	f
get_ref	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/src/buf/iter.rs	/^    pub fn get_ref(&self) -> &T {$/;"	f
get_ref	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/src/buf/reader.rs	/^    pub fn get_ref(&self) -> &B {$/;"	f
get_ref	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/src/buf/take.rs	/^    pub fn get_ref(&self) -> &T {$/;"	f
get_ref	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/src/buf/writer.rs	/^    pub fn get_ref(&self) -> &B {$/;"	f
get_ref	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/sink/buffer.rs	/^    pub fn get_ref(&self) -> &S {$/;"	f
get_ref	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/sink/flush.rs	/^    pub fn get_ref(&self) -> &S {$/;"	f
get_ref	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/sink/send.rs	/^    pub fn get_ref(&self) -> &S {$/;"	f
get_ref	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/sink/with.rs	/^    pub fn get_ref(&self) -> &S {$/;"	f
get_ref	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/task_impl/mod.rs	/^    pub fn get_ref(&self) -> &T {$/;"	f
get_ref	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/io/frame.rs	/^    pub fn get_ref(&self) -> &T {$/;"	f
get_ref	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/io/window.rs	/^    pub fn get_ref(&self) -> &T {$/;"	f
get_ref	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/net/udp/frame.rs	/^    pub fn get_ref(&self) -> &UdpSocket {$/;"	f
get_ref	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/reactor/poll_evented.rs	/^    pub fn get_ref(&self) -> &E {$/;"	f
get_ref	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/src/framed.rs	/^    pub fn get_ref(&self) -> &T {$/;"	f
get_ref	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/src/framed_read.rs	/^    pub fn get_ref(&self) -> &T {$/;"	f
get_ref	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/src/framed_write.rs	/^    pub fn get_ref(&self) -> &T {$/;"	f
get_ref	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/src/length_delimited.rs	/^    pub fn get_ref(&self) -> &T {$/;"	f
get_ref	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/src/window.rs	/^    pub fn get_ref(&self) -> &T {$/;"	f
get_ref	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/buffer_one.rs	/^    pub fn get_ref(&self) -> &S {$/;"	f
get_ref	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/message.rs	/^    pub fn get_ref(&self) -> &T {$/;"	f
get_u16	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/src/buf/buf.rs	/^    fn get_u16<T: ByteOrder>(&mut self) -> u16 {$/;"	f
get_u32	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/src/buf/buf.rs	/^    fn get_u32<T: ByteOrder>(&mut self) -> u32 {$/;"	f
get_u64	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/src/buf/buf.rs	/^    fn get_u64<T: ByteOrder>(&mut self) -> u64 {$/;"	f
get_u8	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/src/buf/buf.rs	/^    fn get_u8(&mut self) -> u8 {$/;"	f
get_uint	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/src/buf/buf.rs	/^    fn get_uint<T: ByteOrder>(&mut self, nbytes: usize) -> u64 {$/;"	f
grow	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/multiplex/frame_buf.rs	/^    fn grow(&mut self) -> bool {$/;"	f
handle	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/reactor/mod.rs	/^    pub fn handle(&self) -> Handle {$/;"	f
handle	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/reactor/mod.rs	/^    pub fn handle(&self) -> Option<Handle> {$/;"	f
has_in_flight	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/pipeline/advanced.rs	/^    fn has_in_flight(&self) -> bool {$/;"	f
has_in_flight	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/pipeline/advanced.rs	/^    fn has_in_flight(&self) -> bool;$/;"	f
has_in_flight	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/pipeline/client.rs	/^    fn has_in_flight(&self) -> bool {$/;"	f
has_in_flight	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/pipeline/server.rs	/^    fn has_in_flight(&self) -> bool {$/;"	f
has_remaining	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/src/buf/buf.rs	/^    fn has_remaining(&self) -> bool {$/;"	f
has_remaining_mut	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/src/buf/buf_mut.rs	/^    fn has_remaining_mut(&self) -> bool {$/;"	f
hash	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/src/bytes.rs	/^    fn hash<H>(&self, state: &mut H) where H: hash::Hasher {$/;"	f
hash	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/io/frame.rs	/^    fn hash<H: hash::Hasher>(&self, state: &mut H) {$/;"	f
huge_size	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/tests/framed_read.rs	/^fn huge_size() {$/;"	f
hup	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/reactor/mod.rs	/^    pub fn hup() -> Ready {$/;"	f
hup	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/tests/pipe-hup.rs	/^fn hup() {$/;"	f
id	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/reactor/mod.rs	/^    pub fn id(&self) -> CoreId {$/;"	f
if_std	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/lib.rs	/^macro_rules! if_std {$/;"	d
ignore_err	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/select_ok.rs	/^fn ignore_err() {$/;"	f
imp	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/src/bytes.rs	/^        fn imp(arc: &AtomicPtr<Shared>) -> usize {$/;"	f
inc_num_messages	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/sync/mpsc/mod.rs	/^    fn inc_num_messages(&self, close: bool) -> Option<bool> {$/;"	f
incoming	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/net/tcp.rs	/^    pub fn incoming(self) -> Incoming {$/;"	f
incomplete_write	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/net/udp/mod.rs	/^fn incomplete_write(reason: &str) -> io::Error {$/;"	f
index	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/tests/test_bytes.rs	/^fn index() {$/;"	f
inline_cap	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/tests/test_bytes.rs	/^fn inline_cap() -> usize {$/;"	f
inline_len	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/src/bytes.rs	/^    fn inline_len(&self) -> usize {$/;"	f
inline_ptr	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/src/bytes.rs	/^    unsafe fn inline_ptr(&self) -> *mut u8 {$/;"	f
inline_storage	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/tests/test_bytes.rs	/^fn inline_storage() {$/;"	f
insert	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stack.rs	/^    fn insert(&self, id: usize) {$/;"	f
insert	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/task_impl/mod.rs	/^    fn insert(&self, id: usize);$/;"	f
into	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/io/frame.rs	/^    fn into(mut self) -> Vec<u8> {$/;"	f
into_buf	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/src/buf/into_buf.rs	/^    fn into_buf(self) -> Self {$/;"	f
into_buf	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/src/buf/into_buf.rs	/^    fn into_buf(self) -> Self::Buf {$/;"	f
into_buf	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/src/buf/into_buf.rs	/^    fn into_buf(self) -> Self::Buf;$/;"	f
into_buf	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/src/bytes.rs	/^    fn into_buf(self) -> Self::Buf {$/;"	f
into_future	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/future/join.rs	/^            fn into_future(self) -> Self::Future {$/;"	f
into_future	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/future/mod.rs	/^    fn into_future(self) -> F {$/;"	f
into_future	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/future/mod.rs	/^    fn into_future(self) -> FutureResult<T, E> {$/;"	f
into_future	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/future/mod.rs	/^    fn into_future(self) -> Self::Future;$/;"	f
into_future	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/mod.rs	/^    fn into_future(self) -> StreamFuture<Self>$/;"	f
into_inner	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/src/buf/chain.rs	/^    pub fn into_inner(self) -> (T, U) {$/;"	f
into_inner	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/src/buf/iter.rs	/^    pub fn into_inner(self) -> T {$/;"	f
into_inner	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/src/buf/reader.rs	/^    pub fn into_inner(self) -> B {$/;"	f
into_inner	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/src/buf/take.rs	/^    pub fn into_inner(self) -> T {$/;"	f
into_inner	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/src/buf/writer.rs	/^    pub fn into_inner(self) -> B {$/;"	f
into_inner	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/fuse.rs	/^    pub fn into_inner(self) -> S {$/;"	f
into_inner	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/sync/mpsc/mod.rs	/^    pub fn into_inner(self) -> T {$/;"	f
into_inner	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/task_impl/mod.rs	/^    pub fn into_inner(self) -> T {$/;"	f
into_inner	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/unsync/mpsc.rs	/^    pub fn into_inner(self) -> T {$/;"	f
into_inner	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/io/frame.rs	/^    pub fn into_inner(self) -> T {$/;"	f
into_inner	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/io/window.rs	/^    pub fn into_inner(self) -> T {$/;"	f
into_inner	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/net/udp/frame.rs	/^    pub fn into_inner(self) -> UdpSocket {$/;"	f
into_inner	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/src/framed.rs	/^    pub fn into_inner(self) -> T {$/;"	f
into_inner	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/src/framed_read.rs	/^    pub fn into_inner(self) -> T {$/;"	f
into_inner	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/src/framed_write.rs	/^    pub fn into_inner(self) -> T {$/;"	f
into_inner	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/src/length_delimited.rs	/^    pub fn into_inner(self) -> T {$/;"	f
into_inner	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/src/lines.rs	/^    pub fn into_inner(self) -> A {$/;"	f
into_inner	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/src/window.rs	/^    pub fn into_inner(self) -> T {$/;"	f
into_inner	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/message.rs	/^    pub fn into_inner(self) -> T {$/;"	f
into_iter	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/src/bytes.rs	/^    fn into_iter(self) -> Self::IntoIter {$/;"	f
into_stream	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/future/mod.rs	/^    fn into_stream(self) -> IntoStream<Self>$/;"	f
is_clone	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/tests/simple_client_proto.rs	/^fn is_clone<T: Clone>(_: &T) {$/;"	f
is_complete	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/multiplex/advanced.rs	/^    fn is_complete(&self) -> bool {$/;"	f
is_current	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/task_impl/mod.rs	/^    pub fn is_current(&self) -> bool {$/;"	f
is_dispatched	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/multiplex/advanced.rs	/^    fn is_dispatched(&self) -> bool {$/;"	f
is_done	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/fuse.rs	/^    pub fn is_done(&self) -> bool {$/;"	f
is_done	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/multiplex/advanced.rs	/^    fn is_done(&self) -> bool {$/;"	f
is_done	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/pipeline/advanced.rs	/^    fn is_done(&self) -> bool {$/;"	f
is_empty	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/src/bytes.rs	/^    fn is_empty(&self) -> bool {$/;"	f
is_empty	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/src/bytes.rs	/^    pub fn is_empty(&self) -> bool {$/;"	f
is_empty	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/sink/with.rs	/^    fn is_empty(&self) -> bool {$/;"	f
is_empty	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/multiplex/frame_buf.rs	/^    pub fn is_empty(&self) -> bool {$/;"	f
is_future_v	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/all.rs	/^    fn is_future_v<A, B, C>(_: C)$/;"	f
is_hup	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/reactor/mod.rs	/^    pub fn is_hup(_event: &Ready) -> bool {$/;"	f
is_hup	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/reactor/mod.rs	/^    pub fn is_hup(event: &Ready) -> bool {$/;"	f
is_inbound	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/multiplex/advanced.rs	/^    fn is_inbound(&self) -> bool {$/;"	f
is_inline	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/src/bytes.rs	/^    fn is_inline(&self) -> bool {$/;"	f
is_mut_safe	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/src/bytes.rs	/^    fn is_mut_safe(&mut self) -> bool {$/;"	f
is_none	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/multiplex/advanced.rs	/^    fn is_none(&self) -> bool {$/;"	f
is_not_ready	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/poll.rs	/^    pub fn is_not_ready(&self) -> bool {$/;"	f
is_outbound	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/multiplex/advanced.rs	/^    fn is_outbound(&self) -> bool {$/;"	f
is_ready	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/poll.rs	/^    pub fn is_ready(&self) -> bool {$/;"	f
is_ready	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/mpsc.rs	/^fn is_ready<T>(res: &AsyncSink<T>) -> bool {$/;"	f
is_send	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/tests/test_bytes.rs	/^fn is_send<T: Send>() {}$/;"	f
is_send	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/mpsc.rs	/^fn is_send<T: Send>() {}$/;"	f
is_shared	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/src/bytes.rs	/^    fn is_shared(&mut self) -> bool {$/;"	f
is_static	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/src/bytes.rs	/^    fn is_static(&mut self) -> bool {$/;"	f
is_sync	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/tests/test_bytes.rs	/^fn is_sync<T: Sync>() {}$/;"	f
is_unique	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/src/bytes.rs	/^    fn is_unique(&self) -> bool {$/;"	f
is_wouldblock	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/net/tcp.rs	/^fn is_wouldblock<T>(r: &io::Result<T>) -> bool {$/;"	f
is_wouldblock	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/reactor/poll_evented.rs	/^fn is_wouldblock<T>(r: &io::Result<T>) -> bool {$/;"	f
it_works	/Users/akito/workspace/tokio-toy-http/src/lib.rs	/^    fn it_works() {}$/;"	f
iter	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/src/buf/buf.rs	/^    fn iter(self) -> Iter<Self> where Self: Sized {$/;"	f
iter	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/iter.rs	/^pub fn iter<J, T, E>(i: J) -> Iter<J::IntoIter>$/;"	f
iterating_two_bufs	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/tests/test_chain.rs	/^fn iterating_two_bufs() {$/;"	f
join	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/future/mod.rs	/^    fn join<B>(self, other: B) -> Join<Self, B::Future>$/;"	f
join1	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/eventual.rs	/^fn join1() {$/;"	f
join2	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/eventual.rs	/^fn join2() {$/;"	f
join3	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/future/mod.rs	/^    fn join3<B, C>(self, b: B, c: C) -> Join3<Self, B::Future, C::Future>$/;"	f
join3	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/eventual.rs	/^fn join3() {$/;"	f
join4	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/future/mod.rs	/^    fn join4<B, C, D>(self, b: B, c: C, d: D)$/;"	f
join4	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/eventual.rs	/^fn join4() {$/;"	f
join5	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/future/mod.rs	/^    fn join5<B, C, D, E>(self, b: B, c: C, d: D, e: E)$/;"	f
join5	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/eventual.rs	/^fn join5() {$/;"	f
join_all	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/future/join_all.rs	/^pub fn join_all<I>(i: I) -> JoinAll<I>$/;"	f
join_cancels	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/all.rs	/^fn join_cancels() {$/;"	f
join_incomplete	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/all.rs	/^fn join_incomplete() {$/;"	f
join_multicast_v4	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/net/udp/mod.rs	/^    pub fn join_multicast_v4(&self,$/;"	f
join_multicast_v6	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/net/udp/mod.rs	/^    pub fn join_multicast_v6(&self,$/;"	f
keepalive_ms	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/net/tcp.rs	/^    pub fn keepalive_ms(&self) -> io::Result<Option<u32>> {$/;"	f
kind	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/src/bytes.rs	/^    fn kind(&self) -> usize {$/;"	f
large_skip	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/reactor/interval.rs	/^    fn large_skip() {$/;"	f
last_err	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/select_ok.rs	/^fn last_err() {$/;"	f
last_mut	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/src/buf/chain.rs	/^    pub fn last_mut(&mut self) -> &mut U {$/;"	f
last_ref	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/src/buf/chain.rs	/^    pub fn last_ref(&self) -> &U {$/;"	f
lazy	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/future/lazy.rs	/^pub fn lazy<F, R>(f: F) -> Lazy<F, R>$/;"	f
leave_multicast_v4	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/net/udp/mod.rs	/^    pub fn leave_multicast_v4(&self,$/;"	f
leave_multicast_v6	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/net/udp/mod.rs	/^    pub fn leave_multicast_v6(&self,$/;"	f
len	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/src/bytes.rs	/^    fn len(&self) -> usize {$/;"	f
len	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/src/bytes.rs	/^    pub fn len(&self) -> usize {$/;"	f
len	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/tests/test_bytes.rs	/^fn len() {$/;"	f
len	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/io/frame.rs	/^    pub fn len(&self) -> usize {$/;"	f
len	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/multiplex/frame_buf.rs	/^    pub fn len(&self) -> usize {$/;"	f
length_adjustment	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/src/length_delimited.rs	/^    pub fn length_adjustment(&mut self, val: isize) -> &mut Self {$/;"	f
length_field_length	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/src/length_delimited.rs	/^    pub fn length_field_length(&mut self, val: usize) -> &mut Self {$/;"	f
length_field_offset	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/src/length_delimited.rs	/^    pub fn length_field_offset(&mut self, val: usize) -> &mut Self {$/;"	f
lift	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/simple/multiplex/mod.rs	/^        pub fn lift(f: F) -> LiftBind<A, F, E> {$/;"	f
lift	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/simple/pipeline/mod.rs	/^        pub fn lift(f: F) -> LiftBind<A, F, E> {$/;"	f
limit	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/src/buf/take.rs	/^    pub fn limit(&self) -> usize {$/;"	f
limit	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/tests/limit.rs	/^fn limit() {$/;"	f
lines	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/src/lines.rs	/^pub fn lines<A>(a: A) -> Lines<A>$/;"	f
list	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/stream.rs	/^fn list() -> BoxStream<i32, u32> {$/;"	f
listener	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/tcp_server.rs	/^fn listener(addr: &SocketAddr,$/;"	f
little_endian	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.0.0/src/lib.rs	/^                fn little_endian() {$/;"	f
little_endian	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/src/length_delimited.rs	/^    pub fn little_endian(&mut self) -> &mut Self {$/;"	f
local_addr	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/net/tcp.rs	/^    pub fn local_addr(&self) -> io::Result<SocketAddr> {$/;"	f
local_addr	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/net/udp/mod.rs	/^    pub fn local_addr(&self) -> io::Result<SocketAddr> {$/;"	f
local_map	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/task_impl/data.rs	/^pub fn local_map() -> LocalMap {$/;"	f
lock	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/sync/bilock.rs	/^    pub fn lock(self) -> BiLockAcquire<T> {$/;"	f
loop_fn	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/future/loop_fn.rs	/^pub fn loop_fn<S, T, A, F>(initial_state: S, mut func: F) -> LoopFn<A, F>$/;"	f
lots	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/recurse.rs	/^fn lots() {$/;"	f
lower	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/simple/mod.rs	/^    fn lower(&self) -> &P {$/;"	f
main	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/examples/chat.rs	/^fn main() {$/;"	f
main	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/examples/connect.rs	/^fn main() {$/;"	f
main	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/examples/echo-udp.rs	/^fn main() {$/;"	f
main	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/examples/echo.rs	/^fn main() {$/;"	f
main	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/examples/hello.rs	/^fn main() {$/;"	f
main	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/examples/proxy.rs	/^fn main() {$/;"	f
main	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/examples/sink.rs	/^fn main() {$/;"	f
main	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/examples/udp-codec.rs	/^fn main() {$/;"	f
main	/Users/akito/workspace/tokio-toy-http/src/main.rs	/^fn main() {$/;"	f
make_bytes	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/tests/test_bytes.rs	/^    fn make_bytes() -> Bytes {$/;"	f
manual_allow	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/sink.rs	/^fn manual_allow<T>() -> (ManualAllow<T>, Rc<Allow>) {$/;"	f
many_threads	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/shared.rs	/^fn many_threads() {$/;"	f
map	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/future/mod.rs	/^    fn map<F, U>(self, f: F) -> Map<Self, F>$/;"	f
map	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/poll.rs	/^    pub fn map<F, U>(self, f: F) -> Async<U>$/;"	f
map	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/mod.rs	/^    fn map<U, F>(self, f: F) -> Map<Self, F>$/;"	f
map	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/eager_drop.rs	/^fn map() {$/;"	f
map	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/stream.rs	/^fn map() {$/;"	f
map_err	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/future/mod.rs	/^    fn map_err<F, E>(self, f: F) -> MapErr<Self, F>$/;"	f
map_err	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/mod.rs	/^    fn map_err<U, F>(self, f: F) -> MapErr<Self, F>$/;"	f
map_err	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/eager_drop.rs	/^fn map_err() {$/;"	f
map_err	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/sink.rs	/^fn map_err() {$/;"	f
map_err	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/stream.rs	/^fn map_err() {$/;"	f
map_err1	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/eventual.rs	/^fn map_err1() {$/;"	f
map_err2	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/eventual.rs	/^fn map_err2() {$/;"	f
map_err3	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/eventual.rs	/^fn map_err3() {$/;"	f
max_frame_length	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/src/length_delimited.rs	/^    pub fn max_frame_length(&mut self, val: usize) -> &mut Self {$/;"	f
max_senders	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/sync/mpsc/mod.rs	/^    fn max_senders(&self) -> usize {$/;"	f
merge	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/mod.rs	/^    fn merge<S>(self, other: S) -> Merge<Self, S>$/;"	f
mio_poll	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/benches/mio-ops.rs	/^fn mio_poll(b: &mut Bencher) {$/;"	f
mio_register_deregister	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/benches/mio-ops.rs	/^fn mio_register_deregister(b: &mut Bencher) {$/;"	f
mio_reregister	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/benches/mio-ops.rs	/^fn mio_reregister(b: &mut Bencher) {$/;"	f
mock	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/src/framed_write.rs	/^macro_rules! mock {$/;"	d
mock	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/tests/framed_read.rs	/^macro_rules! mock {$/;"	d
mock	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/tests/framed_write.rs	/^macro_rules! mock {$/;"	d
mock	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/tests/length_delimited.rs	/^macro_rules! mock {$/;"	d
mpsc_backpressure	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/unsync.rs	/^fn mpsc_backpressure() {$/;"	f
mpsc_blocking_start_send	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/sink.rs	/^fn mpsc_blocking_start_send() {$/;"	f
mpsc_recv_unpark	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/unsync.rs	/^fn mpsc_recv_unpark() {$/;"	f
mpsc_rx_end	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/unsync.rs	/^fn mpsc_rx_end() {$/;"	f
mpsc_rx_notready	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/unsync.rs	/^fn mpsc_rx_notready() {$/;"	f
mpsc_send_recv	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/unsync.rs	/^fn mpsc_send_recv() {$/;"	f
mpsc_send_unpark	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/unsync.rs	/^fn mpsc_send_unpark() {$/;"	f
mpsc_tx_err	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/unsync.rs	/^fn mpsc_tx_err() {$/;"	f
mpsc_tx_notready	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/unsync.rs	/^fn mpsc_tx_notready() {$/;"	f
mpsc_unbounded	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/unsync.rs	/^fn mpsc_unbounded() {$/;"	f
msg	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/tests/test_multiplex_client.rs	/^fn msg(id: RequestId, msg: &'static str) -> Frame<&'static str, u32, io::Error> {$/;"	f
msg	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/tests/test_multiplex_server.rs	/^fn msg(id: RequestId, msg: &'static str) -> Frame<&'static str, u32, io::Error> {$/;"	f
msg	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/tests/test_pipeline_client.rs	/^fn msg(msg: &'static str) -> Frame<&'static str, u32, io::Error> {$/;"	f
msg	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/tests/test_pipeline_server.rs	/^fn msg(msg: &'static str) -> Frame<&'static str, u32, io::Error> {$/;"	f
msg_with_body	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/tests/test_multiplex_client.rs	/^fn msg_with_body(id: RequestId, msg: &'static str) -> Frame<&'static str, u32, io::Error> {$/;"	f
msg_with_body	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/tests/test_multiplex_server.rs	/^fn msg_with_body(id: RequestId, msg: &'static str) -> Frame<&'static str, u32, io::Error> {$/;"	f
msg_with_body	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/tests/test_pipeline_server.rs	/^fn msg_with_body(msg: &'static str) -> Frame<&'static str, u32, io::Error> {$/;"	f
multi_frames_on_eof	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/tests/framed_read.rs	/^fn multi_frames_on_eof() {$/;"	f
multicast_loop_v4	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/net/udp/mod.rs	/^    pub fn multicast_loop_v4(&self) -> io::Result<bool> {$/;"	f
multicast_loop_v6	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/net/udp/mod.rs	/^    pub fn multicast_loop_v6(&self) -> io::Result<bool> {$/;"	f
multicast_ttl_v4	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/net/udp/mod.rs	/^    pub fn multicast_ttl_v4(&self) -> io::Result<u32> {$/;"	f
multiplex_client	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/tests/support/mock.rs	/^pub fn multiplex_client()$/;"	f
multiplex_server	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/tests/support/mock.rs	/^pub fn multiplex_server<S>(s: S)$/;"	f
native_endian	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.0.0/src/lib.rs	/^                fn native_endian() {$/;"	f
need_read	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/reactor/poll_evented.rs	/^    pub fn need_read(&self) {$/;"	f
need_write	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/reactor/poll_evented.rs	/^    pub fn need_write(&self) {$/;"	f
new	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/src/buf/chain.rs	/^    pub fn new(a: T, b: U) -> Chain<T, U> {$/;"	f
new	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/src/buf/iter.rs	/^pub fn new<T>(inner: T) -> Iter<T> {$/;"	f
new	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/src/buf/reader.rs	/^pub fn new<B>(buf: B) -> Reader<B> {$/;"	f
new	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/src/buf/take.rs	/^pub fn new<T>(inner: T, limit: usize) -> Take<T> {$/;"	f
new	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/src/buf/writer.rs	/^pub fn new<B>(buf: B) -> Writer<B> {$/;"	f
new	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/src/bytes.rs	/^    pub fn new() -> Bytes {$/;"	f
new	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/future/and_then.rs	/^pub fn new<A, B, F>(future: A, f: F) -> AndThen<A, B, F>$/;"	f
new	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/future/catch_unwind.rs	/^pub fn new<F>(future: F) -> CatchUnwind<F>$/;"	f
new	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/future/chain.rs	/^    pub fn new(a: A, c: C) -> Chain<A, B, C> {$/;"	f
new	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/future/flatten.rs	/^pub fn new<A>(future: A) -> Flatten<A>$/;"	f
new	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/future/flatten_stream.rs	/^pub fn new<F>(f: F) -> FlattenStream<F>$/;"	f
new	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/future/from_err.rs	/^pub fn new<A, E>(future: A) -> FromErr<A, E>$/;"	f
new	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/future/fuse.rs	/^pub fn new<A: Future>(f: A) -> Fuse<A> {$/;"	f
new	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/future/into_stream.rs	/^pub fn new<F: Future>(future: F) -> IntoStream<F> {$/;"	f
new	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/future/map.rs	/^pub fn new<A, F>(future: A, f: F) -> Map<A, F>$/;"	f
new	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/future/map_err.rs	/^pub fn new<A, F>(future: A, f: F) -> MapErr<A, F>$/;"	f
new	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/future/or_else.rs	/^pub fn new<A, B, F>(future: A, f: F) -> OrElse<A, B, F>$/;"	f
new	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/future/select.rs	/^pub fn new<A, B>(a: A, b: B) -> Select<A, B>$/;"	f
new	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/future/select2.rs	/^pub fn new<A, B>(a: A, b: B) -> Select2<A, B> {$/;"	f
new	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/future/shared.rs	/^    pub fn new(future: F) -> Self {$/;"	f
new	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/future/shared.rs	/^pub fn new<F: Future>(future: F) -> Shared<F> {$/;"	f
new	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/future/then.rs	/^pub fn new<A, B, F>(future: A, f: F) -> Then<A, B, F>$/;"	f
new	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/lock.rs	/^    pub fn new(t: T) -> Lock<T> {$/;"	f
new	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/sink/buffer.rs	/^pub fn new<S: Sink>(sink: S, amt: usize) -> Buffer<S> {$/;"	f
new	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/sink/flush.rs	/^pub fn new<S: Sink>(sink: S) -> Flush<S> {$/;"	f
new	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/sink/from_err.rs	/^pub fn new<S, E>(sink: S) -> SinkFromErr<S, E>$/;"	f
new	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/sink/map_err.rs	/^pub fn new<S, F>(s: S, f: F) -> SinkMapErr<S, F> {$/;"	f
new	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/sink/send.rs	/^pub fn new<S: Sink>(sink: S, item: S::SinkItem) -> Send<S> {$/;"	f
new	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/sink/send_all.rs	/^pub fn new<T, U>(sink: T, stream: U) -> SendAll<T, U>$/;"	f
new	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/sink/wait.rs	/^pub fn new<S: Sink>(s: S) -> Wait<S> {$/;"	f
new	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/sink/with.rs	/^pub fn new<S, U, F, Fut>(sink: S, f: F) -> With<S, U, F, Fut>$/;"	f
new	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stack.rs	/^    pub fn new() -> Stack<T> {$/;"	f
new	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/and_then.rs	/^pub fn new<S, F, U>(s: S, f: F) -> AndThen<S, F, U>$/;"	f
new	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/buffer_unordered.rs	/^pub fn new<S>(s: S, amt: usize) -> BufferUnordered<S>$/;"	f
new	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/buffered.rs	/^pub fn new<S>(s: S, amt: usize) -> Buffered<S>$/;"	f
new	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/catch_unwind.rs	/^pub fn new<S>(stream: S) -> CatchUnwind<S>$/;"	f
new	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/chain.rs	/^pub fn new<S1, S2>(s1: S1, s2: S2) -> Chain<S1, S2>$/;"	f
new	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/chunks.rs	/^pub fn new<S>(s: S, capacity: usize) -> Chunks<S>$/;"	f
new	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/collect.rs	/^pub fn new<S>(s: S) -> Collect<S>$/;"	f
new	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/concat.rs	/^pub fn new<S>(s: S) -> Concat<S>$/;"	f
new	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/filter.rs	/^pub fn new<S, F>(s: S, f: F) -> Filter<S, F>$/;"	f
new	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/filter_map.rs	/^pub fn new<S, F, B>(s: S, f: F) -> FilterMap<S, F>$/;"	f
new	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/flatten.rs	/^pub fn new<S>(s: S) -> Flatten<S>$/;"	f
new	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/fold.rs	/^pub fn new<S, F, Fut, T>(s: S, f: F, t: T) -> Fold<S, F, Fut, T>$/;"	f
new	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/for_each.rs	/^pub fn new<S, F, U>(s: S, f: F) -> ForEach<S, F, U>$/;"	f
new	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/forward.rs	/^pub fn new<T, U>(stream: T, sink: U) -> Forward<T, U>$/;"	f
new	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/from_err.rs	/^pub fn new<S, E>(stream: S) -> FromErr<S, E>$/;"	f
new	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/fuse.rs	/^pub fn new<S: Stream>(s: S) -> Fuse<S> {$/;"	f
new	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/future.rs	/^pub fn new<S: Stream>(s: S) -> StreamFuture<S> {$/;"	f
new	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/map.rs	/^pub fn new<S, F, U>(s: S, f: F) -> Map<S, F>$/;"	f
new	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/map_err.rs	/^pub fn new<S, F, U>(s: S, f: F) -> MapErr<S, F>$/;"	f
new	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/merge.rs	/^pub fn new<S1, S2>(stream1: S1, stream2: S2) -> Merge<S1, S2>$/;"	f
new	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/or_else.rs	/^pub fn new<S, F, U>(s: S, f: F) -> OrElse<S, F, U>$/;"	f
new	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/peek.rs	/^pub fn new<S: Stream>(stream: S) -> Peekable<S> {$/;"	f
new	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/select.rs	/^pub fn new<S1, S2>(stream1: S1, stream2: S2) -> Select<S1, S2>$/;"	f
new	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/skip.rs	/^pub fn new<S>(s: S, amt: u64) -> Skip<S>$/;"	f
new	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/skip_while.rs	/^pub fn new<S, P, R>(s: S, p: P) -> SkipWhile<S, P, R>$/;"	f
new	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/take.rs	/^pub fn new<S>(s: S, amt: u64) -> Take<S>$/;"	f
new	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/take_while.rs	/^pub fn new<S, P, R>(s: S, p: P) -> TakeWhile<S, P, R>$/;"	f
new	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/then.rs	/^pub fn new<S, F, U>(s: S, f: F) -> Then<S, F, U>$/;"	f
new	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/wait.rs	/^pub fn new<S: Stream>(s: S) -> Wait<S> {$/;"	f
new	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/zip.rs	/^pub fn new<S1, S2>(stream1: S1, stream2: S2) -> Zip<S1, S2>$/;"	f
new	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/sync/bilock.rs	/^    pub fn new(t: T) -> (BiLock<T>, BiLock<T>) {$/;"	f
new	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/sync/mpsc/queue.rs	/^    pub fn new() -> Queue<T> {$/;"	f
new	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/sync/mpsc/queue.rs	/^    unsafe fn new(v: Option<T>) -> *mut Node<T> {$/;"	f
new	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/task_impl/mod.rs	/^    fn new() -> Events {$/;"	f
new	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/task_impl/mod.rs	/^    fn new(thread: thread::Thread) -> ThreadUnpark {$/;"	f
new	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/task_impl/mod.rs	/^    pub fn new(set: Arc<EventSet>, id: usize) -> UnparkEvent {$/;"	f
new	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/task_impl/task_rc.rs	/^    pub fn new(a: A) -> TaskRc<A> {$/;"	f
new	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/task_impl/unpark_mutex.rs	/^    pub fn new() -> UnparkMutex<D> {$/;"	f
new	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/sink.rs	/^    fn new() -> Allow {$/;"	f
new	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/sink.rs	/^    fn new() -> Arc<Flag> {$/;"	f
new	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/sink.rs	/^    fn new() -> ManualFlush<T> {$/;"	f
new	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/sink.rs	/^    fn new(sink: S, item: S::SinkItem) -> StartSendFut<S> {$/;"	f
new	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/support/local_executor.rs	/^    pub fn new() -> Self {$/;"	f
new	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/benches/latency.rs	/^    fn new(s: UdpSocket) -> Self {$/;"	f
new	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/heap.rs	/^    pub fn new() -> Heap<T> {$/;"	f
new	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/io/frame.rs	/^    pub fn new() -> EasyBuf {$/;"	f
new	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/io/window.rs	/^    pub fn new(t: T) -> Window<T> {$/;"	f
new	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/net/tcp.rs	/^    fn new(connected_stream: mio::tcp::TcpStream, handle: &Handle)$/;"	f
new	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/net/tcp.rs	/^    fn new(listener: mio::tcp::TcpListener, handle: &Handle)$/;"	f
new	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/net/udp/frame.rs	/^pub fn new<C: UdpCodec>(socket: UdpSocket, codec: C) -> UdpFramed<C> {$/;"	f
new	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/net/udp/mod.rs	/^    fn new(socket: mio::udp::UdpSocket, handle: &Handle) -> io::Result<UdpSocket> {$/;"	f
new	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/reactor/interval.rs	/^        fn new() -> Timeline {$/;"	f
new	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/reactor/interval.rs	/^    pub fn new(dur: Duration, handle: &Handle) -> io::Result<Interval> {$/;"	f
new	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/reactor/io_token.rs	/^    pub fn new(source: &Evented, handle: &Handle) -> io::Result<IoToken> {$/;"	f
new	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/reactor/mod.rs	/^    pub fn new() -> io::Result<Core> {$/;"	f
new	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/reactor/poll_evented.rs	/^    pub fn new(io: E, handle: &Handle) -> io::Result<PollEvented<E>> {$/;"	f
new	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/reactor/timeout.rs	/^    pub fn new(dur: Duration, handle: &Handle) -> io::Result<Timeout> {$/;"	f
new	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/reactor/timeout_token.rs	/^    pub fn new(at: Instant, handle: &Handle) -> io::Result<TimeoutToken> {$/;"	f
new	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/tests/pipe-hup.rs	/^    fn new(file: File) -> MyFile {$/;"	f
new	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/src/framed_read.rs	/^    pub fn new(inner: T, decoder: D) -> FramedRead<T, D> {$/;"	f
new	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/src/framed_write.rs	/^    pub fn new(inner: T, encoder: E) -> FramedWrite<T, E> {$/;"	f
new	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/src/length_delimited.rs	/^    pub fn new() -> Builder {$/;"	f
new	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/src/length_delimited.rs	/^    pub fn new(inner: T) -> Framed<T, B> {$/;"	f
new	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/src/length_delimited.rs	/^    pub fn new(inner: T) -> FramedRead<T> {$/;"	f
new	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/src/length_delimited.rs	/^    pub fn new(inner: T) -> FramedWrite<T, B> {$/;"	f
new	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/src/window.rs	/^    pub fn new(t: T) -> Window<T> {$/;"	f
new	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/buffer_one.rs	/^    pub fn new(sink: S) -> BufferOne<S> {$/;"	f
new	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/multiplex/advanced.rs	/^    fn new(request: Request<T>, deque: FrameDeque<Option<Result<T::BodyOut, T::Error>>>) -> Exchange<T> {$/;"	f
new	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/multiplex/advanced.rs	/^    pub fn new(dispatch: T) -> Multiplex<T> {$/;"	f
new	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/multiplex/advanced.rs	/^    pub fn new(id: RequestId, message: Message<T, B>) -> MultiplexMessage<T, B, E> {$/;"	f
new	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/pipeline/advanced.rs	/^    pub fn new(dispatch: T) -> Pipeline<T> {$/;"	f
new	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/tcp_client.rs	/^    pub fn new(protocol: P) -> TcpClient<Kind, P> {$/;"	f
new	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/tcp_server.rs	/^    pub fn new(protocol: P, addr: SocketAddr) -> TcpServer<Kind, P> {$/;"	f
new	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/tests/test_multiplex_deadlock.rs	/^        fn new(upstream: T) -> Transport<T> {$/;"	f
new	/Users/akito/workspace/tokio-toy-http/src/http_parser.rs	/^    pub fn new(headers: &'a mut [Header<'b>]) -> Request<'a, 'b> {$/;"	f
new_at	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/reactor/interval.rs	/^    pub fn new_at(at: Instant, dur: Duration, handle: &Handle)$/;"	f
new_at	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/reactor/timeout.rs	/^    pub fn new_at(at: Instant, handle: &Handle) -> io::Result<Timeout> {$/;"	f
new_framed	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/src/length_delimited.rs	/^    pub fn new_framed<T, B>(&self, inner: T) -> Framed<T, B>$/;"	f
new_read	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/src/length_delimited.rs	/^    pub fn new_read<T>(&self, upstream: T) -> FramedRead<T>$/;"	f
new_service	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-service-0.1.0/src/lib.rs	/^    fn new_service(&self) -> io::Result<R> {$/;"	f
new_service	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-service-0.1.0/src/lib.rs	/^    fn new_service(&self) -> io::Result<S::Instance> {$/;"	f
new_service	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-service-0.1.0/src/lib.rs	/^    fn new_service(&self) -> io::Result<Self::Instance>;$/;"	f
new_write	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/src/length_delimited.rs	/^    pub fn new_write<T, B>(&self, inner: T) -> FramedWrite<T, B>$/;"	f
next	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/src/buf/iter.rs	/^    fn next(&mut self) -> Option<u8> {$/;"	f
next	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stack.rs	/^    fn next(&mut self) -> Option<T> {$/;"	f
next	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/wait.rs	/^    fn next(&mut self) -> Option<Self::Item> {$/;"	f
next	/Users/akito/workspace/tokio-toy-http/src/http_parser.rs	/^macro_rules! next{$/;"	d
next_interval	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/reactor/interval.rs	/^fn next_interval(prev: Instant, now: Instant, interval: Duration) -> Instant {$/;"	f
next_line	/Users/akito/workspace/tokio-toy-http/src/http_parser.rs	/^macro_rules! next_line{$/;"	d
next_message	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/sync/mpsc/mod.rs	/^    fn next_message(&mut self) -> Async<Option<T>> {$/;"	f
next_write	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/tests/support/mock.rs	/^    pub fn next_write(&mut self) -> T {$/;"	f
no_panic	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/stream_catch_unwind.rs	/^fn no_panic() {$/;"	f
nodelay	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/net/tcp.rs	/^    pub fn nodelay(&self) -> io::Result<bool> {$/;"	f
norm_next	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/reactor/interval.rs	/^    fn norm_next() {$/;"	f
notify	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/task_impl/unpark_mutex.rs	/^    pub fn notify(&self) -> Result<D, ()> {$/;"	f
notify	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/reactor/mod.rs	/^    fn notify(&self, msg: Message) {$/;"	f
notify_handle	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/reactor/mod.rs	/^    fn notify_handle(&self, handle: Task) {$/;"	f
num_head_bytes	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/src/length_delimited.rs	/^    fn num_head_bytes(&self) -> usize {$/;"	f
num_skip	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/src/length_delimited.rs	/^    pub fn num_skip(&mut self, val: usize) -> &mut Self {$/;"	f
ok	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/future/result.rs	/^pub fn ok<T, E>(t: T) -> FutureResult<T, E> {$/;"	f
ok	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/all.rs	/^    fn ok<T: Send + 'static>(a: T) -> FutureResult<T, u32> {$/;"	f
once	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/once.rs	/^pub fn once<T, E>(item: Result<T, E>) -> Once<T, E> {$/;"	f
one_thread	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/shared.rs	/^fn one_thread() {$/;"	f
oneshot1	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/eventual.rs	/^fn oneshot1() {$/;"	f
oneshot2	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/eventual.rs	/^fn oneshot2() {$/;"	f
oneshot3	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/eventual.rs	/^fn oneshot3() {$/;"	f
oneshot4	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/eventual.rs	/^fn oneshot4() {$/;"	f
oneshot5	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/eventual.rs	/^fn oneshot5() {$/;"	f
oneshot6	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/eventual.rs	/^fn oneshot6() {$/;"	f
only_v6	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/net/tcp.rs	/^    pub fn only_v6(&self) -> io::Result<bool> {$/;"	f
option	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/all.rs	/^fn option() {$/;"	f
or_else	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/future/mod.rs	/^    fn or_else<F, B>(self, f: F) -> OrElse<Self, B, F>$/;"	f
or_else	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/mod.rs	/^    fn or_else<F, U>(self, f: F) -> OrElse<Self, F, U>$/;"	f
or_else	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/stream.rs	/^fn or_else() {$/;"	f
or_else1	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/eventual.rs	/^fn or_else1() {$/;"	f
or_else2	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/eventual.rs	/^fn or_else2() {$/;"	f
pack_size	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.0.0/src/lib.rs	/^fn pack_size(n: u64) -> usize {$/;"	f
pair	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/body.rs	/^    pub fn pair() -> (mpsc::Sender<Result<T, E>>, Body<T, E>) {$/;"	f
pair	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/util/client_proxy.rs	/^pub fn pair<R, S, E>() -> Pair<R, S, E> {$/;"	f
panic_in_the_middle_of_the_stream	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/stream_catch_unwind.rs	/^fn panic_in_the_middle_of_the_stream() {$/;"	f
park	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/sync/mpsc/mod.rs	/^    fn park(&mut self, can_park: bool) {$/;"	f
park	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/task_impl/mod.rs	/^    fn park(&self) {$/;"	f
park	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/task_impl/mod.rs	/^pub fn park() -> Task {$/;"	f
parse_header	/Users/akito/workspace/tokio-toy-http/src/http_parser.rs	/^fn parse_header(itr: &mut slice::Iter<u8>, &mut headers: [Header]) -> io::Result<u8> {}$/;"	f
parse_method	/Users/akito/workspace/tokio-toy-http/src/http_parser.rs	/^fn parse_method(itr: &mut slice::Iter<u8>) -> io::Result<HttpMethod> {$/;"	f
parse_minor_version	/Users/akito/workspace/tokio-toy-http/src/http_parser.rs	/^fn parse_minor_version(itr: &mut slice::Iter<u8>) -> io::Result<u8> {$/;"	f
parse_path	/Users/akito/workspace/tokio-toy-http/src/http_parser.rs	/^fn parse_path(itr: &mut slice::Iter<u8>) -> io::Result<str> {$/;"	f
parse_request	/Users/akito/workspace/tokio-toy-http/src/http_parser.rs	/^pub fn parse_request<'a, 'b>(buf: &mut BytesMut) -> io::Result<Option<Request<'a, 'b>>> {$/;"	f
parse_u64	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/tests/simple_client_proto.rs	/^fn parse_u64(from: &[u8]) -> Result<u64, io::Error> {$/;"	f
partial_cmp	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/src/bytes.rs	/^    fn partial_cmp(&self, other: &&'a T) -> Option<cmp::Ordering> {$/;"	f
partial_cmp	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/src/bytes.rs	/^    fn partial_cmp(&self, other: &Bytes) -> Option<cmp::Ordering> {$/;"	f
partial_cmp	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/src/bytes.rs	/^    fn partial_cmp(&self, other: &BytesMut) -> Option<cmp::Ordering> {$/;"	f
partial_cmp	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/src/bytes.rs	/^    fn partial_cmp(&self, other: &String) -> Option<cmp::Ordering> {$/;"	f
partial_cmp	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/src/bytes.rs	/^    fn partial_cmp(&self, other: &Vec<u8>) -> Option<cmp::Ordering> {$/;"	f
partial_cmp	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/src/bytes.rs	/^    fn partial_cmp(&self, other: &[u8]) -> Option<cmp::Ordering> {$/;"	f
partial_cmp	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/src/bytes.rs	/^    fn partial_cmp(&self, other: &str) -> Option<cmp::Ordering> {$/;"	f
partial_cmp	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/io/frame.rs	/^    fn partial_cmp(&self, other: &T) -> Option<cmp::Ordering> {$/;"	f
peek	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/future/shared.rs	/^    pub fn peek(&self) -> Option<Result<SharedItem<F::Item>, SharedError<F::Error>>> {$/;"	f
peek	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/peek.rs	/^    pub fn peek(&mut self) -> Poll<Option<&S::Item>, S::Error> {$/;"	f
peek	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/shared.rs	/^fn peek() {$/;"	f
peek	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/stream.rs	/^fn peek() {$/;"	f
peek	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/heap.rs	/^    pub fn peek(&self) -> Option<&T> {$/;"	f
peekable	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/mod.rs	/^    fn peekable(self) -> Peekable<Self>$/;"	f
peekable	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/stream.rs	/^fn peekable() {$/;"	f
peer_addr	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/net/tcp.rs	/^    pub fn peer_addr(&self) -> io::Result<SocketAddr> {$/;"	f
percolate_down	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/heap.rs	/^    fn percolate_down(&mut self, mut idx: usize) -> usize {$/;"	f
percolate_up	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/heap.rs	/^    fn percolate_up(&mut self, mut idx: usize) -> usize {$/;"	f
pipeline_client	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/tests/support/mock.rs	/^pub fn pipeline_client()$/;"	f
pipeline_server	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/tests/support/mock.rs	/^pub fn pipeline_server<S>(s: S)$/;"	f
poll	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/future/and_then.rs	/^    fn poll(&mut self) -> Poll<B::Item, B::Error> {$/;"	f
poll	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/future/catch_unwind.rs	/^    fn poll(&mut self) -> Poll<F::Item, F::Error> {$/;"	f
poll	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/future/catch_unwind.rs	/^    fn poll(&mut self) -> Poll<Self::Item, Self::Error> {$/;"	f
poll	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/future/chain.rs	/^    pub fn poll<F>(&mut self, f: F) -> Poll<B::Item, B::Error>$/;"	f
poll	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/future/either.rs	/^    fn poll(&mut self) -> Poll<A::Item, A::Error> {$/;"	f
poll	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/future/empty.rs	/^    fn poll(&mut self) -> Poll<T, E> {$/;"	f
poll	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/future/flatten.rs	/^    fn poll(&mut self) -> Poll<Self::Item, Self::Error> {$/;"	f
poll	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/future/flatten_stream.rs	/^    fn poll(&mut self) -> Poll<Option<Self::Item>, Self::Error> {$/;"	f
poll	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/future/from_err.rs	/^    fn poll(&mut self) -> Poll<A::Item, E> {$/;"	f
poll	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/future/fuse.rs	/^    fn poll(&mut self) -> Poll<A::Item, A::Error> {$/;"	f
poll	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/future/into_stream.rs	/^    fn poll(&mut self) -> Poll<Option<Self::Item>, Self::Error> {$/;"	f
poll	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/future/join.rs	/^            fn poll(&mut self) -> Poll<Self::Item, Self::Error> {$/;"	f
poll	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/future/join.rs	/^    fn poll(&mut self) -> Result<bool, A::Error> {$/;"	f
poll	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/future/join_all.rs	/^    fn poll(&mut self) -> Poll<Self::Item, Self::Error> {$/;"	f
poll	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/future/lazy.rs	/^    fn poll(&mut self) -> Poll<R::Item, R::Error> {$/;"	f
poll	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/future/loop_fn.rs	/^    fn poll(&mut self) -> Poll<Self::Item, Self::Error> {$/;"	f
poll	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/future/map.rs	/^    fn poll(&mut self) -> Poll<U, A::Error> {$/;"	f
poll	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/future/map_err.rs	/^    fn poll(&mut self) -> Poll<A::Item, U> {$/;"	f
poll	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/future/mod.rs	/^        fn poll(&mut self) -> Poll<Self::Item, Self::Error> {$/;"	f
poll	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/future/mod.rs	/^    fn poll(&mut self) -> Poll<Self::Item, Self::Error> {$/;"	f
poll	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/future/mod.rs	/^    fn poll(&mut self) -> Poll<Self::Item, Self::Error>;$/;"	f
poll	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/future/option.rs	/^    fn poll(&mut self) -> Poll<Option<T>, E> {$/;"	f
poll	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/future/or_else.rs	/^    fn poll(&mut self) -> Poll<B::Item, B::Error> {$/;"	f
poll	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/future/poll_fn.rs	/^    fn poll(&mut self) -> Poll<T, E> {$/;"	f
poll	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/future/result.rs	/^    fn poll(&mut self) -> Poll<T, E> {$/;"	f
poll	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/future/select.rs	/^    fn poll(&mut self) -> Poll<Self::Item, Self::Error> {$/;"	f
poll	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/future/select2.rs	/^    fn poll(&mut self) -> Poll<Self::Item, Self::Error> {$/;"	f
poll	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/future/select_all.rs	/^    fn poll(&mut self) -> Poll<Self::Item, Self::Error> {$/;"	f
poll	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/future/select_ok.rs	/^    fn poll(&mut self) -> Poll<Self::Item, Self::Error> {$/;"	f
poll	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/future/shared.rs	/^    fn poll(&mut self) -> Poll<Self::Item, Self::Error> {$/;"	f
poll	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/future/then.rs	/^    fn poll(&mut self) -> Poll<B::Item, B::Error> {$/;"	f
poll	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/sink/buffer.rs	/^    fn poll(&mut self) -> Poll<Option<S::Item>, S::Error> {$/;"	f
poll	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/sink/flush.rs	/^    fn poll(&mut self) -> Poll<S, S::SinkError> {$/;"	f
poll	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/sink/from_err.rs	/^    fn poll(&mut self) -> Poll<Option<S::Item>, S::Error> {$/;"	f
poll	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/sink/send.rs	/^    fn poll(&mut self) -> Poll<S, S::SinkError> {$/;"	f
poll	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/sink/send_all.rs	/^    fn poll(&mut self) -> Poll<(T, U), T::SinkError> {$/;"	f
poll	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/sink/with.rs	/^    fn poll(&mut self) -> Poll<(), Fut::Error> {$/;"	f
poll	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/sink/with.rs	/^    fn poll(&mut self) -> Poll<Option<S::Item>, S::Error> {$/;"	f
poll	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/and_then.rs	/^    fn poll(&mut self) -> Poll<Option<U::Item>, S::Error> {$/;"	f
poll	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/buffer_unordered.rs	/^    fn poll(&mut self) -> Poll<Option<Self::Item>, Self::Error> {$/;"	f
poll	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/buffered.rs	/^    fn poll(&mut self) -> Poll<Option<Self::Item>, Self::Error> {$/;"	f
poll	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/catch_unwind.rs	/^    fn poll(&mut self) -> Poll<Option<S::Item>, S::Error> {$/;"	f
poll	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/catch_unwind.rs	/^    fn poll(&mut self) -> Poll<Option<Self::Item>, Self::Error> {$/;"	f
poll	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/chain.rs	/^    fn poll(&mut self) -> Poll<Option<Self::Item>, Self::Error> {$/;"	f
poll	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/channel.rs	/^    fn poll(&mut self) -> Poll<Option<T>, E> {$/;"	f
poll	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/channel.rs	/^    fn poll(&mut self) -> Poll<Self::Item, Self::Error> {$/;"	f
poll	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/chunks.rs	/^    fn poll(&mut self) -> Poll<Option<Self::Item>, Self::Error> {$/;"	f
poll	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/collect.rs	/^    fn poll(&mut self) -> Poll<Vec<S::Item>, S::Error> {$/;"	f
poll	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/concat.rs	/^    fn poll(&mut self) -> Poll<Self::Item, Self::Error> {$/;"	f
poll	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/empty.rs	/^    fn poll(&mut self) -> Poll<Option<Self::Item>, Self::Error> {$/;"	f
poll	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/filter.rs	/^    fn poll(&mut self) -> Poll<Option<S::Item>, S::Error> {$/;"	f
poll	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/filter_map.rs	/^    fn poll(&mut self) -> Poll<Option<B>, S::Error> {$/;"	f
poll	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/flatten.rs	/^    fn poll(&mut self) -> Poll<Option<Self::Item>, Self::Error> {$/;"	f
poll	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/fold.rs	/^    fn poll(&mut self) -> Poll<T, S::Error> {$/;"	f
poll	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/for_each.rs	/^    fn poll(&mut self) -> Poll<(), S::Error> {$/;"	f
poll	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/forward.rs	/^    fn poll(&mut self) -> Poll<(T, U), T::Error> {$/;"	f
poll	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/from_err.rs	/^    fn poll(&mut self) -> Poll<Option<S::Item>, E> {$/;"	f
poll	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/fuse.rs	/^    fn poll(&mut self) -> Poll<Option<S::Item>, S::Error> {$/;"	f
poll	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/future.rs	/^    fn poll(&mut self) -> Poll<Self::Item, Self::Error> {$/;"	f
poll	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/futures_unordered.rs	/^    fn poll(&mut self) -> Poll<Option<Self::Item>, Self::Error> {$/;"	f
poll	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/iter.rs	/^    fn poll(&mut self) -> Poll<Option<T>, E> {$/;"	f
poll	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/map.rs	/^    fn poll(&mut self) -> Poll<Option<U>, S::Error> {$/;"	f
poll	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/map_err.rs	/^    fn poll(&mut self) -> Poll<Option<S::Item>, U> {$/;"	f
poll	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/merge.rs	/^    fn poll(&mut self) -> Poll<Option<Self::Item>, Self::Error> {$/;"	f
poll	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/mod.rs	/^        fn poll(&mut self) -> Poll<Option<Self::Item>, Self::Error> {$/;"	f
poll	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/mod.rs	/^    fn poll(&mut self) -> Poll<Option<Self::Item>, Self::Error> {$/;"	f
poll	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/mod.rs	/^    fn poll(&mut self) -> Poll<Option<Self::Item>, Self::Error>;$/;"	f
poll	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/once.rs	/^    fn poll(&mut self) -> Poll<Option<T>, E> {$/;"	f
poll	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/or_else.rs	/^    fn poll(&mut self) -> Poll<Option<S::Item>, U::Error> {$/;"	f
poll	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/peek.rs	/^    fn poll(&mut self) -> Poll<Option<Self::Item>, Self::Error> {$/;"	f
poll	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/repeat.rs	/^    fn poll(&mut self) -> Poll<Option<Self::Item>, Self::Error> {$/;"	f
poll	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/select.rs	/^    fn poll(&mut self) -> Poll<Option<S1::Item>, S1::Error> {$/;"	f
poll	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/skip.rs	/^    fn poll(&mut self) -> Poll<Option<S::Item>, S::Error> {$/;"	f
poll	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/skip_while.rs	/^    fn poll(&mut self) -> Poll<Option<S::Item>, S::Error> {$/;"	f
poll	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/split.rs	/^    fn poll(&mut self) -> Poll<Option<S::Item>, S::Error> {$/;"	f
poll	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/take.rs	/^    fn poll(&mut self) -> Poll<Option<S::Item>, S::Error> {$/;"	f
poll	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/take_while.rs	/^    fn poll(&mut self) -> Poll<Option<S::Item>, S::Error> {$/;"	f
poll	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/then.rs	/^    fn poll(&mut self) -> Poll<Option<U::Item>, U::Error> {$/;"	f
poll	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/unfold.rs	/^    fn poll(&mut self) -> Poll<Option<It>, Fut::Error> {$/;"	f
poll	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/zip.rs	/^    fn poll(&mut self) -> Poll<Option<Self::Item>, Self::Error> {$/;"	f
poll	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/sync/bilock.rs	/^    fn poll(&mut self) -> Poll<BiLockAcquired<T>, ()> {$/;"	f
poll	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/sync/mpsc/mod.rs	/^    fn poll(&mut self) -> Poll<Option<T>, ()> {$/;"	f
poll	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/sync/oneshot.rs	/^    fn poll(&mut self) -> Poll<T, Canceled> {$/;"	f
poll	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/unsync/mpsc.rs	/^    fn poll(&mut self) -> Poll<Option<Self::Item>, Self::Error> {$/;"	f
poll	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/unsync/oneshot.rs	/^    fn poll(&mut self) -> Poll<Self::Item, Self::Error> {$/;"	f
poll	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/bilock.rs	/^        fn poll(&mut self) -> Poll<BiLock<usize>, ()> {$/;"	f
poll	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/eager_drop.rs	/^    fn poll(&mut self) -> Poll<Self::Item, Self::Error> {$/;"	f
poll	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/future_flatten_stream.rs	/^    fn poll(&mut self) -> Poll<Option<Self::Item>, Self::Error> {$/;"	f
poll	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/oneshot.rs	/^    fn poll(&mut self) -> Poll<(), ()> {$/;"	f
poll	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/sink.rs	/^    fn poll(&mut self) -> Poll<S, S::SinkError> {$/;"	f
poll	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/split.rs	/^    fn poll(&mut self) -> Poll<Option<T::Item>, T::Error> {$/;"	f
poll	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/stream.rs	/^        fn poll(&mut self) -> Poll<(), u32> {$/;"	f
poll	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/support/mod.rs	/^    fn poll(&mut self) -> Poll<F::Item,F::Error> {$/;"	f
poll	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/benches/latency.rs	/^    fn poll(&mut self) -> Poll<(), io::Error> {$/;"	f
poll	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/examples/echo-udp.rs	/^    fn poll(&mut self) -> Poll<(), io::Error> {$/;"	f
poll	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/channel.rs	/^    fn poll(&mut self) -> Poll<Option<T>, io::Error> {$/;"	f
poll	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/io/copy.rs	/^    fn poll(&mut self) -> Poll<u64, io::Error> {$/;"	f
poll	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/io/flush.rs	/^    fn poll(&mut self) -> Poll<A, io::Error> {$/;"	f
poll	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/io/frame.rs	/^    fn poll(&mut self) -> Poll<Option<C::In>, io::Error> {$/;"	f
poll	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/io/read.rs	/^    fn poll(&mut self) -> Poll<(R, T, usize), ::std::io::Error> {$/;"	f
poll	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/io/read_exact.rs	/^    fn poll(&mut self) -> Poll<(A, T), io::Error> {$/;"	f
poll	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/io/read_to_end.rs	/^    fn poll(&mut self) -> Poll<(A, Vec<u8>), io::Error> {$/;"	f
poll	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/io/read_until.rs	/^    fn poll(&mut self) -> Poll<(A, Vec<u8>), io::Error> {$/;"	f
poll	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/io/write_all.rs	/^    fn poll(&mut self) -> Poll<(A, T), io::Error> {$/;"	f
poll	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/net/tcp.rs	/^    fn poll(&mut self) -> Poll<Option<Self::Item>, io::Error> {$/;"	f
poll	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/net/tcp.rs	/^    fn poll(&mut self) -> Poll<TcpStream, io::Error> {$/;"	f
poll	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/net/udp/frame.rs	/^    fn poll(&mut self) -> Poll<Option<C::In>, io::Error> {$/;"	f
poll	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/net/udp/mod.rs	/^    fn poll(&mut self) -> Poll<(UdpSocket, T), io::Error> {$/;"	f
poll	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/net/udp/mod.rs	/^    fn poll(&mut self) -> Poll<Self::Item, io::Error> {$/;"	f
poll	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/reactor/interval.rs	/^    fn poll(&mut self) -> Poll<Option<()>, io::Error> {$/;"	f
poll	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/reactor/mod.rs	/^    fn poll(&mut self, max_wait: Option<Duration>) -> bool {$/;"	f
poll	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/reactor/timeout.rs	/^    fn poll(&mut self) -> Poll<(), io::Error> {$/;"	f
poll	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/tests/udp.rs	/^    fn poll(&mut self) -> Poll<(), io::Error> {$/;"	f
poll	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/src/copy.rs	/^    fn poll(&mut self) -> Poll<(u64, R, W), io::Error> {$/;"	f
poll	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/src/flush.rs	/^    fn poll(&mut self) -> Poll<A, io::Error> {$/;"	f
poll	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/src/framed.rs	/^    fn poll(&mut self) -> Poll<Option<Self::Item>, Self::Error> {$/;"	f
poll	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/src/framed_read.rs	/^    fn poll(&mut self) -> Poll<Option<Self::Item>, Self::Error> {$/;"	f
poll	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/src/framed_write.rs	/^    fn poll(&mut self) -> Poll<Option<Self::Item>, Self::Error> {$/;"	f
poll	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/src/length_delimited.rs	/^    fn poll(&mut self) -> Poll<Option<BytesMut>, io::Error> {$/;"	f
poll	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/src/length_delimited.rs	/^    fn poll(&mut self) -> Poll<Option<T::Item>, T::Error> {$/;"	f
poll	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/src/lines.rs	/^    fn poll(&mut self) -> Poll<Option<String>, io::Error> {$/;"	f
poll	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/src/read.rs	/^    fn poll(&mut self) -> Poll<(R, T, usize), io::Error> {$/;"	f
poll	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/src/read_exact.rs	/^    fn poll(&mut self) -> Poll<(A, T), io::Error> {$/;"	f
poll	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/src/read_to_end.rs	/^    fn poll(&mut self) -> Poll<(A, Vec<u8>), io::Error> {$/;"	f
poll	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/src/read_until.rs	/^    fn poll(&mut self) -> Poll<(A, Vec<u8>), io::Error> {$/;"	f
poll	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/src/shutdown.rs	/^    fn poll(&mut self) -> Poll<A, io::Error> {$/;"	f
poll	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/src/write_all.rs	/^    fn poll(&mut self) -> Poll<(A, T), io::Error> {$/;"	f
poll	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/buffer_one.rs	/^    fn poll(&mut self) -> Poll<Option<S::Item>, S::Error> {$/;"	f
poll	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/simple/multiplex/client.rs	/^    fn poll(&mut self) -> Poll<Self::Item, Self::Error> {$/;"	f
poll	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/simple/multiplex/mod.rs	/^        fn poll(&mut self) -> Poll<Option<Self::Item>, io::Error> {$/;"	f
poll	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/simple/multiplex/mod.rs	/^        fn poll(&mut self) -> Poll<Self::Item, io::Error> {$/;"	f
poll	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/simple/multiplex/server.rs	/^    fn poll(&mut self) -> Poll<Self::Item, Self::Error> {$/;"	f
poll	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/simple/pipeline/client.rs	/^    fn poll(&mut self) -> Poll<Self::Item, Self::Error> {$/;"	f
poll	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/simple/pipeline/mod.rs	/^        fn poll(&mut self) -> Poll<Option<Self::Item>, io::Error> {$/;"	f
poll	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/simple/pipeline/mod.rs	/^        fn poll(&mut self) -> Poll<Self::Item, io::Error> {$/;"	f
poll	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/simple/pipeline/server.rs	/^    fn poll(&mut self) -> Poll<Self::Item, Self::Error> {$/;"	f
poll	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/body.rs	/^    fn poll(&mut self) -> Poll<Option<T>, E> {$/;"	f
poll	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/multiplex/advanced.rs	/^    fn poll(&mut self) -> Poll<(), io::Error> {$/;"	f
poll	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/multiplex/advanced.rs	/^    fn poll(&mut self) -> Poll<Option<MultiplexMessage<Self::In, Self::Stream, Self::Error>>, io::Error>;$/;"	f
poll	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/multiplex/client.rs	/^    fn poll(&mut self) -> Poll<Option<MultiplexMessage<Self::In, B, Self::Error>>, io::Error> {$/;"	f
poll	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/multiplex/server.rs	/^    fn poll(&mut self) -> Poll<Option<MultiplexMessage<Self::In, B, Self::Error>>, io::Error> {$/;"	f
poll	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/multiplex/server.rs	/^    fn poll(&mut self) -> bool {$/;"	f
poll	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/pipeline/advanced.rs	/^    fn poll(&mut self) -> Poll<(), io::Error> {$/;"	f
poll	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/pipeline/advanced.rs	/^    fn poll(&mut self) -> Poll<Option<PipelineMessage<Self::In, Self::Stream, Self::Error>>, io::Error>;$/;"	f
poll	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/pipeline/client.rs	/^    fn poll(&mut self) -> Poll<Option<PipelineMessage<Self::In, Self::Stream, Self::Error>>,$/;"	f
poll	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/pipeline/server.rs	/^    fn poll(&mut self) -> Poll<Option<PipelineMessage<Self::In, Self::Stream, Self::Error>>, io::Error> {$/;"	f
poll	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/pipeline/server.rs	/^    fn poll(&mut self) {$/;"	f
poll	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/tcp_client.rs	/^    fn poll(&mut self) -> Poll<P::BindClient, io::Error> {$/;"	f
poll	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/util/client_proxy.rs	/^    fn poll(&mut self) -> Poll<T, E> {$/;"	f
poll	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/tests/support/mock.rs	/^    fn poll(&mut self) -> Poll<Option<T>, io::Error> {$/;"	f
poll_cancel	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/sync/oneshot.rs	/^    pub fn poll_cancel(&mut self) -> Poll<(), ()> {$/;"	f
poll_cancel	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/unsync/oneshot.rs	/^    pub fn poll_cancel(&mut self) -> Poll<(), ()> {$/;"	f
poll_cancel	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/unsync-oneshot.rs	/^fn poll_cancel() {$/;"	f
poll_complete	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/sink/buffer.rs	/^    fn poll_complete(&mut self) -> Poll<(), Self::SinkError> {$/;"	f
poll_complete	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/sink/from_err.rs	/^    fn poll_complete(&mut self) -> Poll<(), Self::SinkError> {$/;"	f
poll_complete	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/sink/map_err.rs	/^    fn poll_complete(&mut self) -> Poll<(), Self::SinkError> {$/;"	f
poll_complete	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/sink/mod.rs	/^        fn poll_complete(&mut self) -> Poll<(), Self::SinkError> {$/;"	f
poll_complete	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/sink/mod.rs	/^    fn poll_complete(&mut self) -> Poll<(), Self::SinkError> {$/;"	f
poll_complete	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/sink/mod.rs	/^    fn poll_complete(&mut self) -> Poll<(), Self::SinkError>;$/;"	f
poll_complete	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/sink/with.rs	/^    fn poll_complete(&mut self) -> Poll<(), Fut::Error> {$/;"	f
poll_complete	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/and_then.rs	/^    fn poll_complete(&mut self) -> Poll<(), S::SinkError> {$/;"	f
poll_complete	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/buffer_unordered.rs	/^    fn poll_complete(&mut self) -> Poll<(), S::SinkError> {$/;"	f
poll_complete	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/buffered.rs	/^    fn poll_complete(&mut self) -> Poll<(), S::SinkError> {$/;"	f
poll_complete	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/chunks.rs	/^    fn poll_complete(&mut self) -> Poll<(), S::SinkError> {$/;"	f
poll_complete	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/filter.rs	/^    fn poll_complete(&mut self) -> Poll<(), S::SinkError> {$/;"	f
poll_complete	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/filter_map.rs	/^    fn poll_complete(&mut self) -> Poll<(), S::SinkError> {$/;"	f
poll_complete	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/flatten.rs	/^    fn poll_complete(&mut self) -> Poll<(), S::SinkError> {$/;"	f
poll_complete	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/from_err.rs	/^    fn poll_complete(&mut self) -> Poll<(), Self::SinkError> {$/;"	f
poll_complete	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/fuse.rs	/^    fn poll_complete(&mut self) -> Poll<(), S::SinkError> {$/;"	f
poll_complete	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/map.rs	/^    fn poll_complete(&mut self) -> Poll<(), S::SinkError> {$/;"	f
poll_complete	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/map_err.rs	/^    fn poll_complete(&mut self) -> Poll<(), S::SinkError> {$/;"	f
poll_complete	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/or_else.rs	/^    fn poll_complete(&mut self) -> Poll<(), S::SinkError> {$/;"	f
poll_complete	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/peek.rs	/^    fn poll_complete(&mut self) -> Poll<(), S::SinkError> {$/;"	f
poll_complete	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/skip.rs	/^    fn poll_complete(&mut self) -> Poll<(), S::SinkError> {$/;"	f
poll_complete	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/skip_while.rs	/^    fn poll_complete(&mut self) -> Poll<(), S::SinkError> {$/;"	f
poll_complete	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/split.rs	/^    fn poll_complete(&mut self) -> Poll<(), S::SinkError> {$/;"	f
poll_complete	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/take.rs	/^    fn poll_complete(&mut self) -> Poll<(), S::SinkError> {$/;"	f
poll_complete	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/take_while.rs	/^    fn poll_complete(&mut self) -> Poll<(), S::SinkError> {$/;"	f
poll_complete	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/then.rs	/^    fn poll_complete(&mut self) -> Poll<(), S::SinkError> {$/;"	f
poll_complete	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/sync/mpsc/mod.rs	/^    fn poll_complete(&mut self) -> Poll<(), SendError<T>> {$/;"	f
poll_complete	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/unsync/mpsc.rs	/^    fn poll_complete(&mut self) -> Poll<(), SendError<T>> {$/;"	f
poll_complete	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/sink.rs	/^    fn poll_complete(&mut self) -> Poll<(), ()> {$/;"	f
poll_complete	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/split.rs	/^    fn poll_complete(&mut self) -> Poll<(), U::SinkError> {$/;"	f
poll_complete	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/channel.rs	/^    fn poll_complete(&mut self) -> Poll<(), io::Error> {$/;"	f
poll_complete	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/io/frame.rs	/^    fn poll_complete(&mut self) -> Poll<(), io::Error> {$/;"	f
poll_complete	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/net/udp/frame.rs	/^    fn poll_complete(&mut self) -> Poll<(), io::Error> {$/;"	f
poll_complete	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/src/framed.rs	/^    fn poll_complete(&mut self) -> Poll<(), Self::SinkError> {$/;"	f
poll_complete	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/src/framed_read.rs	/^    fn poll_complete(&mut self) -> Poll<(), Self::SinkError> {$/;"	f
poll_complete	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/src/framed_write.rs	/^    fn poll_complete(&mut self) -> Poll<(), Self::SinkError> {$/;"	f
poll_complete	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/src/length_delimited.rs	/^    fn poll_complete(&mut self) -> Poll<(), T::SinkError> {$/;"	f
poll_complete	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/src/length_delimited.rs	/^    fn poll_complete(&mut self) -> Poll<(), io::Error> {$/;"	f
poll_complete	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/buffer_one.rs	/^    fn poll_complete(&mut self) -> Poll<(), Self::SinkError> {$/;"	f
poll_complete	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/simple/multiplex/mod.rs	/^        fn poll_complete(&mut self) -> Poll<(), io::Error> {$/;"	f
poll_complete	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/simple/pipeline/mod.rs	/^        fn poll_complete(&mut self) -> Poll<(), io::Error> {$/;"	f
poll_complete	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/multiplex/advanced.rs	/^    fn poll_complete(&mut self) -> Poll<(), io::Error> {$/;"	f
poll_complete	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/pipeline/advanced.rs	/^    fn poll_complete(&mut self) -> Poll<(), io::Error> {$/;"	f
poll_complete	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/tests/support/mock.rs	/^    fn poll_complete(&mut self) -> Poll<(), io::Error> {$/;"	f
poll_flush	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/task_impl/mod.rs	/^    pub fn poll_flush(&mut self, unpark: &Arc<Unpark>)$/;"	f
poll_fn	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/future/poll_fn.rs	/^pub fn poll_fn<T, E, F>(f: F) -> PollFn<F>$/;"	f
poll_future	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/task_impl/mod.rs	/^    pub fn poll_future(&mut self, unpark: Arc<Unpark>) -> Poll<F::Item, F::Error> {$/;"	f
poll_lock	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/sync/bilock.rs	/^    pub fn poll_lock(&self) -> Async<BiLockGuard<T>> {$/;"	f
poll_pending	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/buffer_unordered.rs	/^    fn poll_pending(&mut self)$/;"	f
poll_pending	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/futures_unordered.rs	/^    fn poll_pending(&mut self, mut drain: Drain<usize>)$/;"	f
poll_read	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/io/mod.rs	/^    fn poll_read(&mut self) -> Async<()> {$/;"	f
poll_read	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/io/mod.rs	/^    fn poll_read(&mut self) -> Async<()>;$/;"	f
poll_read	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/io/split.rs	/^    pub fn poll_read(&mut self) -> Async<()> {$/;"	f
poll_read	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/net/tcp.rs	/^    fn poll_read(&mut self) -> Async<()> {$/;"	f
poll_read	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/net/tcp.rs	/^    pub fn poll_read(&self) -> Async<()> {$/;"	f
poll_read	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/net/udp/mod.rs	/^    pub fn poll_read(&self) -> Async<()> {$/;"	f
poll_read	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/reactor/poll_evented.rs	/^    fn poll_read(&mut self) -> Async<()> {$/;"	f
poll_read	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/reactor/poll_evented.rs	/^    pub fn poll_read(&self) -> Async<()> {$/;"	f
poll_read	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/tests/test_multiplex_deadlock.rs	/^        fn poll_read(&mut self) -> Async<()> {$/;"	f
poll_ready	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/buffer_one.rs	/^    pub fn poll_ready(&mut self) -> Async<()> {$/;"	f
poll_ready	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/multiplex/advanced.rs	/^    fn poll_ready(&self) -> Async<()>;$/;"	f
poll_ready	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/multiplex/client.rs	/^    fn poll_ready(&self) -> Async<()> {$/;"	f
poll_ready	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/multiplex/server.rs	/^    fn poll_ready(&self) -> Async<()> {$/;"	f
poll_stream	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/task_impl/mod.rs	/^    pub fn poll_stream(&mut self, unpark: Arc<Unpark>)$/;"	f
poll_unparked	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/sync/mpsc/mod.rs	/^    fn poll_unparked(&mut self) -> Async<()> {$/;"	f
poll_write	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/io/mod.rs	/^    fn poll_write(&mut self) -> Async<()> {$/;"	f
poll_write	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/io/mod.rs	/^    fn poll_write(&mut self) -> Async<()>;$/;"	f
poll_write	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/io/split.rs	/^    pub fn poll_write(&mut self) -> Async<()> {$/;"	f
poll_write	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/net/tcp.rs	/^    fn poll_write(&mut self) -> Async<()> {$/;"	f
poll_write	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/net/tcp.rs	/^    pub fn poll_write(&self) -> Async<()> {$/;"	f
poll_write	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/net/udp/mod.rs	/^    pub fn poll_write(&self) -> Async<()> {$/;"	f
poll_write	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/reactor/poll_evented.rs	/^    fn poll_write(&mut self) -> Async<()> {$/;"	f
poll_write	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/reactor/poll_evented.rs	/^    pub fn poll_write(&self) -> Async<()> {$/;"	f
poll_write	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/tests/test_multiplex_deadlock.rs	/^        fn poll_write(&mut self) -> Async<()> {$/;"	f
poll_write_body	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/multiplex/mod.rs	/^    fn poll_write_body(&mut self, id: RequestId) -> Async<()> {$/;"	f
polled_then_ignored	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/shared.rs	/^fn polled_then_ignored() {$/;"	f
pop	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/sync/mpsc/queue.rs	/^    pub unsafe fn pop(&self) -> PopResult<T> {$/;"	f
pop	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/heap.rs	/^    pub fn pop(&mut self) -> Option<T> {$/;"	f
pop	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/multiplex/frame_buf.rs	/^    pub fn pop(&self) -> Option<T> {$/;"	f
prepare_uninitialized_buffer	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/net/tcp.rs	/^    unsafe fn prepare_uninitialized_buffer(&self, _: &mut [u8]) -> bool {$/;"	f
prepare_uninitialized_buffer	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/src/framed.rs	/^    unsafe fn prepare_uninitialized_buffer(&self, buf: &mut [u8]) -> bool {$/;"	f
prepare_uninitialized_buffer	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/src/framed_write.rs	/^    unsafe fn prepare_uninitialized_buffer(&self, buf: &mut [u8]) -> bool {$/;"	f
prepare_uninitialized_buffer	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/src/length_delimited.rs	/^    unsafe fn prepare_uninitialized_buffer(&self, buf: &mut [u8]) -> bool {$/;"	f
prepare_uninitialized_buffer	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/src/lib.rs	/^    unsafe fn prepare_uninitialized_buffer(&self, _: &mut [u8]) -> bool {$/;"	f
prepare_uninitialized_buffer	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/src/lib.rs	/^    unsafe fn prepare_uninitialized_buffer(&self, _buf: &mut [u8]) -> bool {$/;"	f
prepare_uninitialized_buffer	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/src/lib.rs	/^    unsafe fn prepare_uninitialized_buffer(&self, buf: &mut [u8]) -> bool {$/;"	f
prepare_uninitialized_buffer	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/tests/async_read.rs	/^        unsafe fn prepare_uninitialized_buffer(&self, _: &mut [u8]) -> bool {$/;"	f
process_out_body_chunk	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/multiplex/advanced.rs	/^    fn process_out_body_chunk(&mut self, id: RequestId, chunk: Result<Option<T::BodyOut>, T::Error>) {$/;"	f
process_out_body_chunk	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/pipeline/advanced.rs	/^    fn process_out_body_chunk(&mut self, chunk: T::BodyOut) -> io::Result<()> {$/;"	f
process_out_err	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/multiplex/advanced.rs	/^    fn process_out_err(&mut self, id: RequestId, err: T::Error) -> io::Result<()> {$/;"	f
process_out_frame	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/multiplex/advanced.rs	/^    fn process_out_frame(&mut self,$/;"	f
process_out_frame	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/pipeline/advanced.rs	/^    fn process_out_frame(&mut self,$/;"	f
process_out_message	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/multiplex/advanced.rs	/^    fn process_out_message(&mut self,$/;"	f
prop	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.0.0/src/lib.rs	/^                    fn prop(n: $ty_int) -> bool {$/;"	f
push	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stack.rs	/^    pub fn push(&self, data: T) {$/;"	f
push	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/sync/mpsc/queue.rs	/^    pub fn push(&self, t: T) {$/;"	f
push	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/heap.rs	/^    pub fn push(&mut self, t: T) -> Slot {$/;"	f
push	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/multiplex/frame_buf.rs	/^    pub fn push(&self, val: T) {$/;"	f
push_front	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/multiplex/frame_buf.rs	/^    pub fn push_front(&self, val: T) {$/;"	f
put	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/src/buf/buf_mut.rs	/^    fn put<T: IntoBuf>(&mut self, src: T) where Self: Sized {$/;"	f
put_f32	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/src/buf/buf_mut.rs	/^    fn put_f32<T: ByteOrder>(&mut self, n: f32) {$/;"	f
put_f64	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/src/buf/buf_mut.rs	/^    fn put_f64<T: ByteOrder>(&mut self, n: f64) {$/;"	f
put_i16	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/src/buf/buf_mut.rs	/^    fn put_i16<T: ByteOrder>(&mut self, n: i16) {$/;"	f
put_i32	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/src/buf/buf_mut.rs	/^    fn put_i32<T: ByteOrder>(&mut self, n: i32) {$/;"	f
put_i64	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/src/buf/buf_mut.rs	/^    fn put_i64<T: ByteOrder>(&mut self, n: i64) {$/;"	f
put_i8	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/src/buf/buf_mut.rs	/^    fn put_i8(&mut self, n: i8) {$/;"	f
put_int	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/src/buf/buf_mut.rs	/^    fn put_int<T: ByteOrder>(&mut self, n: i64, nbytes: usize) {$/;"	f
put_slice	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/src/buf/buf_mut.rs	/^    fn put_slice(&mut self, src: &[u8]) {$/;"	f
put_slice	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/src/bytes.rs	/^    fn put_slice(&mut self, src: &[u8]) {$/;"	f
put_u16	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/src/buf/buf_mut.rs	/^    fn put_u16<T: ByteOrder>(&mut self, n: u16) {$/;"	f
put_u32	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/src/buf/buf_mut.rs	/^    fn put_u32<T: ByteOrder>(&mut self, n: u32) {$/;"	f
put_u64	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/src/buf/buf_mut.rs	/^    fn put_u64<T: ByteOrder>(&mut self, n: u64) {$/;"	f
put_u8	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/src/buf/buf_mut.rs	/^    fn put_u8(&mut self, n: u8) {$/;"	f
put_uint	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/src/buf/buf_mut.rs	/^    fn put_uint<T: ByteOrder>(&mut self, n: u64, nbytes: usize) {$/;"	f
qc_byte_order	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.0.0/src/lib.rs	/^    macro_rules! qc_byte_order {$/;"	d
qc_bytes_ext	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.0.0/src/lib.rs	/^    macro_rules! qc_bytes_ext {$/;"	d
qc_sized	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.0.0/src/lib.rs	/^    pub fn qc_sized<A: Testable>(f: A, size: u64) {$/;"	f
queue_push_and_signal	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/sync/mpsc/mod.rs	/^    fn queue_push_and_signal(&self, msg: Option<T>) {$/;"	f
r_err	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/support/mod.rs	/^pub fn r_err(a: u32) -> Result<i32, u32> { Err(a) }$/;"	f
r_ok	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/support/mod.rs	/^pub fn r_ok(a: i32) -> Result<i32, u32> { Ok(a) }$/;"	f
read	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/src/buf/reader.rs	/^    fn read(&mut self, dst: &mut [u8]) -> io::Result<usize> {$/;"	f
read	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/examples/proxy.rs	/^    fn read(&mut self, buf: &mut [u8]) -> io::Result<usize> {$/;"	f
read	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/io/mod.rs	/^    fn read(&mut self) -> Poll<Self::Out, io::Error>;$/;"	f
read	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/io/read.rs	/^pub fn read<R, T>(rd: R, buf: T) -> Read<R, T>$/;"	f
read	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/io/split.rs	/^    fn read(&mut self, buf: &mut [u8]) -> io::Result<usize> {$/;"	f
read	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/net/tcp.rs	/^    fn read(&mut self, buf: &mut [u8]) -> io::Result<usize> {$/;"	f
read	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/reactor/poll_evented.rs	/^    fn read(&mut self, buf: &mut [u8]) -> io::Result<usize> {$/;"	f
read	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/tests/pipe-hup.rs	/^    fn read(&mut self, bytes: &mut [u8]) -> io::Result<usize> {$/;"	f
read	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/src/framed.rs	/^    fn read(&mut self, dst: &mut [u8]) -> io::Result<usize> {$/;"	f
read	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/src/framed_write.rs	/^    fn read(&mut self, dst: &mut [u8]) -> io::Result<usize> {$/;"	f
read	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/src/length_delimited.rs	/^    fn read(&mut self, dst: &mut [u8]) -> io::Result<usize> {$/;"	f
read	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/src/read.rs	/^pub fn read<R, T>(rd: R, buf: T) -> Read<R, T>$/;"	f
read	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/src/split.rs	/^    fn read(&mut self, buf: &mut [u8]) -> io::Result<usize> {$/;"	f
read	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/tests/async_read.rs	/^        fn read(&mut self, _: &mut [u8]) -> io::Result<usize> {$/;"	f
read	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/tests/async_read.rs	/^        fn read(&mut self, buf: &mut [u8]) -> io::Result<usize> {$/;"	f
read	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/tests/framed_read.rs	/^    fn read(&mut self, dst: &mut [u8]) -> io::Result<usize> {$/;"	f
read	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/tests/length_delimited.rs	/^    fn read(&mut self, dst: &mut [u8]) -> io::Result<usize> {$/;"	f
read	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/tests/support/mock.rs	/^    fn read(&mut self, _buf: &mut [u8]) -> io::Result<usize> {$/;"	f
read	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/tests/test_multiplex_deadlock.rs	/^        fn read(&mut self) -> Poll<Frame<Self::Out, Self::BodyOut, Self::Error>, io::Error> {$/;"	f
read_big_endian	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.0.0/benches/bench.rs	/^            fn read_big_endian(b: &mut Bencher) {$/;"	f
read_big_endian	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.0.0/src/lib.rs	/^                fn read_big_endian() {$/;"	f
read_buf	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/net/tcp.rs	/^    fn read_buf<B: BufMut>(&mut self, buf: &mut B) -> Poll<usize, io::Error> {$/;"	f
read_buf	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/src/length_delimited.rs	/^    fn read_buf<B: BufMut>(&mut self, buf: &mut B) -> Poll<usize, io::Error> {$/;"	f
read_buf	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/src/lib.rs	/^    fn read_buf<B: BufMut>(&mut self, buf: &mut B) -> Poll<usize, std_io::Error>$/;"	f
read_buf_error	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/tests/async_read.rs	/^fn read_buf_error() {$/;"	f
read_buf_no_capacity	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/tests/async_read.rs	/^fn read_buf_no_capacity() {$/;"	f
read_buf_no_uninitialized	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/tests/async_read.rs	/^fn read_buf_no_uninitialized() {$/;"	f
read_buf_success	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/tests/async_read.rs	/^fn read_buf_success() {$/;"	f
read_buf_translate_wouldblock_to_not_ready	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/tests/async_read.rs	/^fn read_buf_translate_wouldblock_to_not_ready() {$/;"	f
read_buf_uninitialized_ok	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/tests/async_read.rs	/^fn read_buf_uninitialized_ok() {$/;"	f
read_empty_io_yields_nothing	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/tests/length_delimited.rs	/^fn read_empty_io_yields_nothing() {$/;"	f
read_err	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/tests/framed_read.rs	/^fn read_err() {$/;"	f
read_exact	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/io/read_exact.rs	/^pub fn read_exact<A, T>(a: A, buf: T) -> ReadExact<A, T>$/;"	f
read_exact	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/src/read_exact.rs	/^pub fn read_exact<A, T>(a: A, buf: T) -> ReadExact<A, T>$/;"	f
read_f32	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.0.0/src/lib.rs	/^    fn read_f32(buf: &[u8]) -> f32 {$/;"	f
read_f32	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.0.0/src/new.rs	/^    fn read_f32<T: ByteOrder>(&mut self) -> Result<f32> {$/;"	f
read_f64	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.0.0/src/lib.rs	/^    fn read_f64(buf: &[u8]) -> f64 {$/;"	f
read_f64	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.0.0/src/new.rs	/^    fn read_f64<T: ByteOrder>(&mut self) -> Result<f64> {$/;"	f
read_header_offset	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/tests/length_delimited.rs	/^fn read_header_offset() {$/;"	f
read_i16	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.0.0/src/lib.rs	/^    fn read_i16(buf: &[u8]) -> i16 {$/;"	f
read_i16	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.0.0/src/new.rs	/^    fn read_i16<T: ByteOrder>(&mut self) -> Result<i16> {$/;"	f
read_i32	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.0.0/src/lib.rs	/^    fn read_i32(buf: &[u8]) -> i32 {$/;"	f
read_i32	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.0.0/src/new.rs	/^    fn read_i32<T: ByteOrder>(&mut self) -> Result<i32> {$/;"	f
read_i64	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.0.0/src/lib.rs	/^    fn read_i64(buf: &[u8]) -> i64 {$/;"	f
read_i64	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.0.0/src/new.rs	/^    fn read_i64<T: ByteOrder>(&mut self) -> Result<i64> {$/;"	f
read_i8	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.0.0/src/new.rs	/^    fn read_i8(&mut self) -> Result<i8> {$/;"	f
read_incomplete_head	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/tests/length_delimited.rs	/^fn read_incomplete_head() {$/;"	f
read_incomplete_head_multi	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/tests/length_delimited.rs	/^fn read_incomplete_head_multi() {$/;"	f
read_incomplete_payload	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/tests/length_delimited.rs	/^fn read_incomplete_payload() {$/;"	f
read_int	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.0.0/src/lib.rs	/^    fn read_int(buf: &[u8], nbytes: usize) -> i64 {$/;"	f
read_int	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.0.0/src/new.rs	/^    fn read_int<T: ByteOrder>(&mut self, nbytes: usize) -> Result<i64> {$/;"	f
read_little_endian	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.0.0/benches/bench.rs	/^            fn read_little_endian(b: &mut Bencher) {$/;"	f
read_little_endian	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.0.0/src/lib.rs	/^                fn read_little_endian() {$/;"	f
read_max_frame_len	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/tests/length_delimited.rs	/^fn read_max_frame_len() {$/;"	f
read_multi_frame_across_packets	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/tests/framed_read.rs	/^fn read_multi_frame_across_packets() {$/;"	f
read_multi_frame_in_packet	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/tests/framed_read.rs	/^fn read_multi_frame_in_packet() {$/;"	f
read_multi_frame_multi_packet	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/tests/length_delimited.rs	/^fn read_multi_frame_multi_packet() {$/;"	f
read_multi_frame_multi_packet_wait	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/tests/length_delimited.rs	/^fn read_multi_frame_multi_packet_wait() {$/;"	f
read_native_endian	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.0.0/benches/bench.rs	/^            fn read_native_endian(b: &mut Bencher) {$/;"	f
read_native_endian	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.0.0/src/lib.rs	/^                fn read_native_endian() {$/;"	f
read_not_ready	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/tests/framed_read.rs	/^fn read_not_ready() {$/;"	f
read_num_bytes	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.0.0/src/lib.rs	/^macro_rules! read_num_bytes {$/;"	d
read_one_byte_length_field	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/tests/length_delimited.rs	/^fn read_one_byte_length_field() {$/;"	f
read_out_frames	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/multiplex/advanced.rs	/^    fn read_out_frames(&mut self) -> io::Result<()> {$/;"	f
read_out_frames	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/pipeline/advanced.rs	/^    fn read_out_frames(&mut self) -> io::Result<()> {$/;"	f
read_partial_then_err	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/tests/framed_read.rs	/^fn read_partial_then_err() {$/;"	f
read_partial_then_not_ready	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/tests/framed_read.rs	/^fn read_partial_then_not_ready() {$/;"	f
read_partial_would_block_then_err	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/tests/framed_read.rs	/^fn read_partial_would_block_then_err() {$/;"	f
read_single_frame_multi_packet	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/tests/length_delimited.rs	/^fn read_single_frame_multi_packet() {$/;"	f
read_single_frame_multi_packet_wait	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/tests/length_delimited.rs	/^fn read_single_frame_multi_packet_wait() {$/;"	f
read_single_frame_one_packet	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/tests/length_delimited.rs	/^fn read_single_frame_one_packet() {$/;"	f
read_single_frame_one_packet_little_endian	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/tests/length_delimited.rs	/^fn read_single_frame_one_packet_little_endian() {$/;"	f
read_single_multi_frame_one_packet	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/tests/length_delimited.rs	/^fn read_single_multi_frame_one_packet() {$/;"	f
read_single_multi_frame_one_packet_length_includes_head	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/tests/length_delimited.rs	/^fn read_single_multi_frame_one_packet_length_includes_head() {$/;"	f
read_single_multi_frame_one_packet_skip_none_adjusted	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/tests/length_delimited.rs	/^fn read_single_multi_frame_one_packet_skip_none_adjusted() {$/;"	f
read_stdin	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/examples/connect.rs	/^fn read_stdin(mut tx: mpsc::Sender<Vec<u8>>) {$/;"	f
read_to_end	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/io/read_to_end.rs	/^pub fn read_to_end<A>(a: A, buf: Vec<u8>) -> ReadToEnd<A>$/;"	f
read_to_end	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/src/read_to_end.rs	/^pub fn read_to_end<A>(a: A, buf: Vec<u8>) -> ReadToEnd<A>$/;"	f
read_u16	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.0.0/src/lib.rs	/^    fn read_u16(buf: &[u8]) -> u16 {$/;"	f
read_u16	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.0.0/src/lib.rs	/^    fn read_u16(buf: &[u8]) -> u16;$/;"	f
read_u16	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.0.0/src/new.rs	/^    fn read_u16<T: ByteOrder>(&mut self) -> Result<u16> {$/;"	f
read_u32	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.0.0/src/lib.rs	/^    fn read_u32(buf: &[u8]) -> u32 {$/;"	f
read_u32	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.0.0/src/lib.rs	/^    fn read_u32(buf: &[u8]) -> u32;$/;"	f
read_u32	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.0.0/src/new.rs	/^    fn read_u32<T: ByteOrder>(&mut self) -> Result<u32> {$/;"	f
read_u64	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.0.0/src/lib.rs	/^    fn read_u64(buf: &[u8]) -> u64 {$/;"	f
read_u64	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.0.0/src/lib.rs	/^    fn read_u64(buf: &[u8]) -> u64;$/;"	f
read_u64	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.0.0/src/new.rs	/^    fn read_u64<T: ByteOrder>(&mut self) -> Result<u64> {$/;"	f
read_u8	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.0.0/src/new.rs	/^    fn read_u8(&mut self) -> Result<u8> {$/;"	f
read_uint	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.0.0/src/lib.rs	/^    fn read_uint(buf: &[u8], nbytes: usize) -> u64 {$/;"	f
read_uint	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.0.0/src/lib.rs	/^    fn read_uint(buf: &[u8], nbytes: usize) -> u64;$/;"	f
read_uint	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.0.0/src/new.rs	/^    fn read_uint<T: ByteOrder>(&mut self, nbytes: usize) -> Result<u64> {$/;"	f
read_until	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/io/read_until.rs	/^pub fn read_until<A>(a: A, byte: u8, buf: Vec<u8>) -> ReadUntil<A>$/;"	f
read_until	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/src/read_until.rs	/^pub fn read_until<A>(a: A, byte: u8, buf: Vec<u8>) -> ReadUntil<A>$/;"	f
read_vec	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/io/mod.rs	/^    fn read_vec(&mut self, bufs: &mut [&mut IoVec]) -> io::Result<usize> {$/;"	f
read_vec	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/net/tcp.rs	/^    fn read_vec(&mut self, bufs: &mut [&mut IoVec]) -> io::Result<usize> {$/;"	f
reader	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/src/buf/buf.rs	/^    fn reader(self) -> Reader<Self> where Self: Sized {$/;"	f
recursive_poll	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/shared.rs	/^fn recursive_poll() {$/;"	f
recursive_poll_with_unpark	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/shared.rs	/^fn recursive_poll_with_unpark() {$/;"	f
recv_close_gets_none	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/mpsc.rs	/^fn recv_close_gets_none() {$/;"	f
recv_dgram	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/net/udp/mod.rs	/^    pub fn recv_dgram<T>(self, buf: T) -> RecvDgram<T>$/;"	f
recv_from	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/net/udp/mod.rs	/^    pub fn recv_from(&self, buf: &mut [u8]) -> io::Result<(usize, SocketAddr)> {$/;"	f
register	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/tests/pipe-hup.rs	/^    fn register(&self, poll: &mio::Poll, token: Token, interest: Ready, opts: PollOpt)$/;"	f
release_shared	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/src/bytes.rs	/^fn release_shared(ptr: *mut Shared) {$/;"	f
remaining	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/src/buf/buf.rs	/^    fn remaining(&self) -> usize {$/;"	f
remaining	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/src/buf/buf.rs	/^    fn remaining(&self) -> usize;$/;"	f
remaining	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/src/buf/chain.rs	/^    fn remaining(&self) -> usize {$/;"	f
remaining	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/src/buf/take.rs	/^    fn remaining(&self) -> usize {$/;"	f
remaining_mut	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/src/buf/buf_mut.rs	/^    fn remaining_mut(&self) -> usize {$/;"	f
remaining_mut	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/src/buf/buf_mut.rs	/^    fn remaining_mut(&self) -> usize;$/;"	f
remaining_mut	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/src/buf/chain.rs	/^    fn remaining_mut(&self) -> usize {$/;"	f
remaining_mut	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/src/bytes.rs	/^    fn remaining_mut(&self) -> usize {$/;"	f
remote	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/reactor/mod.rs	/^    pub fn remote(&self) -> &Remote {$/;"	f
remote	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/reactor/mod.rs	/^    pub fn remote(&self) -> Remote {$/;"	f
remote	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/reactor/poll_evented.rs	/^    pub fn remote(&self) -> &Remote {$/;"	f
remove	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/heap.rs	/^    fn remove() {$/;"	f
remove	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/heap.rs	/^    pub fn remove(&mut self, slot: Slot) -> T {$/;"	f
repeat	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/repeat.rs	/^pub fn repeat<T, E>(item: T) -> Repeat<T, E>$/;"	f
request_id	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/multiplex/frame.rs	/^    pub fn request_id(&self) -> RequestId {$/;"	f
reregister	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/tests/pipe-hup.rs	/^    fn reregister(&self, poll: &mio::Poll, token: Token, interest: Ready, opts: PollOpt)$/;"	f
reserve	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/src/bytes.rs	/^    fn reserve(&mut self, additional: usize) {$/;"	f
reserve	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/src/bytes.rs	/^    pub fn reserve(&mut self, additional: usize) {$/;"	f
reserve_allocates_at_least_original_capacity	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/tests/test_bytes.rs	/^fn reserve_allocates_at_least_original_capacity() {$/;"	f
reserve_convert	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/tests/test_bytes.rs	/^fn reserve_convert() {$/;"	f
reserve_growth	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/tests/test_bytes.rs	/^fn reserve_growth() {$/;"	f
reserve_max_original_capacity_value	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/tests/test_bytes.rs	/^fn reserve_max_original_capacity_value() {$/;"	f
reserve_slot	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/multiplex/frame_buf.rs	/^    fn reserve_slot(&mut self) -> Option<&mut Slot<T>> {$/;"	f
reset_flags	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/multiplex/advanced.rs	/^    fn reset_flags(&mut self) {$/;"	f
reset_timeout	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/reactor/mod.rs	/^    fn reset_timeout(&mut self, token: usize, at: Instant) {$/;"	f
reset_timeout	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/reactor/timeout_token.rs	/^    pub fn reset_timeout(&mut self, at: Instant, handle: &Remote) {$/;"	f
result	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/future/result.rs	/^pub fn result<T, E>(r: result::Result<T, E>) -> FutureResult<T, E> {$/;"	f
result_smoke	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/all.rs	/^fn result_smoke() {$/;"	f
run	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/task_impl/mod.rs	/^    pub fn run(self) {$/;"	f
run	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/support/local_executor.rs	/^    pub fn run<F>(&mut self, f: F) -> Result<F::Item, F::Error>$/;"	f
run	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/reactor/mod.rs	/^    pub fn run<F>(&mut self, f: F) -> Result<F::Item, F::Error>$/;"	f
sassert_done	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/support/mod.rs	/^pub fn sassert_done<S: Stream>(s: &mut S) {$/;"	f
sassert_empty	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/support/mod.rs	/^pub fn sassert_empty<S: Stream>(s: &mut S) {$/;"	f
sassert_err	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/support/mod.rs	/^pub fn sassert_err<S: Stream>(s: &mut S, err: S::Error)$/;"	f
sassert_next	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/support/mod.rs	/^pub fn sassert_next<S: Stream>(s: &mut S, item: S::Item)$/;"	f
schedule	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/reactor/mod.rs	/^    fn schedule(&mut self, token: usize, wake: Task, dir: Direction)$/;"	f
schedule_read	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/reactor/io_token.rs	/^    pub fn schedule_read(&self, handle: &Remote) {$/;"	f
schedule_write	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/reactor/io_token.rs	/^    pub fn schedule_write(&self, handle: &Remote) {$/;"	f
select	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/future/mod.rs	/^    fn select<B>(self, other: B) -> Select<Self, B::Future>$/;"	f
select	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/mod.rs	/^    fn select<S>(self, other: S) -> Select<Self, S>$/;"	f
select	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/stream.rs	/^fn select() {$/;"	f
select1	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/eventual.rs	/^fn select1() {$/;"	f
select2	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/future/mod.rs	/^    fn select2<B>(self, other: B) -> Select2<Self, B::Future>$/;"	f
select2	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/all.rs	/^fn select2() {$/;"	f
select2	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/eventual.rs	/^fn select2() {$/;"	f
select3	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/eventual.rs	/^fn select3() {$/;"	f
select4	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/eventual.rs	/^fn select4() {$/;"	f
select_all	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/future/select_all.rs	/^pub fn select_all<I>(iter: I) -> SelectAll<<I::Item as IntoFuture>::Future>$/;"	f
select_cancels	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/all.rs	/^fn select_cancels() {$/;"	f
select_ok	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/future/select_ok.rs	/^pub fn select_ok<I>(iter: I) -> SelectOk<<I::Item as IntoFuture>::Future>$/;"	f
send	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/sink/mod.rs	/^    fn send(self, item: Self::SinkItem) -> Send<Self>$/;"	f
send	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/sink/wait.rs	/^    pub fn send(&mut self, value: S::SinkItem) -> Result<(), S::SinkError> {$/;"	f
send	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/channel.rs	/^    pub fn send(self, t: Result<T, E>) -> FutureSender<T, E> {$/;"	f
send	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/sync/mpsc/mod.rs	/^    pub fn send(&self, msg: T) -> Result<(), SendError<T>> {$/;"	f
send	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/sync/oneshot.rs	/^    pub fn send(self, t: T) -> Result<(), T> {$/;"	f
send	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/unsync/mpsc.rs	/^    pub fn send(&self, msg: T) -> Result<(), SendError<T>> {$/;"	f
send	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/unsync/oneshot.rs	/^    pub fn send(self, val: T) -> Result<(), T> {$/;"	f
send	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/channel.rs	/^    fn send(n: u32, sender: mpsc::Sender<u32>)$/;"	f
send	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/sink.rs	/^fn send() {$/;"	f
send	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/channel.rs	/^    pub fn send(&self, t: T) -> io::Result<()> {$/;"	f
send	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/reactor/mod.rs	/^    fn send(&self, msg: Message) {$/;"	f
send	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/tests/support/mock.rs	/^    pub fn send(&mut self, msg: T) {$/;"	f
send_all	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/sink/mod.rs	/^    fn send_all<S>(self, stream: S) -> SendAll<Self, S>$/;"	f
send_all	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/sink.rs	/^fn send_all() {$/;"	f
send_dgram	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/net/udp/mod.rs	/^    pub fn send_dgram<T>(self, buf: T, addr: SocketAddr) -> SendDgram<T>$/;"	f
send_messages	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/tests/udp.rs	/^fn send_messages() {$/;"	f
send_out_chunk	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/multiplex/advanced.rs	/^    fn send_out_chunk(&mut self, chunk: Result<Option<T::BodyOut>, T::Error>) {$/;"	f
send_recv	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/mpsc.rs	/^fn send_recv() {$/;"	f
send_recv_no_buffer	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/mpsc.rs	/^fn send_recv_no_buffer() {$/;"	f
send_recv_threads	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/mpsc.rs	/^fn send_recv_threads() {$/;"	f
send_recv_threads_no_capacity	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/mpsc.rs	/^fn send_recv_threads_no_capacity() {$/;"	f
send_shared_oneshot_and_wait_on_multiple_threads	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/shared.rs	/^fn send_shared_oneshot_and_wait_on_multiple_threads(threads_number: u32) {$/;"	f
send_shared_recv	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/mpsc.rs	/^fn send_shared_recv() {$/;"	f
send_to	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/net/udp/mod.rs	/^    pub fn send_to(&self, buf: &[u8], target: &SocketAddr) -> io::Result<usize> {$/;"	f
sequence	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/channel.rs	/^fn sequence() {$/;"	f
serve	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/tcp_server.rs	/^    pub fn serve<S>(&self, new_service: S) where$/;"	f
serve	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/tcp_server.rs	/^fn serve<P, Kind, F, S>(binder: Arc<P>, addr: SocketAddr, workers: usize, new_service: &F)$/;"	f
set	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/task_impl/mod.rs	/^fn set<'a, F, R>(task: &BorrowedTask<'a>, f: F) -> R$/;"	f
set	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/sink.rs	/^    fn set(&self, v: bool) {$/;"	f
set_broadcast	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/net/udp/mod.rs	/^    pub fn set_broadcast(&self, on: bool) -> io::Result<()> {$/;"	f
set_end	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/src/bytes.rs	/^    unsafe fn set_end(&mut self, end: usize) {$/;"	f
set_end	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/io/frame.rs	/^    fn set_end(&mut self, end: usize) -> &mut EasyBuf {$/;"	f
set_end	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/io/window.rs	/^    pub fn set_end(&mut self, end: usize) -> &mut Window<T> {$/;"	f
set_end	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/src/window.rs	/^    pub fn set_end(&mut self, end: usize) -> &mut Window<T> {$/;"	f
set_expect_response	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/multiplex/advanced.rs	/^    fn set_expect_response(&mut self, solo: bool) {$/;"	f
set_frame	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/src/length_delimited.rs	/^    fn set_frame(&mut self, buf: B::Buf) -> io::Result<()> {$/;"	f
set_inline_len	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/src/bytes.rs	/^    fn set_inline_len(&mut self, len: usize) {$/;"	f
set_keepalive_ms	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/net/tcp.rs	/^    pub fn set_keepalive_ms(&self, keepalive: Option<u32>) -> io::Result<()> {$/;"	f
set_len	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/src/bytes.rs	/^    pub unsafe fn set_len(&mut self, len: usize) {$/;"	f
set_len	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/src/bytes.rs	/^    unsafe fn set_len(&mut self, len: usize) {$/;"	f
set_limit	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/src/buf/take.rs	/^    pub fn set_limit(&mut self, lim: usize) {$/;"	f
set_multicast_loop_v4	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/net/udp/mod.rs	/^    pub fn set_multicast_loop_v4(&self, on: bool) -> io::Result<()> {$/;"	f
set_multicast_loop_v6	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/net/udp/mod.rs	/^    pub fn set_multicast_loop_v6(&self, on: bool) -> io::Result<()> {$/;"	f
set_multicast_ttl_v4	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/net/udp/mod.rs	/^    pub fn set_multicast_ttl_v4(&self, ttl: u32) -> io::Result<()> {$/;"	f
set_nodelay	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/net/tcp.rs	/^    pub fn set_nodelay(&self, nodelay: bool) -> io::Result<()> {$/;"	f
set_only_v6	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/net/tcp.rs	/^    pub fn set_only_v6(&self, only_v6: bool) -> io::Result<()> {$/;"	f
set_start	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/src/bytes.rs	/^    unsafe fn set_start(&mut self, start: usize) {$/;"	f
set_start	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/io/frame.rs	/^    fn set_start(&mut self, start: usize) -> &mut EasyBuf {$/;"	f
set_start	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/io/window.rs	/^    pub fn set_start(&mut self, start: usize) -> &mut Window<T> {$/;"	f
set_start	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/src/window.rs	/^    pub fn set_start(&mut self, start: usize) -> &mut Window<T> {$/;"	f
set_ttl	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/net/tcp.rs	/^    pub fn set_ttl(&self, ttl: u32) -> io::Result<()> {$/;"	f
set_ttl	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/net/udp/mod.rs	/^    pub fn set_ttl(&self, ttl: u32) -> io::Result<()> {$/;"	f
set_waiter	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/future/shared.rs	/^    fn set_waiter(&mut self) {$/;"	f
shallow_clone	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/src/bytes.rs	/^    fn shallow_clone(&self) -> Inner {$/;"	f
shared	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/future/mod.rs	/^    fn shared(self) -> Shared<Self>$/;"	f
shutdown	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/examples/proxy.rs	/^    fn shutdown(&mut self) -> Poll<(), io::Error> {$/;"	f
shutdown	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/net/tcp.rs	/^    fn shutdown(&mut self) -> Poll<(), io::Error> {$/;"	f
shutdown	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/net/tcp.rs	/^    pub fn shutdown(&self, how: Shutdown) -> io::Result<()> {$/;"	f
shutdown	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/reactor/poll_evented.rs	/^    fn shutdown(&mut self) -> Poll<(), io::Error> {$/;"	f
shutdown	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/src/framed.rs	/^    fn shutdown(&mut self) -> Poll<(), io::Error> {$/;"	f
shutdown	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/src/length_delimited.rs	/^    fn shutdown(&mut self) -> Poll<(), io::Error> {$/;"	f
shutdown	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/src/lib.rs	/^    fn shutdown(&mut self) -> Poll<(), std_io::Error> {$/;"	f
shutdown	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/src/lib.rs	/^    fn shutdown(&mut self) -> Poll<(), std_io::Error>;$/;"	f
shutdown	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/src/shutdown.rs	/^pub fn shutdown<A>(a: A) -> Shutdown<A>$/;"	f
shutdown	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/src/split.rs	/^    fn shutdown(&mut self) -> Poll<(), io::Error> {$/;"	f
shutdown	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/tests/framed_write.rs	/^    fn shutdown(&mut self) -> Poll<(), io::Error> {$/;"	f
shutdown	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/tests/length_delimited.rs	/^    fn shutdown(&mut self) -> Poll<(), io::Error> {$/;"	f
signal	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/sync/mpsc/mod.rs	/^    fn signal(&self) {$/;"	f
simple	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stack.rs	/^    fn simple() {$/;"	f
simple	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/heap.rs	/^    fn simple() {$/;"	f
simple	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/tests/spawn.rs	/^fn simple() {$/;"	f
simple2	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/heap.rs	/^    fn simple2() {$/;"	f
simple_core_poll	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/tests/spawn.rs	/^fn simple_core_poll() {$/;"	f
simple_service	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/tests/support/service.rs	/^pub fn simple_service<F, R, T, U>(f: F) -> SimpleService<T, U>$/;"	f
single	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/tests/interval.rs	/^fn single() {$/;"	f
sink_from_err	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/sink/mod.rs	/^    fn sink_from_err<E: From<Self::SinkError>>(self) -> from_err::SinkFromErr<Self, E>$/;"	f
sink_map_err	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/sink/mod.rs	/^    fn sink_map_err<F, E>(self, f: F) -> SinkMapErr<Self, F>$/;"	f
sink_mut	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/sink/send.rs	/^    fn sink_mut(&mut self) -> &mut S {$/;"	f
sink_mut	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/sink/send_all.rs	/^    fn sink_mut(&mut self) -> &mut T {$/;"	f
sink_mut	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/forward.rs	/^    fn sink_mut(&mut self) -> &mut U {$/;"	f
size_hint	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/src/buf/iter.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	f
skip	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/mod.rs	/^    fn skip(self, amt: u64) -> Skip<Self>$/;"	f
skip	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/stream.rs	/^fn skip() {$/;"	f
skip_passes_errors_through	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/stream.rs	/^fn skip_passes_errors_through() {$/;"	f
skip_while	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/mod.rs	/^    fn skip_while<P, R>(self, pred: P) -> SkipWhile<Self, P, R>$/;"	f
skip_while	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/stream.rs	/^fn skip_while() {$/;"	f
slice	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/src/bytes.rs	/^    pub fn slice(&self, begin: usize, end: usize) -> Bytes {$/;"	f
slice	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/tests/test_bytes.rs	/^fn slice() {$/;"	f
slice_from	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/src/bytes.rs	/^    pub fn slice_from(&self, begin: usize) -> Bytes {$/;"	f
slice_oob_1	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/tests/test_bytes.rs	/^fn slice_oob_1() {$/;"	f
slice_oob_2	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/tests/test_bytes.rs	/^fn slice_oob_2() {$/;"	f
slice_to	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/src/bytes.rs	/^    pub fn slice_to(&self, end: usize) -> Bytes {$/;"	f
smoke	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/lock.rs	/^    fn smoke() {$/;"	f
smoke	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/bilock.rs	/^fn smoke() {$/;"	f
smoke	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/mpsc-close.rs	/^fn smoke() {$/;"	f
smoke	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/select_all.rs	/^fn smoke() {$/;"	f
smoke	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/unsync-oneshot.rs	/^fn smoke() {$/;"	f
smoke	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/tests/timeout.rs	/^fn smoke() {$/;"	f
smoke_oneshot	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/all.rs	/^fn smoke_oneshot() {$/;"	f
smoke_poll	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/oneshot.rs	/^fn smoke_poll() {$/;"	f
spawn	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/task_impl/mod.rs	/^pub fn spawn<T>(obj: T) -> Spawn<T> {$/;"	f
spawn	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/support/local_executor.rs	/^    pub fn spawn<F>(&mut self, f: F)$/;"	f
spawn	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/reactor/mod.rs	/^    fn spawn(&mut self, future: Box<Future<Item=(), Error=()>>) {$/;"	f
spawn	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/reactor/mod.rs	/^    pub fn spawn<F, R>(&self, f: F)$/;"	f
spawn	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/reactor/mod.rs	/^    pub fn spawn<F>(&self, f: F)$/;"	f
spawn_fn	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/reactor/mod.rs	/^    pub fn spawn_fn<F, R>(&self, f: F)$/;"	f
spawn_in_poll	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/tests/spawn.rs	/^fn spawn_in_poll() {$/;"	f
split	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/future/either.rs	/^    pub fn split(self) -> (T, Either<A, B>) {$/;"	f
split	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/mod.rs	/^    fn split(self) -> (SplitSink<Self>, SplitStream<Self>)$/;"	f
split	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/split.rs	/^pub fn split<S: Stream + Sink>(s: S) -> (SplitSink<S>, SplitStream<S>) {$/;"	f
split	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/io/mod.rs	/^    fn split(self) -> (ReadHalf<Self>, WriteHalf<Self>)$/;"	f
split	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/io/split.rs	/^pub fn split<T: Io>(t: T) -> (ReadHalf<T>, WriteHalf<T>) {$/;"	f
split	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/src/lib.rs	/^    fn split(self) -> (ReadHalf<Self>, WriteHalf<Self>)$/;"	f
split	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/src/split.rs	/^pub fn split<T: AsyncRead + AsyncWrite>(t: T) -> (ReadHalf<T>, WriteHalf<T>) {$/;"	f
split_off	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/src/bytes.rs	/^    fn split_off(&mut self, at: usize) -> Inner {$/;"	f
split_off	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/src/bytes.rs	/^    pub fn split_off(&mut self, at: usize) -> Bytes {$/;"	f
split_off	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/src/bytes.rs	/^    pub fn split_off(&mut self, at: usize) -> BytesMut {$/;"	f
split_off	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/tests/test_bytes.rs	/^fn split_off() {$/;"	f
split_off	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/io/frame.rs	/^    pub fn split_off(&mut self, at: usize) -> EasyBuf {$/;"	f
split_off_oob	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/tests/test_bytes.rs	/^fn split_off_oob() {$/;"	f
split_off_to_at_gt_len	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/tests/test_bytes.rs	/^fn split_off_to_at_gt_len() {$/;"	f
split_off_to_loop	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/tests/test_bytes.rs	/^fn split_off_to_loop() {$/;"	f
split_off_uninitialized	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/tests/test_bytes.rs	/^fn split_off_uninitialized() {$/;"	f
split_to	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/src/bytes.rs	/^    fn split_to(&mut self, at: usize) -> Inner {$/;"	f
split_to	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/src/bytes.rs	/^    pub fn split_to(&mut self, at: usize) -> Bytes {$/;"	f
split_to	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/src/bytes.rs	/^    pub fn split_to(&mut self, at: usize) -> BytesMut {$/;"	f
split_to_1	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/tests/test_bytes.rs	/^fn split_to_1() {$/;"	f
split_to_2	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/tests/test_bytes.rs	/^fn split_to_2() {$/;"	f
split_to_oob	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/tests/test_bytes.rs	/^fn split_to_oob() {$/;"	f
split_to_oob_mut	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/tests/test_bytes.rs	/^fn split_to_oob_mut() {$/;"	f
split_to_uninitialized	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/tests/test_bytes.rs	/^fn split_to_uninitialized() {$/;"	f
start	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/sink.rs	/^    fn start(&self) {$/;"	f
start	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/io/window.rs	/^    pub fn start(&self) -> usize {$/;"	f
start	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/src/window.rs	/^    pub fn start(&self) -> usize {$/;"	f
start_poll	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/task_impl/unpark_mutex.rs	/^    pub unsafe fn start_poll(&self) {$/;"	f
start_send	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/sink/buffer.rs	/^    fn start_send(&mut self, item: Self::SinkItem) -> StartSend<Self::SinkItem, Self::SinkError> {$/;"	f
start_send	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/sink/from_err.rs	/^    fn start_send(&mut self, item: Self::SinkItem) -> StartSend<Self::SinkItem, Self::SinkError> {$/;"	f
start_send	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/sink/map_err.rs	/^    fn start_send(&mut self, item: Self::SinkItem) -> StartSend<Self::SinkItem, Self::SinkError> {$/;"	f
start_send	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/sink/mod.rs	/^        fn start_send(&mut self, item: Self::SinkItem)$/;"	f
start_send	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/sink/mod.rs	/^    fn start_send(&mut self, item: Self::SinkItem)$/;"	f
start_send	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/sink/with.rs	/^    fn start_send(&mut self, item: Self::SinkItem) -> StartSend<Self::SinkItem, Fut::Error> {$/;"	f
start_send	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/and_then.rs	/^    fn start_send(&mut self, item: S::SinkItem) -> ::StartSend<S::SinkItem, S::SinkError> {$/;"	f
start_send	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/buffer_unordered.rs	/^    fn start_send(&mut self, item: S::SinkItem) -> ::StartSend<S::SinkItem, S::SinkError> {$/;"	f
start_send	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/buffered.rs	/^    fn start_send(&mut self, item: S::SinkItem) -> ::StartSend<S::SinkItem, S::SinkError> {$/;"	f
start_send	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/chunks.rs	/^    fn start_send(&mut self, item: S::SinkItem) -> ::StartSend<S::SinkItem, S::SinkError> {$/;"	f
start_send	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/filter.rs	/^    fn start_send(&mut self, item: S::SinkItem) -> ::StartSend<S::SinkItem, S::SinkError> {$/;"	f
start_send	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/filter_map.rs	/^    fn start_send(&mut self, item: S::SinkItem) -> ::StartSend<S::SinkItem, S::SinkError> {$/;"	f
start_send	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/flatten.rs	/^    fn start_send(&mut self, item: S::SinkItem) -> ::StartSend<S::SinkItem, S::SinkError> {$/;"	f
start_send	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/from_err.rs	/^    fn start_send(&mut self, item: Self::SinkItem) -> ::StartSend<Self::SinkItem, Self::SinkError> {$/;"	f
start_send	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/fuse.rs	/^    fn start_send(&mut self, item: S::SinkItem) -> ::StartSend<S::SinkItem, S::SinkError> {$/;"	f
start_send	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/map.rs	/^    fn start_send(&mut self, item: S::SinkItem) -> ::StartSend<S::SinkItem, S::SinkError> {$/;"	f
start_send	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/map_err.rs	/^    fn start_send(&mut self, item: S::SinkItem) -> ::StartSend<S::SinkItem, S::SinkError> {$/;"	f
start_send	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/or_else.rs	/^    fn start_send(&mut self, item: S::SinkItem) -> ::StartSend<S::SinkItem, S::SinkError> {$/;"	f
start_send	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/peek.rs	/^    fn start_send(&mut self, item: S::SinkItem) -> ::StartSend<S::SinkItem, S::SinkError> {$/;"	f
start_send	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/skip.rs	/^    fn start_send(&mut self, item: S::SinkItem) -> ::StartSend<S::SinkItem, S::SinkError> {$/;"	f
start_send	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/skip_while.rs	/^    fn start_send(&mut self, item: S::SinkItem) -> ::StartSend<S::SinkItem, S::SinkError> {$/;"	f
start_send	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/split.rs	/^    fn start_send(&mut self, item: S::SinkItem)$/;"	f
start_send	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/take.rs	/^    fn start_send(&mut self, item: S::SinkItem) -> ::StartSend<S::SinkItem, S::SinkError> {$/;"	f
start_send	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/take_while.rs	/^    fn start_send(&mut self, item: S::SinkItem) -> ::StartSend<S::SinkItem, S::SinkError> {$/;"	f
start_send	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/then.rs	/^    fn start_send(&mut self, item: S::SinkItem) -> ::StartSend<S::SinkItem, S::SinkError> {$/;"	f
start_send	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/sync/mpsc/mod.rs	/^    fn start_send(&mut self, msg: T) -> StartSend<T, SendError<T>> {$/;"	f
start_send	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/task_impl/mod.rs	/^    pub fn start_send(&mut self, value: S::SinkItem, unpark: &Arc<Unpark>)$/;"	f
start_send	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/unsync/mpsc.rs	/^    fn start_send(&mut self, msg: T) -> StartSend<T, SendError<T>> {$/;"	f
start_send	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/sink.rs	/^    fn start_send(&mut self, item: T) -> StartSend<T, ()> {$/;"	f
start_send	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/sink.rs	/^    fn start_send(&mut self, op: Option<T>) -> StartSend<Option<T>, ()> {$/;"	f
start_send	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/split.rs	/^    fn start_send(&mut self, item: U::SinkItem)$/;"	f
start_send	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/channel.rs	/^    fn start_send(&mut self, t: T) -> StartSend<T, io::Error> {$/;"	f
start_send	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/io/frame.rs	/^    fn start_send(&mut self, item: C::Out) -> StartSend<C::Out, io::Error> {$/;"	f
start_send	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/net/udp/frame.rs	/^    fn start_send(&mut self, item: C::Out) -> StartSend<C::Out, io::Error> {$/;"	f
start_send	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/src/framed.rs	/^    fn start_send(&mut self,$/;"	f
start_send	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/src/framed_read.rs	/^    fn start_send(&mut self,$/;"	f
start_send	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/src/framed_write.rs	/^    fn start_send(&mut self, item: E::Item) -> StartSend<E::Item, E::Error> {$/;"	f
start_send	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/src/framed_write.rs	/^    fn start_send(&mut self, item: T::Item) -> StartSend<T::Item, T::Error> {$/;"	f
start_send	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/src/length_delimited.rs	/^    fn start_send(&mut self, item: B) -> StartSend<B, io::Error> {$/;"	f
start_send	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/src/length_delimited.rs	/^    fn start_send(&mut self, item: T::SinkItem) -> StartSend<T::SinkItem, T::SinkError> {$/;"	f
start_send	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/buffer_one.rs	/^    fn start_send(&mut self, item: Self::SinkItem) -> StartSend<Self::SinkItem, Self::SinkError> {$/;"	f
start_send	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/simple/multiplex/mod.rs	/^        fn start_send(&mut self, request: Self::SinkItem)$/;"	f
start_send	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/simple/pipeline/mod.rs	/^        fn start_send(&mut self, request: Self::SinkItem)$/;"	f
start_send	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/multiplex/advanced.rs	/^    fn start_send(&mut self, item: Self::SinkItem)$/;"	f
start_send	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/pipeline/advanced.rs	/^    fn start_send(&mut self, item: Self::SinkItem)$/;"	f
start_send	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/tests/support/mock.rs	/^    fn start_send(&mut self, item: T) -> StartSend<T, io::Error> {$/;"	f
stream_mut	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/sink/send_all.rs	/^    fn stream_mut(&mut self) -> &mut Fuse<U> {$/;"	f
stream_mut	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/forward.rs	/^    fn stream_mut(&mut self) -> &mut Fuse<T> {$/;"	f
stress	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/tests/test_bytes.rs	/^fn stress() {$/;"	f
stress_receiver_multi_task_bounded_hard	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/mpsc.rs	/^fn stress_receiver_multi_task_bounded_hard() {$/;"	f
stress_shared_bounded_hard	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/mpsc.rs	/^fn stress_shared_bounded_hard() {$/;"	f
stress_shared_unbounded	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/mpsc.rs	/^fn stress_shared_unbounded() {$/;"	f
successful_future	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/future_flatten_stream.rs	/^fn successful_future() {$/;"	f
t	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/tests/buffered.rs	/^macro_rules! t {$/;"	d
t	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/tests/chain.rs	/^macro_rules! t {$/;"	d
t	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/tests/echo.rs	/^macro_rules! t {$/;"	d
t	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/tests/interval.rs	/^macro_rules! t {$/;"	d
t	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/tests/limit.rs	/^macro_rules! t {$/;"	d
t	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/tests/pipe-hup.rs	/^macro_rules! t {$/;"	d
t	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/tests/stream-buffered.rs	/^macro_rules! t {$/;"	d
t	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/tests/tcp.rs	/^macro_rules! t {$/;"	d
t	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/tests/timeout.rs	/^macro_rules! t {$/;"	d
t	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/tests/udp.rs	/^macro_rules! t {$/;"	d
take	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/src/buf/buf.rs	/^    fn take(self, limit: usize) -> Take<Self>$/;"	f
take	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/src/bytes.rs	/^    pub fn take(&mut self) -> BytesMut {$/;"	f
take	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/future/join.rs	/^    fn take(&mut self) -> A::Item {$/;"	f
take	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/chunks.rs	/^    fn take(&mut self) -> Vec<S::Item> {$/;"	f
take	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/concat.rs	/^    fn take(&mut self) -> Option<E> {$/;"	f
take	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/mod.rs	/^    fn take(self, amt: u64) -> Take<Self>$/;"	f
take	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/stream.rs	/^fn take() {$/;"	f
take_body	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/message.rs	/^    pub fn take_body(&mut self) -> Option<B> {$/;"	f
take_buffered_out_request	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/multiplex/advanced.rs	/^    fn take_buffered_out_request(&mut self) -> Option<Message<T::Out, Body<T::BodyOut, T::Error>>> {$/;"	f
take_passes_errors_through	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/stream.rs	/^fn take_passes_errors_through() {$/;"	f
take_readiness	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/reactor/io_token.rs	/^    pub fn take_readiness(&self) -> usize {$/;"	f
take_result	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/sink/send_all.rs	/^    fn take_result(&mut self) -> (T, U) {$/;"	f
take_result	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/forward.rs	/^    fn take_result(&mut self) -> (T, U) {$/;"	f
take_sink	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/sink/send.rs	/^    fn take_sink(&mut self) -> S {$/;"	f
take_while	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/mod.rs	/^    fn take_while<P, R>(self, pred: P) -> TakeWhile<Self, P, R>$/;"	f
take_while	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/stream.rs	/^fn take_while() {$/;"	f
task_local	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/task_impl/data.rs	/^macro_rules! task_local {$/;"	d
test_attempting_allocation_past_capacity	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/multiplex/frame_buf.rs	/^    fn test_attempting_allocation_past_capacity() {$/;"	f
test_basic_streaming_request_body_read_then_respond	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/tests/test_multiplex_server.rs	/^fn test_basic_streaming_request_body_read_then_respond() {$/;"	f
test_basic_streaming_response_body	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/tests/test_multiplex_server.rs	/^fn test_basic_streaming_response_body() {$/;"	f
test_bounds	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/tests/test_bytes.rs	/^fn test_bounds() {$/;"	f
test_bufs_vec	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/tests/test_buf.rs	/^fn test_bufs_vec() {$/;"	f
test_bufs_vec_mut	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/tests/test_buf_mut.rs	/^fn test_bufs_vec_mut() {$/;"	f
test_capacity	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/multiplex/frame_buf.rs	/^    fn test_capacity() {$/;"	f
test_clone	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/tests/test_buf_mut.rs	/^fn test_clone() {$/;"	f
test_clone	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/tests/simple_client_proto.rs	/^fn test_clone() {$/;"	f
test_delayed_writable_immediate_response_echo	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/tests/test_multiplex_server.rs	/^fn test_delayed_writable_immediate_response_echo() {$/;"	f
test_delayed_writable_immediate_response_echo	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/tests/test_pipeline_server.rs	/^fn test_delayed_writable_immediate_response_echo() {$/;"	f
test_empty	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/all.rs	/^fn test_empty() {$/;"	f
test_empty_peek	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/heap.rs	/^    fn test_empty_peek() {$/;"	f
test_empty_pop	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/heap.rs	/^    fn test_empty_pop() {$/;"	f
test_error_handling_before_message_dispatched	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/tests/test_multiplex_server.rs	/^fn test_error_handling_before_message_dispatched() {$/;"	f
test_error_on_response	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/tests/test_multiplex_client.rs	/^fn test_error_on_response() {$/;"	f
test_fresh_cursor_vec	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/tests/test_buf.rs	/^fn test_fresh_cursor_vec() {$/;"	f
test_get_u16	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/tests/test_buf.rs	/^fn test_get_u16() {$/;"	f
test_get_u16_buffer_underflow	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/tests/test_buf.rs	/^fn test_get_u16_buffer_underflow() {$/;"	f
test_get_u8	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/tests/test_buf.rs	/^fn test_get_u8() {$/;"	f
test_growing_buffer	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/multiplex/frame_buf.rs	/^    fn test_growing_buffer() {$/;"	f
test_immediate_done	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/tests/test_multiplex_server.rs	/^fn test_immediate_done() {$/;"	f
test_immediate_done	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/tests/test_pipeline_server.rs	/^fn test_immediate_done() {$/;"	f
test_immediate_writable_delayed_response_echo	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/tests/test_multiplex_server.rs	/^fn test_immediate_writable_delayed_response_echo() {$/;"	f
test_immediate_writable_delayed_response_echo	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/tests/test_pipeline_server.rs	/^fn test_immediate_writable_delayed_response_echo() {$/;"	f
test_immediate_writable_echo	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/tests/test_multiplex_server.rs	/^fn test_immediate_writable_echo() {$/;"	f
test_immediate_writable_echo	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/tests/test_pipeline_server.rs	/^fn test_immediate_writable_echo() {$/;"	f
test_interleaving_request_body_chunks	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/tests/test_multiplex_server.rs	/^fn test_interleaving_request_body_chunks() {$/;"	f
test_interleaving_response_body_chunks	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/tests/test_multiplex_server.rs	/^fn test_interleaving_response_body_chunks() {$/;"	f
test_multiple_deque	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/multiplex/frame_buf.rs	/^    fn test_multiple_deque() {$/;"	f
test_multiplexing_while_transport_not_writable	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/tests/test_multiplex_server.rs	/^fn test_multiplexing_while_transport_not_writable() {$/;"	f
test_ok	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/all.rs	/^fn test_ok() {$/;"	f
test_out_of_order_multiplexing	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/tests/test_multiplex_server.rs	/^fn test_out_of_order_multiplexing() {$/;"	f
test_peek_and_pop	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/heap.rs	/^    fn test_peek_and_pop() {$/;"	f
test_ping_pong_close	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/tests/test_multiplex_client.rs	/^fn test_ping_pong_close() {$/;"	f
test_ping_pong_close	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/tests/test_pipeline_client.rs	/^fn test_ping_pong_close() {$/;"	f
test_pipeline_stream_response_body	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/tests/test_pipeline_server.rs	/^fn test_pipeline_stream_response_body() {$/;"	f
test_pipeline_streaming_body_without_consuming	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/tests/test_pipeline_server.rs	/^fn test_pipeline_streaming_body_without_consuming() {$/;"	f
test_pipelining_while_service_is_processing	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/tests/test_pipeline_server.rs	/^fn test_pipelining_while_service_is_processing() {$/;"	f
test_pipelining_while_transport_not_writable	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/tests/test_pipeline_server.rs	/^fn test_pipelining_while_transport_not_writable() {$/;"	f
test_push	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/heap.rs	/^    fn test_push() {$/;"	f
test_put_u16	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/tests/test_buf_mut.rs	/^fn test_put_u16() {$/;"	f
test_put_u8	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/tests/test_buf_mut.rs	/^fn test_put_u8() {$/;"	f
test_reaching_max_buffered_frames	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/tests/test_multiplex_server.rs	/^fn test_reaching_max_buffered_frames() {$/;"	f
test_reaching_max_in_flight_requests	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/tests/test_multiplex_server.rs	/^fn test_reaching_max_in_flight_requests() {$/;"	f
test_read_error_as_first_frame	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/tests/test_multiplex_server.rs	/^fn test_read_error_as_first_frame() {$/;"	f
test_read_error_during_stream	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/tests/test_multiplex_server.rs	/^fn test_read_error_during_stream() {$/;"	f
test_reading_error_frame_from_transport	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/tests/test_pipeline_server.rs	/^fn test_reading_error_frame_from_transport() {$/;"	f
test_reading_error_while_pipelining_from_transport	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/tests/test_pipeline_server.rs	/^fn test_reading_error_while_pipelining_from_transport() {$/;"	f
test_reading_io_error_from_transport	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/tests/test_pipeline_server.rs	/^fn test_reading_io_error_from_transport() {$/;"	f
test_repeatedly_flushes_messages	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/tests/test_multiplex_server.rs	/^fn test_repeatedly_flushes_messages() {$/;"	f
test_repeatedly_flushes_messages	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/tests/test_pipeline_server.rs	/^fn test_repeatedly_flushes_messages() {$/;"	f
test_responding_then_streaming_request_body	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/tests/test_pipeline_server.rs	/^fn test_responding_then_streaming_request_body() {$/;"	f
test_response_ready_before_request_sent	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/tests/test_pipeline_client.rs	/^fn test_response_ready_before_request_sent() {$/;"	f
test_returning_error_from_service	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/tests/test_pipeline_server.rs	/^fn test_returning_error_from_service() {$/;"	f
test_returning_would_block_from_service	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/tests/test_pipeline_server.rs	/^fn test_returning_would_block_from_service() {$/;"	f
test_reusing	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/multiplex/frame_buf.rs	/^    fn test_reusing() {$/;"	f
test_same_order_multiplexing	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/tests/test_multiplex_server.rs	/^fn test_same_order_multiplexing() {$/;"	f
test_split	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/split.rs	/^fn test_split() {$/;"	f
test_streaming_client_dropped	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/tests/test_pipeline_client.rs	/^fn test_streaming_client_dropped() {$/;"	f
test_streaming_client_transport_dropped	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/tests/test_pipeline_client.rs	/^fn test_streaming_client_transport_dropped() {$/;"	f
test_streaming_multiplex_framed	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/tests/simple_framed.rs	/^fn test_streaming_multiplex_framed() {$/;"	f
test_streaming_pipeline_framed	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/tests/simple_framed.rs	/^fn test_streaming_pipeline_framed() {$/;"	f
test_streaming_request_body	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/tests/test_pipeline_client.rs	/^fn test_streaming_request_body() {$/;"	f
test_streaming_request_body_then_responding	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/tests/test_pipeline_server.rs	/^fn test_streaming_request_body_then_responding() {$/;"	f
test_streaming_response_body	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/tests/test_pipeline_client.rs	/^fn test_streaming_response_body() {$/;"	f
test_streaming_response_body	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/tests/test_pipeline_server.rs	/^fn test_streaming_response_body() {$/;"	f
test_to_vec	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/heap.rs	/^    fn test_to_vec() {$/;"	f
test_transport_error_during_body_stream	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/tests/test_pipeline_server.rs	/^fn test_transport_error_during_body_stream() {$/;"	f
test_transport_provides_invalid_request_ids	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/tests/test_multiplex_server.rs	/^fn test_transport_provides_invalid_request_ids() {$/;"	f
test_vec_as_mut_buf	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/tests/test_buf_mut.rs	/^fn test_vec_as_mut_buf() {$/;"	f
test_write_requires_flush	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/tests/test_multiplex_deadlock.rs	/^fn test_write_requires_flush() {$/;"	f
then	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/future/mod.rs	/^    fn then<F, B>(self, f: F) -> Then<Self, B, F>$/;"	f
then	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/mod.rs	/^    fn then<F, U>(self, f: F) -> Then<Self, F, U>$/;"	f
then	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/stream.rs	/^fn then() {$/;"	f
threads	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/tcp_server.rs	/^    pub fn threads(&mut self, threads: usize) {$/;"	f
tick	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/multiplex/mod.rs	/^    fn tick(&mut self) {}$/;"	f
tick	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/pipeline/mod.rs	/^    fn tick(&mut self) {}$/;"	f
tokio_channel_latency	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/benches/latency.rs	/^fn tokio_channel_latency(b: &mut Bencher) {$/;"	f
too_small	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.0.0/src/lib.rs	/^    macro_rules! too_small {$/;"	d
transport	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/multiplex/advanced.rs	/^    fn transport(&mut self) -> &mut Self::Transport;$/;"	f
transport	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/multiplex/client.rs	/^    fn transport(&mut self) -> &mut Self::Transport {$/;"	f
transport	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/multiplex/server.rs	/^    fn transport(&mut self) -> &mut P::Transport {$/;"	f
transport	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/pipeline/advanced.rs	/^    fn transport(&mut self) -> &mut Self::Transport;$/;"	f
transport	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/pipeline/client.rs	/^    fn transport(&mut self) -> &mut Self::Transport {$/;"	f
transport	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/pipeline/server.rs	/^    fn transport(&mut self) -> &mut P::Transport {$/;"	f
transport	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/tests/support/mock.rs	/^fn transport<T>() -> (MockTransportCtl<T>, MockProtocol<T>) {$/;"	f
transport_not_write_ready	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/multiplex/advanced.rs	/^    fn transport_not_write_ready(&mut self) {$/;"	f
trigger	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/task_impl/mod.rs	/^    fn trigger(&self) {$/;"	f
truncate	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/src/bytes.rs	/^    pub fn truncate(&mut self, len: usize) {$/;"	f
try_empty_buffer	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/sink/buffer.rs	/^    fn try_empty_buffer(&mut self) -> Poll<(), S::SinkError> {$/;"	f
try_empty_buffer	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/buffer_one.rs	/^    fn try_empty_buffer(&mut self) -> Poll<(), S::SinkError> {$/;"	f
try_lock	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/lock.rs	/^    pub fn try_lock(&self) -> Option<TryLock<T>> {$/;"	f
try_mut	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/src/bytes.rs	/^    pub fn try_mut(mut self) -> Result<BytesMut, Bytes> {$/;"	f
try_nb	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/io/mod.rs	/^macro_rules! try_nb {$/;"	d
try_nb	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/src/lib.rs	/^macro_rules! try_nb {$/;"	d
try_park	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/sync/mpsc/mod.rs	/^    fn try_park(&self) -> TryPark {$/;"	f
try_poll_in_body	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/multiplex/advanced.rs	/^    fn try_poll_in_body(&mut self) -> Poll<Option<T::BodyIn>, T::Error> {$/;"	f
try_ready	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/poll.rs	/^macro_rules! try_ready {$/;"	d
try_start_send	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/sink/send_all.rs	/^    fn try_start_send(&mut self, item: U::Item) -> Poll<(), T::SinkError> {$/;"	f
try_start_send	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/forward.rs	/^    fn try_start_send(&mut self, item: T::Item) -> Poll<(), U::SinkError> {$/;"	f
ttl	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/net/tcp.rs	/^    pub fn ttl(&self) -> io::Result<u32> {$/;"	f
ttl	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/net/udp/mod.rs	/^    pub fn ttl(&self) -> io::Result<u32> {$/;"	f
turn	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/support/local_executor.rs	/^    fn turn(&mut self) {$/;"	f
turn	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/reactor/mod.rs	/^    pub fn turn(&mut self, max_wait: Option<Duration>) {$/;"	f
two	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/tests/timeout.rs	/^fn two() {$/;"	f
two_threads	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/shared.rs	/^fn two_threads() {$/;"	f
two_times	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/tests/interval.rs	/^fn two_times() {$/;"	f
tx_close_gets_none	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/mpsc.rs	/^fn tx_close_gets_none() {$/;"	f
tx_complete_rx_unparked	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/unsync-oneshot.rs	/^fn tx_complete_rx_unparked() {$/;"	f
tx_dropped_rx_unparked	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/unsync-oneshot.rs	/^fn tx_dropped_rx_unparked() {$/;"	f
udp_echo_latency	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/benches/latency.rs	/^fn udp_echo_latency(b: &mut Bencher) {$/;"	f
uint_bigger_buffer	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.0.0/src/lib.rs	/^    fn uint_bigger_buffer() {$/;"	f
unbounded	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/sync/mpsc/mod.rs	/^pub fn unbounded<T>() -> (UnboundedSender<T>, UnboundedReceiver<T>) {$/;"	f
unbounded	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/unsync/mpsc.rs	/^pub fn unbounded<T>() -> (UnboundedSender<T>, UnboundedReceiver<T>) {$/;"	f
unextend_sign	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.0.0/src/lib.rs	/^fn unextend_sign(val: i64, nbytes: usize) -> u64 {$/;"	f
unfold	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/unfold.rs	/^pub fn unfold<T, F, Fut, It>(init: T, f: F) -> Unfold<T, F, Fut>$/;"	f
unfold1	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/unfold.rs	/^fn unfold1() {$/;"	f
unfold_err1	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/unfold.rs	/^fn unfold_err1() {$/;"	f
unlock	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/sync/bilock.rs	/^    fn unlock(&self) {$/;"	f
unlock	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/sync/bilock.rs	/^    pub fn unlock(self) -> BiLock<T> {$/;"	f
unordered	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/stream.rs	/^fn unordered() {$/;"	f
unpark	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/future/shared.rs	/^    fn unpark(&self) {$/;"	f
unpark	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/task_impl/mod.rs	/^    fn unpark(&self) {$/;"	f
unpark	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/task_impl/mod.rs	/^    fn unpark(&self);$/;"	f
unpark	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/task_impl/mod.rs	/^    pub fn unpark(&self) {$/;"	f
unpark	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/sink.rs	/^    fn unpark(&self) {$/;"	f
unpark	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/support/local_executor.rs	/^    fn unpark(&self) {$/;"	f
unpark	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/support/mod.rs	/^        fn unpark(&self) {$/;"	f
unpark	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/support/mod.rs	/^        fn unpark(&self) {}$/;"	f
unpark	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/reactor/mod.rs	/^    fn unpark(&self) {$/;"	f
unpark_noop	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/support/mod.rs	/^pub fn unpark_noop() -> Arc<Unpark> {$/;"	f
unpark_one	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/sync/mpsc/mod.rs	/^    fn unpark_one(&mut self) {$/;"	f
unpark_panic	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/support/mod.rs	/^pub fn unpark_panic() -> Arc<Unpark> {$/;"	f
unselect	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/all.rs	/^fn unselect<T, U, E>(r: Result<(T, U), (E, U)>) -> Result<T, E> {$/;"	f
unwrap_body	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/multiplex/frame.rs	/^    pub fn unwrap_body(self) -> Option<B> {$/;"	f
unwrap_body	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/pipeline/frame.rs	/^    pub fn unwrap_body(self) -> Option<B> {$/;"	f
unwrap_done	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/multiplex/server.rs	/^    fn unwrap_done(self) -> Result<F::Item, F::Error> {$/;"	f
unwrap_err	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/multiplex/frame.rs	/^    pub fn unwrap_err(self) -> E {$/;"	f
unwrap_err	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/pipeline/frame.rs	/^    pub fn unwrap_err(self) -> E {$/;"	f
unwrap_msg	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/multiplex/frame.rs	/^    pub fn unwrap_msg(self) -> T {$/;"	f
unwrap_msg	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/pipeline/frame.rs	/^    pub fn unwrap_msg(self) -> T {$/;"	f
update_timeout	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/reactor/mod.rs	/^    fn update_timeout(&mut self, token: usize, handle: Task) -> Option<Task> {$/;"	f
update_timeout	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/reactor/timeout_token.rs	/^    pub fn update_timeout(&self, handle: &Remote) {$/;"	f
vec2heap	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/heap.rs	/^    fn vec2heap<T: Ord>(v: Vec<T>) -> Heap<T> {$/;"	f
vec_sink	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/sink.rs	/^fn vec_sink() {$/;"	f
vectored_read	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/tests/test_chain.rs	/^fn vectored_read() {$/;"	f
wait	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/future/mod.rs	/^    fn wait(self) -> result::Result<Self::Item, Self::Error>$/;"	f
wait	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/sink/mod.rs	/^    fn wait(self) -> Wait<Self>$/;"	f
wait	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/mod.rs	/^    fn wait(self) -> Wait<Self>$/;"	f
wait	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/task_impl/unpark_mutex.rs	/^    pub unsafe fn wait(&self, data: D) -> Result<(), D> {$/;"	f
wait	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/stream.rs	/^fn wait() {$/;"	f
wait	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/support/local_executor.rs	/^    pub fn wait(&mut self) {$/;"	f
wait_flush	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/task_impl/mod.rs	/^    pub fn wait_flush(&mut self) -> Result<(), S::SinkError> {$/;"	f
wait_future	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/task_impl/mod.rs	/^    pub fn wait_future(&mut self) -> Result<F::Item, F::Error> {$/;"	f
wait_send	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/task_impl/mod.rs	/^    pub fn wait_send(&mut self, mut value: S::SinkItem)$/;"	f
wait_stream	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/task_impl/mod.rs	/^    pub fn wait_stream(&mut self) -> Option<Result<S::Item, S::Error>> {$/;"	f
with	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/sink/mod.rs	/^    fn with<U, F, Fut>(self, f: F) -> With<Self, U, F, Fut>$/;"	f
with	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/task_impl/data.rs	/^    pub fn with<F, R>(&'static self, f: F) -> R$/;"	f
with	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/task_impl/mod.rs	/^fn with<F: FnOnce(&BorrowedTask) -> R, R>(f: F) -> R {$/;"	f
with	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/task_impl/task_rc.rs	/^    pub fn with<F, R>(&self, f: F) -> R$/;"	f
with_as_map	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/sink.rs	/^fn with_as_map() {$/;"	f
with_capacity	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/src/bytes.rs	/^    fn with_capacity(capacity: usize) -> Inner {$/;"	f
with_capacity	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/src/bytes.rs	/^    pub fn with_capacity(capacity: usize) -> BytesMut {$/;"	f
with_capacity	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/io/frame.rs	/^    pub fn with_capacity(cap: usize) -> EasyBuf {$/;"	f
with_capacity	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/multiplex/frame_buf.rs	/^    fn with_capacity(mut capacity: usize) -> Inner<T> {$/;"	f
with_capacity	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/multiplex/frame_buf.rs	/^    pub fn with_capacity(capacity: usize) -> FrameBuf<T> {$/;"	f
with_event	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/task_impl/mod.rs	/^    fn with_event(&self, event: UnparkEvent) -> Events {$/;"	f
with_filter	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/sink/mod.rs	/^    fn with_filter<F>(self, f: F) -> WithFilter<Self, F>$/;"	f
with_filter_map	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/sink/mod.rs	/^    fn with_filter_map<U, F>(self, f: F) -> WithFilterMap<Self, U, F>$/;"	f
with_flush	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/sink.rs	/^fn with_flush() {$/;"	f
with_flush_propagate	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/sink.rs	/^fn with_flush_propagate() {$/;"	f
with_handle	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/tcp_server.rs	/^    pub fn with_handle<F, S>(&self, new_service: F) where$/;"	f
with_loop	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/reactor/mod.rs	/^    fn with_loop<F, R>(&self, f: F) -> R$/;"	f
with_map	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/sink/mod.rs	/^    fn with_map<U, F>(self, f: F) -> WithMap<Self, U, F>$/;"	f
with_unpark_event	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/task_impl/mod.rs	/^pub fn with_unpark_event<F, R>(event: UnparkEvent, f: F) -> R$/;"	f
works	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/buffer_unordered.rs	/^fn works() {$/;"	f
works_1	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/futures_unordered.rs	/^fn works_1() {$/;"	f
works_2	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/futures_unordered.rs	/^fn works_2() {$/;"	f
would_block	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/lib.rs	/^fn would_block() -> sio::Error {$/;"	f
would_block	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/src/split.rs	/^fn would_block() -> io::Error {$/;"	f
would_block	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/tests/length_delimited.rs	/^fn would_block() -> io::Error {$/;"	f
write	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/src/buf/writer.rs	/^    fn write(&mut self, src: &[u8]) -> io::Result<usize> {$/;"	f
write	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/task_impl/data.rs	/^    fn write(&mut self, _bytes: &[u8]) {$/;"	f
write	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/examples/proxy.rs	/^    fn write(&mut self, buf: &[u8]) -> io::Result<usize> {$/;"	f
write	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/examples/sink.rs	/^fn write(socket: TcpStream) -> IoFuture<()> {$/;"	f
write	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/io/mod.rs	/^    fn write(&mut self, req: Self::In) -> Poll<(), io::Error>;$/;"	f
write	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/io/split.rs	/^    fn write(&mut self, buf: &[u8]) -> io::Result<usize> {$/;"	f
write	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/net/tcp.rs	/^    fn write(&mut self, buf: &[u8]) -> io::Result<usize> {$/;"	f
write	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/reactor/poll_evented.rs	/^    fn write(&mut self, buf: &[u8]) -> io::Result<usize> {$/;"	f
write	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/src/framed.rs	/^    fn write(&mut self, src: &[u8]) -> io::Result<usize> {$/;"	f
write	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/src/length_delimited.rs	/^    fn write(&mut self, src: &[u8]) -> io::Result<usize> {$/;"	f
write	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/src/split.rs	/^    fn write(&mut self, buf: &[u8]) -> io::Result<usize> {$/;"	f
write	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/tests/framed_write.rs	/^    fn write(&mut self, src: &[u8]) -> io::Result<usize> {$/;"	f
write	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/tests/length_delimited.rs	/^    fn write(&mut self, src: &[u8]) -> io::Result<usize> {$/;"	f
write	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/tests/support/mock.rs	/^    fn write(&mut self, _buf: &[u8]) -> io::Result<usize> {$/;"	f
write	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/tests/test_multiplex_deadlock.rs	/^        fn write(&mut self, message: Frame<Self::In, Self::BodyIn, Self::Error>) -> Poll<(), io::Error> {$/;"	f
write_all	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/io/write_all.rs	/^pub fn write_all<A, T>(a: A, buf: T) -> WriteAll<A, T>$/;"	f
write_all	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/src/write_all.rs	/^pub fn write_all<A, T>(a: A, buf: T) -> WriteAll<A, T>$/;"	f
write_big_endian	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.0.0/benches/bench.rs	/^            fn write_big_endian(b: &mut Bencher) {$/;"	f
write_big_endian	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.0.0/src/lib.rs	/^                fn write_big_endian() {$/;"	f
write_buf	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/net/tcp.rs	/^    fn write_buf<B: Buf>(&mut self, buf: &mut B) -> Poll<usize, io::Error> {$/;"	f
write_buf	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/src/length_delimited.rs	/^    fn write_buf<B: Buf>(&mut self, buf: &mut B) -> Poll<usize, io::Error> {$/;"	f
write_buf	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/src/lib.rs	/^    fn write_buf<B: Buf>(&mut self, buf: &mut B) -> Poll<usize, std_io::Error>$/;"	f
write_f32	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.0.0/src/lib.rs	/^    fn write_f32(buf: &mut [u8], n: f32) {$/;"	f
write_f32	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.0.0/src/new.rs	/^    fn write_f32<T: ByteOrder>(&mut self, n: f32) -> Result<()> {$/;"	f
write_f64	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.0.0/src/lib.rs	/^    fn write_f64(buf: &mut [u8], n: f64) {$/;"	f
write_f64	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.0.0/src/new.rs	/^    fn write_f64<T: ByteOrder>(&mut self, n: f64) -> Result<()> {$/;"	f
write_fmt	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/src/bytes.rs	/^    fn write_fmt(&mut self, args: fmt::Arguments) -> fmt::Result {$/;"	f
write_hits_backpressure	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/tests/framed_write.rs	/^fn write_hits_backpressure() {$/;"	f
write_i16	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.0.0/src/lib.rs	/^    fn write_i16(buf: &mut [u8], n: i16) {$/;"	f
write_i16	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.0.0/src/new.rs	/^    fn write_i16<T: ByteOrder>(&mut self, n: i16) -> Result<()> {$/;"	f
write_i32	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.0.0/src/lib.rs	/^    fn write_i32(buf: &mut [u8], n: i32) {$/;"	f
write_i32	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.0.0/src/new.rs	/^    fn write_i32<T: ByteOrder>(&mut self, n: i32) -> Result<()> {$/;"	f
write_i64	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.0.0/src/lib.rs	/^    fn write_i64(buf: &mut [u8], n: i64) {$/;"	f
write_i64	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.0.0/src/new.rs	/^    fn write_i64<T: ByteOrder>(&mut self, n: i64) -> Result<()> {$/;"	f
write_i8	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.0.0/src/new.rs	/^    fn write_i8(&mut self, n: i8) -> Result<()> {$/;"	f
write_in_body	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/multiplex/advanced.rs	/^    fn write_in_body(&mut self) -> io::Result<()> {$/;"	f
write_in_body	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/pipeline/advanced.rs	/^    fn write_in_body(&mut self) -> io::Result<bool> {$/;"	f
write_in_error	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/multiplex/advanced.rs	/^    fn write_in_error(&mut self,$/;"	f
write_in_frames	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/multiplex/advanced.rs	/^    fn write_in_frames(&mut self) -> io::Result<()> {$/;"	f
write_in_frames	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/pipeline/advanced.rs	/^    fn write_in_frames(&mut self) -> io::Result<()> {$/;"	f
write_in_message	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/multiplex/advanced.rs	/^    fn write_in_message(&mut self,$/;"	f
write_in_message	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/pipeline/advanced.rs	/^    fn write_in_message(&mut self, message: Result<Message<T::In, T::Stream>, T::Error>) -> io::Result<()> {$/;"	f
write_in_messages	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/multiplex/advanced.rs	/^    fn write_in_messages(&mut self) -> io::Result<()> {$/;"	f
write_int	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.0.0/src/lib.rs	/^    fn write_int(buf: &mut [u8], n: i64, nbytes: usize) {$/;"	f
write_int	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.0.0/src/new.rs	/^    fn write_int<T: ByteOrder>($/;"	f
write_little_endian	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.0.0/benches/bench.rs	/^            fn write_little_endian(b: &mut Bencher) {$/;"	f
write_little_endian	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.0.0/src/lib.rs	/^                fn write_little_endian() {$/;"	f
write_multi_frame_in_packet	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/tests/framed_write.rs	/^fn write_multi_frame_in_packet() {$/;"	f
write_native_endian	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.0.0/benches/bench.rs	/^            fn write_native_endian(b: &mut Bencher) {$/;"	f
write_native_endian	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.0.0/src/lib.rs	/^                fn write_native_endian() {$/;"	f
write_nothing_yields_nothing	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/tests/length_delimited.rs	/^fn write_nothing_yields_nothing() {$/;"	f
write_num_bytes	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.0.0/src/lib.rs	/^macro_rules! write_num_bytes {$/;"	d
write_single_frame_little_endian	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/tests/length_delimited.rs	/^fn write_single_frame_little_endian() {$/;"	f
write_single_frame_one_packet	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/tests/length_delimited.rs	/^fn write_single_frame_one_packet() {$/;"	f
write_single_frame_with_short_length_field	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/tests/length_delimited.rs	/^fn write_single_frame_with_short_length_field() {$/;"	f
write_single_frame_would_block	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/tests/length_delimited.rs	/^fn write_single_frame_would_block() {$/;"	f
write_single_multi_frame_multi_packet	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/tests/length_delimited.rs	/^fn write_single_multi_frame_multi_packet() {$/;"	f
write_single_multi_frame_one_packet	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/tests/length_delimited.rs	/^fn write_single_multi_frame_one_packet() {$/;"	f
write_str	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/src/bytes.rs	/^    fn write_str(&mut self, s: &str) -> fmt::Result {$/;"	f
write_u16	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.0.0/src/lib.rs	/^    fn write_u16(buf: &mut [u8], n: u16) {$/;"	f
write_u16	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.0.0/src/lib.rs	/^    fn write_u16(buf: &mut [u8], n: u16);$/;"	f
write_u16	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.0.0/src/new.rs	/^    fn write_u16<T: ByteOrder>(&mut self, n: u16) -> Result<()> {$/;"	f
write_u32	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.0.0/src/lib.rs	/^    fn write_u32(buf: &mut [u8], n: u32) {$/;"	f
write_u32	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.0.0/src/lib.rs	/^    fn write_u32(buf: &mut [u8], n: u32);$/;"	f
write_u32	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.0.0/src/new.rs	/^    fn write_u32<T: ByteOrder>(&mut self, n: u32) -> Result<()> {$/;"	f
write_u64	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.0.0/src/lib.rs	/^    fn write_u64(buf: &mut [u8], n: u64) {$/;"	f
write_u64	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.0.0/src/lib.rs	/^    fn write_u64(buf: &mut [u8], n: u64);$/;"	f
write_u64	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.0.0/src/new.rs	/^    fn write_u64<T: ByteOrder>(&mut self, n: u64) -> Result<()> {$/;"	f
write_u64	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/task_impl/data.rs	/^    fn write_u64(&mut self, u: u64) {$/;"	f
write_u8	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.0.0/src/new.rs	/^    fn write_u8(&mut self, n: u8) -> Result<()> {$/;"	f
write_uint	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.0.0/src/lib.rs	/^    fn write_uint(buf: &mut [u8], n: u64, nbytes: usize) {$/;"	f
write_uint	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.0.0/src/lib.rs	/^    fn write_uint(buf: &mut [u8], n: u64, nbytes: usize);$/;"	f
write_uint	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.0.0/src/new.rs	/^    fn write_uint<T: ByteOrder>($/;"	f
write_vec	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/io/mod.rs	/^    fn write_vec(&mut self, bufs: &[&IoVec]) -> io::Result<usize> {$/;"	f
write_vec	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/net/tcp.rs	/^    fn write_vec(&mut self, bufs: &[&IoVec]) -> io::Result<usize> {$/;"	f
writer	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/src/buf/buf_mut.rs	/^    fn writer(self) -> Writer<Self> where Self: Sized {$/;"	f
writing_chained	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.2/tests/test_chain.rs	/^fn writing_chained() {$/;"	f
wrote_frame	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-proto-0.1.1/src/streaming/multiplex/advanced.rs	/^    fn wrote_frame(&mut self) {$/;"	f
zero_write	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.6/src/io/write_all.rs	/^fn zero_write() -> io::Error {$/;"	f
zero_write	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.1/src/write_all.rs	/^fn zero_write() -> io::Error {$/;"	f
zip	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/src/stream/mod.rs	/^    fn zip<S>(self, other: S) -> Zip<Self, S>$/;"	f
zip	/Users/akito/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.13/tests/stream.rs	/^fn zip() {$/;"	f
